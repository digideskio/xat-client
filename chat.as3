// vim: ft=cs:foldmethod=marker:foldmarker={,}
package {
    import flash.display.*;

    public dynamic class wink extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class 10128 extends MovieClip {

        public var back:MovieClip;

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class Home extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;

    public dynamic class xDialog extends MovieClip {

        var DiaBack;
        var Background;
        var DiaBar;
        var Dia;
        public var sParent;

        public function xDialog(_arg1, _arg2:Number, _arg3:Number, _arg4:Number, _arg5:Number, _arg6:String, _arg7:String, _arg8:Number=0, _arg9=undefined){
            var _local11:*;
            var _local12:*;
            this.Dia = this;
            super();
            main.hint.HintOff();
            this.sParent = _arg1;
            var _local10:Number = 0;
            this.Background = xatlib.ButtonCurve2(0, todo.StageWidth, todo.StageHeight, 0, 0, 0, 0, 0);
            this.Background.alpha = 0.3;
            this.Background.addEventListener(MouseEvent.MOUSE_DOWN, this.Delete);
            this.Background.buttonMode = true;
            _arg1.addChild(this.Background);
            _arg1.addChild(this);
            if (isNaN(_arg2)){
                _arg4 = 300;
                if (_arg4 > (todo.StageWidth - 10)){
                    _arg4 = (todo.StageWidth - 10);
                };
                _arg5 = 170;
                if (_arg5 > (todo.StageHeight - 10)){
                    _arg5 = (todo.StageHeight - 10);
                };
                _arg2 = ((todo.StageWidth / 2) - (_arg4 / 2));
                _arg3 = ((todo.StageHeight / 2) - (_arg5 / 2));
            };
            this.DiaBack = new xBut(this, _arg2, _arg3, _arg4, _arg5, "", undefined, ((xBut.b_Panel | xBut.b_Border) | xBut.b_NoPress));
            if (((_arg6) && ((_arg6.length > 0)))){
                _local10 = xatlib.NY(30);
                if (_local10 < 23){
                    _local10 = 23;
                };
                if (_local10 > 30){
                    _local10 = 30;
                };
                this.DiaBar = new xBut(this, _arg2, _arg3, _arg4, _local10, (" " + _arg6), undefined, (((((xatlib.c_bl | xatlib.c_br) | xBut.b_LeftText) | xBut.b_Border) | xBut.b_NoPress) | xBut.b_mouseChild));
                _local11 = xatlib.AttachMovie(this, "close");
                _local12 = int(((_local10 - _local11.height) / 2));
                _local11.y = (_arg3 + _local12);
                _local11.x = (((_arg2 + _arg4) - _local11.width) - _local12);
                _local11.buttonMode = true;
                _local11.addEventListener(MouseEvent.MOUSE_DOWN, this.Delete);
            };
            if (((_arg7) && ((_arg7.length > 0)))){
                xatlib.createTextNoWrap(this.DiaBack.But, 5, _local10, (_arg4 - 10), ((_arg5 - _local10) - 30), _arg7, 0, 16777185, 100, 0, 18, "left", 2);
            };
            if ((_arg8 & 1)){
                this.Dia.Ok = new xBut(this, (_arg2 + int(((_arg4 - 100) / 2))), ((_arg3 + _arg5) - 30), 100, 25, xconst.ST(45), this.Delete);
            };
        }
        public function Delete(_arg1:MouseEvent=undefined){
            if (!this.sParent){
                return;
            };
            this.sParent.removeChild(this.Background);
            this.sParent.removeChild(this);
            this.sParent = null;
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.geom.*;

    public dynamic class smiley extends Sprite {

        public static const f_TopDog = 32;
        public static const f_Sub = 2;
        public static const f_NoCache = 64;
        public static const f_Hat = 8;
        public static const b_glow = 16;
        public static const f_Simple = 128;
        public static const b_fade = 4;
        public static const f_Reg = 1;
        public static const f_AllPowers = 16;

        public static var TickDict = new Dictionary(true);

        private var Master:Boolean = false;
        private var Parent;
        private var bf:int = 12;
        private var Frame;
        private var sc;
        private var bs:int = 20;
        public var Clicker;
        private var tik = 0;
        private var FrameStore;
        private var sm;
        private var mBaseSmiley;
        private var Index;
        private var mcFrame;

        public function smiley(_arg1, _arg2, _arg3=20){
            var _local4:*;
            super();
            _arg1.addChild(this);
            if (!_arg1.SA){
                _arg1.SA = (("(" + _arg2) + ")");
                _arg1.SF = 2;
            };
            if (_arg1.PwrCrc == undefined){
                _arg1.PwrCrc = 0;
            };
            this.sc = (_arg3 / 20);
            if (!todo.turbo){
                _arg1.SF = (_arg1.SF | f_NoCache);
            };
            this.Clicker = this;
            if (!(_arg1.SF & f_NoCache)){
                TickDict[this] = 1;
                this.Index = (((_arg1.SA + _arg1.PwrCrc) + "_") + _arg3);
                this.Parent = _arg1;
                this.Parent.addEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp, false, 0, true);
                this.mBaseSmiley = _arg2;
                mouseEnabled = false;
                this.mcFrame = new Sprite();
                this.mcFrame.mouseChildren = false;
                this.mcFrame.mouseEnabled = false;
                addChild(this.mcFrame);
                this.Clicker = new xSprite();
                this.Clicker.buttonMode = true;
                addChild(this.Clicker);
                this.Clicker.graphics.beginFill(0xFF0000, 0);
                this.Clicker.graphics.drawRect(-1, -1, 22, 22);
                this.Clicker.graphics.endFill();
                _local4 = cachedSprite.dic[this.Index];
                if (_local4){
                    _local4.Timeout = 0;
                    if (_local4.Pending){
                        return;
                    };
                    this.FrameStore = _local4.bd;
                    this.bs = this.FrameStore.height;
                    this.bf = (this.FrameStore.width / this.bs);
                    if ((_local4.Flags & cachedSprite.cs_RollOver)){
                        this.Clicker.addEventListener(MouseEvent.ROLL_OVER, this.RolloverHandler, false, 0, true);
                    };
                    return;
                };
                cachedSprite.dic[this.Index] = new cachedSprite();
                this.Master = true;
            };
            this.sm = new swfsmiley(_arg1, _arg2);
            if ((_arg1.SF & f_NoCache)){
                addChild(this.sm);
            };
        }
        public static function MasterTick(){
            var _local1:*;
            for (_local1 in TickDict) {
                _local1.tick();
            };
        }

        private function cleanUp(_arg1=0, _arg2:Boolean=true){
            var e:int = _arg1;
            var RemoveClicker:Boolean = _arg2;
            try {
                if (this.sm){
                    this.sm.cleanUp();
                    this.sm = undefined;
                };
                delete TickDict[this];
                if (RemoveClicker){
                    try {
                        this.Clicker.removeEventListener(MouseEvent.ROLL_OVER, this.RolloverHandler);
                    } catch(e) {
                    };
                };
                if (!this.Parent){
                    return;
                };
                if (((this.Frame) && (this.mcFrame))){
                    this.Frame.bitmapData.dispose();
                };
                this.Parent.removeEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp);
                this.Parent = undefined;
                if (((this.Master) && ((this.tik < this.bf)))){
                    delete cachedSprite.dic[this.Index];
                };
            } catch(e) {
            };
        }
        function RolloverHandler(_arg1:MouseEvent){
            if (((this.sm) && ((this.tik < this.bf)))){
                return;
            };
            if (this.sm){
                this.sm.NeedRoll = 2;
                return;
            };
            var _local2:* = this.Parent;
            this.cleanUp(0, false);
            _local2.SF = (_local2.SF | f_NoCache);
            this.sm = new swfsmiley(_local2, this.mBaseSmiley);
            this.sm.mouseEnabled = false;
            this.sm.mouseChildren = false;
            this.sm.NeedRoll = 2;
            this.mcFrame.x = (this.mcFrame.y = 0);
            this.mcFrame.addChild(this.sm);
        }
        private function tick(){
            var _local4:*;
            var _local5:*;
            var _local6:*;
            var _local1:* = cachedSprite.dic[this.Index];
            if (!_local1){
                cachedSprite.dic[this.Index] = new cachedSprite();
                this.Master = true;
                this.sm = new swfsmiley(this.Parent, this.mBaseSmiley);
                this.tik = 0;
                return;
            };
            var _local2:int = ((this.bs - (20 * this.sc)) / 2);
            this.tik++;
            _local1.Timeout = 0;
            if (!this.Master){
                if (_local1.Pending){
                    return;
                };
                if (!this.FrameStore){
                    this.tik = 0;
                    this.FrameStore = _local1.bd;
                    this.bs = this.FrameStore.height;
                    this.bf = (this.FrameStore.width / this.bs);
                    _local2 = ((this.bs - (20 * this.sc)) / 2);
                };
            } else {
                if (this.sm){
                    if (this.sm.tc <= 2){
                        this.tik = (this.sm.tc - 2);
                    };
                    if ((this.sm.Loading & 1)){
                        this.tik = -1;
                    };
                };
                if (this.tik < 0){
                    return;
                };
                if (this.tik == 0){
                    if ((this.Parent.SF & f_NoCache)){
                        delete cachedSprite.dic[this.Index];
                        delete TickDict[this];
                        addChild(this.sm);
                        return;
                    };
                    this.bs = ((this.sm.MaxW * this.sc) & 1048574);
                    this.bf = this.sm.Frames;
                    if (todo.FV < 10){
                        if (((((this.bs * this.bf) > 2880)) && ((this.bf == 72)))){
                            this.bf = 36;
                        };
                        while ((this.bs * this.bf) > 2880) {
                            this.bs = (this.bs - 6);
                        };
                    };
                    _local2 = ((this.bs - (20 * this.sc)) / 2);
                    this.FrameStore = new BitmapData((this.bs * this.bf), this.bs, true, 0xFFFFFF);
                    _local1.bd = this.FrameStore;
                    _local1.Pending = false;
                    if (this.sm.NeedRoll){
                        this.Clicker.addEventListener(MouseEvent.ROLL_OVER, this.RolloverHandler, false, 0, true);
                        _local1.Flags = (_local1.Flags | cachedSprite.cs_RollOver);
                    };
                };
                if (this.tik < this.bf){
                    _local4 = new Matrix();
                    if (((((!((this.sm.scaleX == 1))) || (!((this.sm.scaleY == 1))))) || (!((this.sc == 1))))){
                        _local4.scale((this.sm.scaleX * this.sc), (this.sm.scaleY * this.sc));
                    };
                    if (this.sm.rotation){
                        _local4.rotate((this.sm.rotation * (Math.PI / 180)));
                    };
                    _local4.translate((_local2 + this.sm.x), (_local2 + this.sm.y));
                    _local5 = new BitmapData(this.bs, this.bs, true, 0xFFFFFF);
                    _local5.draw(this.sm, _local4);
                    _local6 = null;
                    if (this.sm.alpha != 1){
                        _local6 = new BitmapData(this.bs, this.bs, true, (0xFFFFFF | (int((this.sm.alpha * 0xFF)) << 24)));
                    };
                    this.FrameStore.copyPixels(_local5, new Rectangle(0, 0, this.bs, this.bs), new Point((this.tik * this.bs), 0), _local6, new Point(0, 0), true);
                    if (_local6){
                        _local6.dispose;
                    };
                    _local5.dispose();
                    if (this.tik == (this.bf - 1)){
                        this.sm.cleanUp();
                        this.sm = undefined;
                        this.Master = false;
                    };
                };
            };
            if (!this.Frame){
                this.Frame = new Bitmap(new BitmapData(this.bs, this.bs, true, 0xFFFFFF));
                this.mcFrame.addChild(this.Frame);
                this.mcFrame.x = (this.mcFrame.y = -(_local2));
                this.mcFrame.mouseEnabled = false;
                this.mcFrame.mouseChildren = false;
            };
            var _local3:* = (this.tik % this.bf);
            this.Frame.bitmapData.fillRect(new Rectangle(0, 0, this.bs, this.bs), 0xFFFFFF);
            this.Frame.bitmapData.copyPixels(this.FrameStore, new Rectangle((_local3 * this.bs), 0, this.bs, this.bs), new Point(0, 0), null, null, true);
            if (this.bf == 1){
                delete TickDict[this];
            };
        }

    }
}//package 
﻿package chat_fla {
    import flash.display.*;
    import flash.events.*;
    import adobe.utils.*;
    import flash.accessibility.*;
    import flash.desktop.*;
    import flash.errors.*;
    import flash.external.*;
    import flash.filters.*;
    import flash.geom.*;
    import flash.media.*;
    import flash.net.*;
    import flash.printing.*;
    import flash.profiler.*;
    import flash.sampler.*;
    import flash.system.*;
    import flash.text.*;
    import flash.text.engine.*;
    import flash.ui.*;
    import flash.utils.*;
    import flash.xml.*;

    public dynamic class MainTimeline extends MovieClip {

        public var StageHeight;
        public var Hold;
        public var StageWidth;
        public var Logo:xatsat;
        public var Mask;
        public var S1;
        public var Last;
        public var S2;

        public function MainTimeline(){
            addFrameScript(0, this.frame1, 2, this.frame3);
        }
        public function tick(_arg1):void{
            var _local2:Number = ((this.loaderInfo.bytesLoaded / this.loaderInfo.bytesTotal) * 100);
            this.Hold++;
            if (this.Hold > 12){
                this.DoMask(this.Mask, _local2);
            };
            if (this.loaderInfo.bytesLoaded == this.loaderInfo.bytesTotal){
                removeChild(this.Logo);
                this.removeEventListener(Event.ENTER_FRAME, this.tick);
                this.gotoAndStop(3);
            };
        }
        function frame1(){
            stage.scaleMode = StageScaleMode.NO_SCALE;
            stage.align = StageAlign.TOP_LEFT;
            stage.showDefaultContextMenu = false;
            this.StageWidth = stage.stageWidth;
            this.StageHeight = stage.stageHeight;
            this.S1 = (this.StageWidth / 640);
            this.S2 = (this.StageHeight / 480);
            if (this.S2 < this.S1){
                this.S1 = this.S2;
            };
            this.Logo.scaleX = (this.Logo.scaleY = (this.S1 * 0.75));
            this.Logo.y = ((this.StageHeight - this.Logo.height) / 2);
            this.Logo.visible = false;
            this.Mask = new Sprite();
            this.Last = 0;
            this.Hold = 0;
            addChild(this.Mask);
            this.Logo.mask = this.Mask;
            this.addEventListener(Event.ENTER_FRAME, this.tick);
            stop();
        }
        function frame3(){
            stop();
        }
        public function DoMask(_arg1, _arg2:Number){
            var mc:* = _arg1;
            var pc:* = _arg2;
            this.Logo.visible = true;
            var zx:* = int((200 * this.S1));
            var zy:* = (this.Logo.y + int((90 * this.S1)));
            var max:* = (zy * 2);
            var a1:* = (((2 * 3.14159) / 100) * pc);
            var _local4 = mc;
            with (_local4) {
                graphics.clear();
                graphics.lineStyle(0, 0, 0);
                graphics.beginFill(0xFFFF, 1);
                graphics.moveTo(zx, zy);
                graphics.lineTo(zx, (zy - max));
                graphics.lineTo((zx + max), (zy - max));
                if (a1 > (Math.PI / 2)){
                    graphics.lineTo((zx + max), (zy + max));
                };
                if (a1 > Math.PI){
                    graphics.lineTo((zx - max), (zy + max));
                };
                if (a1 > ((Math.PI * 3) / 2)){
                    graphics.lineTo((zx - max), (zy - max));
                };
                graphics.lineTo((zx + (max * Math.sin(a1))), (zy - (max * Math.cos(a1))));
                graphics.moveTo(zx, zy);
                graphics.endFill();
            };
        }

    }
}//package chat_fla 
﻿package {
    import flash.display.*;

    public dynamic class GetX extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class mad extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class SoundOff extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class more extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class sc_dn extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;

    public class helpdialog extends Sprite {

        public static var mchelpbackground;
        public static var bhelpscrollmc;
        public static var bph;
        public static var mchelpbackb;
        public static var bpw;
        public static var mchelpbackmask;
        public static var bpy;
        public static var HelpText = undefined;
        public static var bpx;
        public static var helpinc = 0;
        public static var mchelpback;

        static function onHelpScrollChange(){
            var _local1:* = ((helpinc - bph) + 4);
            if (_local1 < 0){
                _local1 = 0;
            };
            bhelpscrollmc.Scr_size = _local1;
            var _local2:* = bhelpscrollmc.Scr_position;
            mchelpback.y = -(_local2);
        }
        public static function HelpDialog(_arg1=undefined){
            main.DialogClose();
            main.DialogOpen = 5;
            HelpText = undefined;
            var _local2:* = (((GetLangDom() + ((((todo.w_lang == undefined)) || ((todo.w_lang == 0)))) ? "help" : (String(todo.w_lang) + ".h")) + ".xml?") + todo.w_langv);
            xatlib.LoadVariables(_local2, onLoaded);
            mchelpbackground = new xDialog(main.dialogs, xatlib.NX(20), xatlib.NY(20), xatlib.NX(600), xatlib.NY(440), (" " + xconst.ST(14)), undefined, 0);
            var _local3:* = mchelpbackground.Dia;
            _local3.mcreturn2 = new xBut(mchelpbackground, xatlib.NX(240), xatlib.NY(420), xatlib.NX(160), xatlib.NY(30), xconst.ST(45), mchelpbackground.Delete);
            _local3.mcreturn2.But.alpha = 0.9;
            bpw = xatlib.NX(580);
            bph = (xatlib.NY(390) - 40);
            bpx = xatlib.NX(30);
            bpy = (xatlib.NY(20) + 40);
            mchelpbackb = xatlib.AddBackground(mchelpbackground, bpx, bpy, bpw, bph);
            mchelpback = new MovieClip();
            mchelpbackb.addChild(mchelpback);
            mchelpback.Width = bpw;
            mchelpbackmask = xatlib.AddBackground(mchelpbackground, (bpx + 1), (bpy + 1), ((bpw - 2) - xatlib.NX(16)), (bph - 2), 0);
            mchelpback.mask = mchelpbackmask;
            bhelpscrollmc = new xScroll(mchelpbackground, ((bpx + bpw) - xatlib.NX(16)), bpy, xatlib.NX(16), bph, xatlib.NX(16), xatlib.NX(32), 30, (10 * 100), (0 * 100), onHelpScrollChange);
        }
        static function Delete(){
        }
        static function onLoaded(_arg1:Event){
            var _local6:*;
            var _local2:URLLoader = URLLoader(_arg1.target);
            var _local3:URLVariables = new URLVariables(_local2.data.substr(1));
            var _local4:* = _local3.HelpText;
            helpinc = 0;
            AddHelpLine("http://xat.com/wiki for detailed help.");
            AddHelpLine("");
            _local4 = _local4.substr(1);
            var _local5:* = 0;
            while (_local5 < 500) {
                _local6 = _local4.indexOf(";=");
                if (_local6 == -1){
                    break;
                };
                AddHelpLine(_local4.substr(0, _local6));
                _local4 = _local4.substr((_local6 + 2));
                _local5++;
            };
            AddHelpLine("");
            AddHelpLine((chat.cVersion + (chat.debug) ? " debug" : ""));
        }
        public static function GetLangDom(){
            var _local1 = "http://www";
            if (xatlib.xInt(todo.w_lang) > 10000){
                _local1 = (_local1 + "1.xatech");
            } else {
                _local1 = (_local1 + ".xat");
            };
            _local1 = (_local1 + ".com/web_gear/ever/lang/");
            return (_local1);
        }
        static function AddHelpLine(_arg1:String){
            var _local2:* = new MovieClip();
            mchelpback.addChild(_local2);
            _local2.x = 5;
            helpinc = (helpinc + (4 + xmessage.AddMessageToMc(_local2, 4, _arg1, 0, (mchelpback.Width - 30), helpinc)));
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class Speaker extends MovieClip {

        public var SoundIsOff:SoundOff;

    }
}//package 
﻿package {
    import flash.media.*;

    public dynamic class dingdongsnd extends Sound {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class bubble extends MovieClip {

        public var back:MovieClip;

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class All extends MovieClip {

    }
}//package 
﻿package {
    import flash.xml.*;
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.filters.*;
    import flash.system.*;

    public class xatlib {

        public static const c_NoCol:Number = (128 << 9);
        public static const c_inv:Number = (64 << 8);
        public static const c_bl:Number = (4 << 8);
        public static const c_br:Number = (8 << 8);
        public static const c_solid:Number = (128 << 8);
        public static const c_nolb:Number = (32 << 8);
        public static const c_tl:Number = (1 << 8);
        public static const c_tr:Number = (2 << 8);
        public static const c_nolt:Number = (16 << 8);

        public static var FastFind1 = new Object();

        public static function MakeGlow(_arg1, _arg2=3, _arg3=2){
            var _local4:GlowFilter = new GlowFilter(_arg1, 0.7, _arg3, _arg3, 6, _arg2, false, false);
            return ([_local4]);
        }
        public static function DecodeColor(_arg1, _arg2=true, _arg3=true, _arg4=true, _arg5=true){
            var R:* = undefined;
            var G:* = undefined;
            var B:* = undefined;
            var H:* = undefined;
            var S:* = undefined;
            var L:* = undefined;
            var c:* = undefined;
            var a:* = undefined;
            var ch:* = undefined;
            var hcol:* = undefined;
            var dR:* = undefined;
            var dG:* = undefined;
            var dB:* = undefined;
            var b:* = undefined;
            var str:* = _arg1;
            var rp:Boolean = _arg2;
            var gp:Boolean = _arg3;
            var bp:Boolean = _arg4;
            var lp:Boolean = _arg5;
            var Hue:* = function (_arg1, _arg2, _arg3){
                if (_arg3 < 0){
                    _arg3 = (_arg3 + 1);
                };
                if (_arg3 > 1){
                    _arg3--;
                };
                if ((6 * _arg3) < 1){
                    return ((_arg1 + (((_arg2 - _arg1) * 6) * _arg3)));
                };
                if ((2 * _arg3) < 1){
                    return (_arg2);
                };
                if ((3 * _arg3) < 2){
                    return ((_arg1 + (((_arg2 - _arg1) * ((2 / 3) - _arg3)) * 6)));
                };
                return (_arg1);
            };
            if (str == undefined){
                return (undefined);
            };
            if ((((((((rp == false)) && ((gp == false)))) && ((bp == false)))) && ((lp == false)))){
                return (undefined);
            };
            str = str.toLowerCase();
            var rc:* = (str.split("r").length - 1);
            var gc:* = (str.split("g").length - 1);
            var bc:* = (str.split("b").length - 1);
            var lc:* = (str.split("+").length - 1);
            var dc:* = (str.split("-").length - 1);
            var sL:* = 0.5;
            if ((((((((rc == 0)) && ((gc == 0)))) && ((lc == 0)))) && ((dc == 0)))){
                c = 0;
                a = 0;
                while (a < str.length) {
                    ch = str.charAt(a);
                    c = ((((((ch >= "0")) && ((ch <= "9")))) || ((((ch >= "a")) && ((ch <= "f")))))) ? (c + 1) : 0;
                    if (c == 6){
                        hcol = parseInt(str.substr(((a - c) + 1), 6), 16);
                        if (((((((!((rp == false))) && (!((gp == false))))) && (!((bp == false))))) && (!((lp == false))))){
                            return (hcol);
                        };
                        bc = (hcol & 0xFF);
                        gc = ((hcol >> 8) & 0xFF);
                        rc = ((hcol >> 16) & 0xFF);
                        var _local7:int;
                        dc = _local7;
                        lc = _local7;
                        if (lp != false){
                            sL = ((Math.min(rc, Math.min(gc, bc)) + Math.max(rc, Math.max(gc, bc))) / 0x0200);
                        };
                        break;
                    };
                    a = (a + 1);
                };
            };
            if ((((((((((rc == 0)) && ((gc == 0)))) && ((bc == 0)))) && ((lc == 0)))) && ((dc == 0)))){
                return (undefined);
            };
            if (rp == false){
                rc = 0;
            };
            if (gp == false){
                gc = 0;
            };
            if (bp == false){
                bc = 0;
            };
            if (lp == false){
                _local7 = 0;
                dc = _local7;
                lc = _local7;
            };
            if ((((((rc == 0)) && ((gc == 0)))) && ((bc == 0)))){
                _local7 = 1;
                bc = _local7;
                gc = _local7;
                rc = _local7;
            };
            var Rn:* = (rc / ((rc + gc) + bc));
            var Gn:* = (gc / ((rc + gc) + bc));
            var Bn:* = (bc / ((rc + gc) + bc));
            var min:* = Math.min(Rn, Math.min(Gn, Bn));
            var max:* = Math.max(Rn, Math.max(Gn, Bn));
            var d:* = (max - min);
            L = ((max + min) / 2);
            if (d == 0){
                _local7 = 0;
                S = _local7;
                H = _local7;
            } else {
                S = ((L < 0.5)) ? (d / (max + min)) : (d / ((2 - max) - min));
                dR = ((((max - Rn) / 6) + (d / 2)) / d);
                dG = ((((max - Gn) / 6) + (d / 2)) / d);
                dB = ((((max - Bn) / 6) + (d / 2)) / d);
                if (Rn == max){
                    H = (dB - dG);
                } else {
                    if (Gn == max){
                        H = (((1 / 3) + dR) - dB);
                    } else {
                        if (Bn == max){
                            H = (((2 / 3) + dG) - dR);
                        };
                    };
                };
                if (H < 0){
                    H = (H + 1);
                };
                if (H > 1){
                    H = (H - 1);
                };
            };
            L = ((sL + (0.0625 * lc)) - (0.0625 * dc));
            if (L < 0){
                L = 0;
            };
            if (L > 1){
                L = 1;
            };
            if (S == 0){
                _local7 = L;
                B = _local7;
                G = _local7;
                R = _local7;
            } else {
                a = ((L < 0.5)) ? (L * (1 + S)) : ((L + S) - (S * L));
                b = ((2 * L) - a);
                R = Hue(b, a, (H + (1 / 3)));
                G = Hue(b, a, H);
                B = Hue(b, a, (H - (1 / 3)));
            };
            R = Math.round((0xFF * R));
            G = Math.round((0xFF * G));
            B = Math.round((0xFF * B));
            return ((((R << 16) + (G << 8)) + B));
        }
        public static function CountLinks(_arg1:String, _arg2:Number=0){
            var _local5:*;
            var _local6:*;
            if (_arg1 == null){
                return (null);
            };
            var _local3:Array = new Array();
            var _local4:* = 0;
            _local3 = _arg1.split(" ");
            _local5 = 0;
            while (_local5 < _local3.length) {
                _local6 = WordIsLink(_local3[_local5]);
                if (_local6){
                    _local4++;
                    if (_arg2){
                        return (_local6);
                    };
                };
                _local5++;
            };
            return (_local4);
        }
        public static function searchreplace(_arg1, _arg2, _arg3, _arg4=undefined){
            var _local6:*;
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local5:* = 0;
            while (_local5 < _arg3.length) {
                _local6 = _arg3;
                if (_arg4 != 1){
                    _local6 = _arg3.toLowerCase();
                };
                _local7 = _local6.indexOf(_arg1, _local5);
                if (_local7 == -1){
                    break;
                };
                _local8 = _arg3.substr(0, _local7);
                _local9 = _arg3.substr((_local7 + _arg1.length), _arg3.length);
                _arg3 = ((_local8 + _arg2) + _local9);
                _local5 = (_local8.length + _arg2.length);
            };
            return (_arg3);
        }
        public static function WordIsLink(_arg1:String):String{
            var _local2:String = _arg1.toLowerCase();
            if (_local2.indexOf("http://") >= 0){
                return (_arg1);
            };
            var _local3:Boolean;
            var _local4:Number = 0;
            if (_local2.indexOf("www.") >= 0){
                _local3 = true;
            };
            var _local5:Number = _local2.indexOf("/");
            if (_local5 == -1){
                _local5 = _local2.length;
            };
            if (_local2.charAt((_local5 - 1)) == "."){
                _local4 = 2;
            };
            if (_local2.charAt((_local5 - 2)) == "."){
                _local4 = 2;
            };
            if (_local2.charAt((_local5 - 3)) == "."){
                _local4++;
            };
            if (_local2.charAt((_local5 - 4)) == "."){
                _local4++;
            };
            if (_local2.charAt((_local5 - 5)) == "."){
                _local4++;
            };
            if (_local4 == 1){
                _local3 = true;
            };
            if (_local3){
                return (("http://" + CleanText(_arg1)));
            };
            return (undefined);
        }
        public static function AddBackground(_arg1, _arg2:Number, _arg3:Number, _arg4:Number, _arg5:Number, _arg6=0):Sprite{
            var _local7:* = todo.ButCol;
            var _local8:* = 0.4;
            if ((_arg6 & c_NoCol)){
                _local7 = 0xFFFFFF;
            };
            if ((_arg6 & c_solid)){
                _local7 = 0xCCCCCC;
                _local8 = 1;
            };
            var _local9:* = 0xFFFFFF;
            var _local10:* = 0.4;
            var _local11:* = 1;
            if ((_arg6 & (128 << 10))){
                _local9 = 0x808080;
                _local10 = 1;
                _local11 = undefined;
            };
            var _local12:* = ButtonCurve2(8, _arg4, _arg5, _arg6, _local11, _local7, _local8, _local9, _local10);
            _local12.x = _arg2;
            _local12.y = _arg3;
            _arg1.addChild(_local12);
            return (_local12);
        }
        public static function GroupUrl(){
            var _local1:* = (xconst.usedomain + "/");
            if ((((todo.w_useroom == todo.w_room)) && (!((global.gn == null))))){
                _local1 = (_local1 + global.gn);
            } else {
                if (((!((todo.w_useroom == todo.w_room))) && (!((todo.BackVars[1] == undefined))))){
                    _local1 = (_local1 + todo.BackVars[1]);
                } else {
                    _local1 = (_local1 + (("chat/room/" + todo.w_useroom) + "/"));
                };
            };
            return (_local1);
        }
        public static function LoadVariables(_arg1, _arg2=undefined, _arg3=undefined, _arg4=undefined){
            var _local5:URLRequest = new URLRequest();
            _local5.url = _arg1;
            if (_arg4){
                _local5.method = URLRequestMethod.POST;
            } else {
                _local5.method = URLRequestMethod.GET;
            };
            if (_arg3){
                _local5.data = _arg3;
            };
            var _local6:URLLoader = new URLLoader();
            _local6.load(_local5);
            if (_arg2){
                _local6.addEventListener(Event.COMPLETE, _arg2);
            };
            return (_local6);
        }
        public static function UnfairFindAnotherGroup(_arg1:MouseEvent=undefined){
            UnfairPopupClose();
            var _local2:* = (xconst.usedomain + "/groups");
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(8), _local2);
        }
        public static function RemoveCR(_arg1:Event){
            var _local4:*;
            var _local2:* = _arg1.currentTarget;
            var _local3:* = 0;
            while (_local3 < _local2.text.length) {
                _local4 = _local2.text.charAt(_local3);
                if ((((_local4 == "\r")) || ((_local4 == ">")))){
                    _local2.text = (_local2.text.substr(0, _local3) + _local2.text.substr((_local3 + 1)));
                };
                _local3++;
            };
        }
        public static function Replace(_arg1, _arg2, _arg3){
            var _local4:* = _arg1.split(_arg2);
            return (_local4.join(_arg3));
        }
        public static function Register_Link(_arg1){
            var _local2:*;
            _local2 = (xconst.usedomain + "/web_gear/chat/register.php");
            if (_arg1 != undefined){
                _local2 = (_local2 + ((((("?UserId=" + todo.w_userno) + "&k2=") + todo.w_k2) + "&mode=") + _arg1));
            };
            return (_local2);
        }
        public static function XMLOrder(_arg1:XMLDocument, _arg2:Array):String{
            var _local4:*;
            var _local5:*;
            var _local3 = (("<" + _arg1.firstChild.nodeName.toString()) + " ");
            for (_local4 in _arg2) {
                if (_arg1.firstChild.attributes[_arg2[_local4]] != undefined){
                    _local5 = _arg1.firstChild.attributes[_arg2[_local4]].toString();
                    _local5 = searchreplace("&", "&amp;", _local5);
                    _local5 = searchreplace("\"", "&quot;", _local5);
                    _local5 = searchreplace("'", "&apos;", _local5);
                    _local5 = searchreplace("<", "&lt;", _local5);
                    _local5 = searchreplace(">", "&gt;", _local5);
                    _local3 = (_local3 + (((_arg2[_local4] + "=\"") + _local5) + "\" "));
                };
            };
            _local3 = (_local3 + "/>");
            return (_local3);
        }
        public static function ButtonCurve2(_arg1:Number, _arg2:Number, _arg3:Number, _arg4:Number=0, _arg5:Number=1, _arg6:Number=0xFFFFFF, _arg7:Number=1, _arg8:Number=0xFFFFFF, _arg9:Number=1):Sprite{
            var _local10:* = new MovieClip();
            var _local11:* = _arg1;
            if (_arg2 < (_local11 * 2)){
                _local11 = int((_arg2 / 2));
            };
            if (_arg3 < (_local11 * 2)){
                _local11 = int((_arg3 / 2));
            };
            var _local12:* = _local11;
            var _local13:* = _local11;
            var _local14:* = _local11;
            var _local15:* = _local11;
            if ((_arg4 & c_tl)){
                _local15 = 0;
            };
            if ((_arg4 & c_tr)){
                _local12 = 0;
            };
            if ((_arg4 & c_bl)){
                _local14 = 0;
            };
            if ((_arg4 & c_br)){
                _local13 = 0;
            };
            var _local16:uint = 100;
            _local10.graphics.beginFill(_arg8, _arg9);
            _local10.graphics.lineStyle(_arg5, _arg6, _arg7, true, "none", "none", "round", 1);
            if ((_arg4 & c_inv)){
                _local10.graphics.moveTo(todo.tpw, 0);
            } else {
                _local10.graphics.moveTo((_local15 + 0), 0);
            };
            if ((_arg4 & c_nolt)){
                _local10.graphics.lineStyle(0, 0, 0);
            } else {
                _local10.graphics.lineStyle(_arg5, _arg6, _arg7, true, "none", "none", "round", 1);
            };
            _local10.graphics.lineTo((_arg2 - _local12), 0);
            if (_local12 > 0){
                _local10.graphics.curveTo(_arg2, 0, _arg2, _local12);
            };
            _local10.graphics.lineStyle(_arg5, _arg6, _arg7, true, "none", "none", "round", 1);
            _local10.graphics.lineTo(_arg2, (_arg3 - _local13));
            if ((_arg4 & c_nolb)){
                _local10.graphics.lineStyle(0, 0, 0);
            } else {
                _local10.graphics.lineStyle(_arg5, _arg6, _arg7, true, "none", "none", "round", 1);
            };
            if (_local13 > 0){
                _local10.graphics.curveTo(_arg2, _arg3, (_arg2 - _local13), _arg3);
            };
            _local10.graphics.lineTo(_local14, _arg3);
            _local10.graphics.lineStyle(_arg5, _arg6, _arg7, true, "none", "none", "round", 1);
            _local10.graphics.curveTo(0, _arg3, 0, (_arg3 - _local14));
            _local10.graphics.lineStyle(_arg5, _arg6, _arg7, true, "none", "none", "round", 1);
            _local10.graphics.lineTo(0, _local15);
            _local10.graphics.curveTo(0, 0, _local15, 0);
            if ((_arg4 & c_inv)){
                _local10.graphics.lineTo(-(todo.tpw), 0);
                _local10.graphics.lineTo(-(todo.tpw), 50);
                _local10.graphics.lineTo(todo.tpw, 50);
                _local10.graphics.lineTo(todo.tpw, 0);
            };
            _local10.graphics.endFill();
            return (_local10);
        }
        public static function UrlPopup(_arg1:String, _arg2:String, _arg3:String=undefined){
            var _local16:*;
            UnfairPopupClose();
            var _local4:* = undefined;
            if (_arg3 == undefined){
                _arg3 = "";
            } else {
                _arg3 = (_arg3 + "\n");
            };
            var _local5:* = (main.box_layer.mcPopup = new xDialog(main.box_layer, _local4, _local4, _local4, _local4, _arg1, (_arg3 + _arg2), 0, UnfairPopupClose));
            var _local6:* = _local5.DiaBack.width;
            var _local7:* = _local5.DiaBack.height;
            var _local8:* = _local5.DiaBack.x;
            var _local9:* = _local5.DiaBack.y;
            var _local10:* = 8;
            var _local11:* = int((_local6 / ((_local10 * 2) + 3)));
            var _local12:* = int(((_local6 * _local10) / ((_local10 * 2) + 3)));
            var _local13:* = _local12;
            var _local14:* = 22;
            var _local15:* = new xBut(_local5, (((_local8 + _local6) - _local11) - _local12), (((_local9 + _local7) - _local14) - 20), _local12, _local14, xconst.ST(102), UnfairPopupClose);
            if (_arg2.length > 0){
                _local16 = new xBut(_local5, (_local8 + _local11), (((_local9 + _local7) - _local14) - 20), _local13, _local14, xconst.ST(104), mccopyurl_onRelease3);
                _local16.HomePage = _arg2;
            };
        }
        public static function CleanMessage(_arg1:String):String{
            var _local3:Number;
            var _local4:Number;
            var _local5:String;
            var _local2 = "";
            _local3 = 0;
            while (_local3 < _arg1.length) {
                _local4 = _arg1.charCodeAt(_local3);
                _local5 = _arg1.charAt(_local3);
                if (_local5 == "\t"){
                    _local2 = (_local2 + " ");
                } else {
                    if (_local4 < 32){
                    } else {
                        _local2 = (_local2 + _local5);
                    };
                };
                _local3++;
            };
            return (_local2);
        }
        public static function GeneralMessage(_arg1:String="", _arg2:String="", _arg3=1){
            var _local4:*;
            if (main.box_layer.GeneralMessageH){
                main.box_layer.GeneralMessageH.Delete();
            };
            main.box_layer.GeneralMessageH = undefined;
            if (((!((_arg1.length == 0))) || (!((_arg2.length == 0))))){
                _local4 = undefined;
                main.box_layer.GeneralMessageH = new xDialog(main.box_layer, _local4, _local4, _local4, _local4, _arg1, _arg2, _arg3);
            };
        }
        public static function StripSmilies(_arg1){
            var _local3:*;
            var _local5:*;
            var _local2:* = "";
            var _local4:* = false;
            _local3 = 0;
            while (_local3 < _arg1.length) {
                _local5 = _arg1.charAt(_local3);
                if (((!(_local4)) && (!((_local5 == "("))))){
                    _local2 = (_local2 + _local5);
                } else {
                    if (_local5 == "("){
                        _local4 = true;
                    } else {
                        if (_local5 == ")"){
                            _local4 = false;
                        };
                    };
                };
                _local3++;
            };
            if (_local2.length == 0){
                return (_arg1);
            };
            return (_local2);
        }
        public static function ParseAv(_arg1):String{
            if (_arg1.substr(0, 7) == "http://"){
                return (_arg1);
            };
            var _local2:Number = xInt(_arg1);
            if ((((_local2 > 0)) && ((_local2 <= 1758)))){
                return (UrlAv(_local2));
            };
            return ("_");
        }
        public static function Blend(_arg1, _arg2, _arg3, _arg4, _arg5){
            if (_arg1 <= _arg2){
                return (_arg4);
            };
            if (_arg1 >= _arg3){
                return (_arg5);
            };
            var _local6:* = int(((((_arg1 - _arg2) / (_arg3 - _arg2)) * (_arg5 - _arg4)) + _arg4));
            return (_local6);
        }
        public static function FixLI(_arg1){
            _arg1 = searchreplace("I", "i", _arg1, 1);
            _arg1 = searchreplace("l", "L", _arg1, 1);
            return (_arg1);
        }
        public static function GetUsername(_arg1:Number, _arg2=undefined, _arg3=undefined, _arg4=undefined):String{
            var _local5:* = "";
            var _local6:* = FindUser(_arg1);
            if (_local6 != -1){
                if (_arg2){
                    if (todo.Users[_local6].registered){
                        _local5 = todo.Users[_local6].registered;
                    };
                } else {
                    _local5 = todo.Users[_local6].n;
                };
            };
            if (_arg3){
                if (((!((_local6 == -1))) && (!((todo.Users[_local6].s == undefined))))){
                    _local5 = (_local5 + ("\n" + todo.Users[_local6].s));
                };
                if (_arg1 > 101){
                    _local5 = (_local5 + "\n(NOT xat staff!)");
                } else {
                    _local5 = (_local5 + "\n(xat staff)");
                };
                if (_arg4 != undefined){
                    _local5 = (_local5 + " [");
                    _local6 = FindUser(_arg4);
                    if (todo.Users[_local6].registered){
                        _local5 = (_local5 + todo.Users[_local6].registered);
                    } else {
                        _local5 = (_local5 + _arg4);
                    };
                    _local5 = (_local5 + "]");
                };
            };
            return (_local5);
        }
        public static function mccopyurl_onRelease3(_arg1:MouseEvent){
            System.setClipboard(_arg1.currentTarget.HomePage);
            UnfairPopupClose();
            GeneralMessage(xconst.ST(105), xconst.ST(106));
        }
        public static function UpdateDJ(_arg1){
            var _local4:*;
            _arg1 = xInt(_arg1);
            var _local2:* = todo.Users.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                _local4 = undefined;
                if (_arg1 == xInt(todo.Users[_local3].u)){
                    _local4 = true;
                };
                if (((((_local4) && (!(todo.Users[_local3].DJ)))) || (((!(_local4)) && (todo.Users[_local3].DJ))))){
                    todo.Users[_local3].DJ = _local4;
                    xmessage.DeleteOneUserMc(_local3);
                };
                _local3++;
            };
        }
        public static function GotoXat(_arg1){
            var _local2:* = ((((xconst.usedomain + "/chat/room/") + todo.w_useroom) + "/?p=0&ss=") + _arg1);
            getURL(_local2, "_blank");
            UrlPopup(xconst.ST(8), _local2);
        }
        public static function PurgeMessageFromUser(_arg1:Number){
            var _local2:* = todo.Message.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.Message[_local3].u == _arg1){
                    xmessage.DeleteOneMessageMc(_local3);
                };
                _local3++;
            };
        }
        public static function getURL(_arg1, _arg2){
            var url:* = _arg1;
            var window:* = _arg2;
            var request:* = new URLRequest(url);
            try {
                navigateToURL(request);
            } catch(e:Error) {
            };
        }
        public static function Register_onRelease(_arg1){
            var _local2:* = "";
            if (_arg1 > 0){
                _local2 = "&b=1";
            };
            profile.mcprofilebackground_close();
            var _local3:* = (Register_Link(1) + _local2);
            getURL(_local3, "_blank");
            UrlPopup(xconst.ST(8), _local3, undefined);
        }
        public static function mccopyurl_onRelease2(_arg1:MouseEvent=undefined){
            var _local2:URLVariables = new URLVariables();
            _local2.d = network.UnfairMessage;
            _local2.i = network.UnfairFile;
            xatlib.LoadVariables("http://web.xat.com/report/data.php", undefined, _local2, 1);
            UnfairPopupClose();
            var _local3:* = ((("http://web.xat.com/report/report.php?i=" + network.UnfairFile) + "&g=") + network.UnfairGroupName);
            getURL(_local3, "_blank");
            UrlPopup(xconst.ST(8), _local3);
        }
        public static function CleanAv(_arg1){
            var _local6:Number;
            var _local2:Number = xInt(_arg1);
            if ((((_local2 > 0)) && ((_local2 <= 1758)))){
                return (_local2);
            };
            if (_local2 < 0){
                return ("");
            };
            var _local3:String = _arg1.toLowerCase();
            var _local4 = "/web_gear/chat/av/";
            if (_local3.indexOf(".swf") != -1){
                return ("");
            };
            var _local5:* = _local3.indexOf(_local4);
            if (_local5 >= 0){
                _local6 = parseInt(_local3.substr((_local5 + _local4.length)));
                if (_local6 > 0){
                    return (_local6);
                };
            };
            return (_arg1);
        }
        public static function NameNoXat(_arg1, _arg2=undefined){
            var _local4:*;
            var _local6:*;
            var _local7:*;
            var _local8:*;
            var _local9:Array;
            var _local10:String;
            var _local11:*;
            var _local12:*;
            var _local13:*;
            var _local14:*;
            if (_arg1 == null){
                return (null);
            };
            _arg1 = _arg1.split("##")[0];
            var _local3:Array = _arg1.split("");
            var _local5:* = _local3.length;
            _arg1 = "";
            _local11 = 0;
            while (_local11 < _local5) {
                _local7 = _local3[_local11];
                _local8 = _local7.charCodeAt();
                if ((((_local8 >= 28)) && ((_local8 <= 31)))){
                    _local7 = "_";
                } else {
                    if (_local7 == "("){
                        _local4 = true;
                    } else {
                        if (_local7 == ")"){
                            _local4 = false;
                        } else {
                            if ((((_local8 >= 127)) && ((_local8 <= 159)))){
                                _local7 = "_";
                            } else {
                                if ((((_local7 == " ")) || (((!(_local4)) && ((_local7 == "#")))))){
                                    _local7 = "_";
                                };
                            };
                        };
                    };
                };
                if (_local8 > 0xFF){
                    if ((((_local7 == "Χ")) || ((_local7 == "Х")))){
                        _local7 = "X";
                    } else {
                        if ((((_local7 == "Α")) || ((_local7 == "А")))){
                            _local7 = "A";
                        } else {
                            if ((((_local7 == "Τ")) || ((_local7 == "Т")))){
                                _local7 = "T";
                            } else {
                                if (_local7 == "х"){
                                    _local7 = "x";
                                } else {
                                    if (_local7 == "а"){
                                        _local7 = "a";
                                    } else {
                                        if (_local7 == "α"){
                                            _local7 = "a";
                                        } else {
                                            if ((((_local7 == "Μ")) || ((_local7 == "М")))){
                                                _local7 = "M";
                                            } else {
                                                if (_local7 == "і"){
                                                    _local7 = "i";
                                                } else {
                                                    if (_local7 == "Ν"){
                                                        _local7 = "N";
                                                    } else {
                                                        if (_local7 == "ԁ"){
                                                            _local7 = "d";
                                                        } else {
                                                            if (_local7 == "m"){
                                                                _local7 = "m";
                                                            } else {
                                                                if (_local7 == "і"){
                                                                    _local7 = "i";
                                                                } else {
                                                                    if ((((_local7 == "Η")) || ((_local7 == "Н")))){
                                                                        _local7 = "H";
                                                                    } else {
                                                                        if ((((_local7 == "Ε")) || ((_local7 == "Е")))){
                                                                            (_local7 == "E");
                                                                        } else {
                                                                            if (_local7 == "һ"){
                                                                                _local7 = "h";
                                                                            } else {
                                                                                if (_local7 == "е"){
                                                                                    _local7 = "e";
                                                                                } else {
                                                                                    if ((((((((((((_local7 == "Ɩ")) || ((_local7 == "Ι")))) || ((_local7 == "І")))) || ((_local7 == "Ӏ")))) || ((_local7 == "ӏ")))) || ((_local7 == "ｌ")))){
                                                                                        _local7 = "I";
                                                                                    } else {
                                                                                        if (_local7 == "р"){
                                                                                            _local7 = "p";
                                                                                        } else {
                                                                                            if ((((_local7 == " ")) || ((_local7 == "卐")))){
                                                                                                _local7 = "_";
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                _local3[_local11] = _local7;
                _local7 = _local7.toLowerCase();
                if ((((_local7 == "a")) || ((_local7 == "h")))){
                    _local6 = true;
                };
                _local11++;
            };
            if (_local6){
                _local9 = new Array();
                _local10 = "";
                _local11 = 0;
                while (_local11 < _local5) {
                    _local10 = (_local10 + _local3[_local11]);
                    if (_local3[_local11].charCodeAt() < 0x0100){
                        _local9.push(_local10);
                        _local10 = "";
                    };
                    _local11++;
                };
                _local9.push(_local10);
                _local11 = 0;
                while (_local11 < _local9.length) {
                    _local12 = new Array(5);
                    _local13 = 0;
                    while (_local13 < 5) {
                        if ((_local11 + _local13) < _local9.length){
                            _local12[_local13] = _local9[(_local11 + _local13)].charAt((_local9[(_local11 + _local13)].length - 1));
                        };
                        _local13++;
                    };
                    if (_local11 < (_local9.length - 2)){
                        //unresolved if
                        _local14 = 0;
                        while (_local14 < 3) {
                            _arg1 = (_arg1 + (_local9[(_local11 + _local14)].substr(0, (_local9[(_local11 + _local14)].length - 1)) + "Q"));
                            _local14++;
                        };
                        _local11 = (_local11 + 2);
                    } else {
                        if (_local11 < (_local9.length - 3)){
                            //unresolved if
                            _local14 = 0;
                            while (_local14 < 4) {
                                _arg1 = (_arg1 + (_local9[(_local11 + _local14)].substr(0, (_local9[(_local11 + _local14)].length - 1)) + "Q"));
                                _local14++;
                            };
                            _local11 = (_local11 + 3);
                        } else {
                            if (_local11 < (_local9.length - 4)){
                                //unresolved if
                                _local14 = 0;
                                while (_local14 < 5) {
                                    _arg1 = (_arg1 + (_local9[(_local11 + _local14)].substr(0, (_local9[(_local11 + _local14)].length - 1)) + "Q"));
                                    _local14++;
                                };
                                _local11 = (_local11 + 4);
                            } else {
                                _arg1 = (_arg1 + _local9[_local11]);
                            };
                        };
                    };
                    _local11++;
                };
            } else {
                _arg1 = _local3.join("");
            };
            while (_arg1.substr(0, 1) == "_") {
                _arg1 = _arg1.substr(1);
            };
            if (_arg2 == undefined){
                _arg1 = PreProcSmilie(_arg1);
            };
            return (_arg1);
        }
        public static function StripSpace_(_arg1){
            _arg1 = searchreplace(" ", "", _arg1);
            _arg1 = searchreplace("_", "", _arg1);
            return (_arg1);
        }
        public static function PreProcSmilie(_arg1:String, _arg2=undefined, _arg3=undefined):String{
            var _local6:Number;
            var _local7:Number;
            var _local8:*;
            var _local9:Number;
            var _local10:String;
            var _local11:Number;
            var _local12:*;
            var _local13:*;
            var _local14:*;
            var _local15:*;
            var _local16:*;
            var _local17:*;
            var _local4 = "";
            var _local5:* = _arg1.toLowerCase();
            _local6 = 0;
            while (_local6 < _arg1.length) {
                _local9 = _arg1.charCodeAt(_local6);
                _local10 = _arg1.charAt(_local6);
                if (_local10 == "("){
                    _local4 = (_local4 + " (");
                    _local8 = _local6;
                } else {
                    if (_local10 == ")"){
                        if (_arg3 != undefined){
                            if (xconst.smih[_arg1.substr((_local8 + 1), ((_local6 - _local8) - 1)).toLowerCase()]){
                                _local4 = (_local4 + ("#" + _arg3));
                            };
                        };
                        _local4 = (_local4 + ") ");
                    } else {
                        if ((((((((((_local10 == "|")) || ((_local10 == ":")))) || ((_local10 == ";")))) || ((_local10 == "8")))) || ((_local10.toLowerCase() == "p")))){
                            _local11 = 0;
                            _local7 = 0;
                            while (_local7 < xconst.smArray.length) {
                                if (xconst.smArray[_local7] < 0){
                                    _local11 = (_local7 + 1);
                                } else {
                                    if (xconst.smArray[(_local7 + 1)] < 0){
                                    } else {
                                        if (_local10 != xconst.smArray[_local7].charAt(0)){
                                        } else {
                                            if (xconst.smArray[_local7] == _local5.substr(_local6, xconst.smArray[_local7].length)){
                                                _local4 = (_local4 + ((" " + xconst.smArray[_local11]) + " "));
                                                _local6 = (_local6 + (xconst.smArray[_local7].length - 1));
                                                _local11 = -1;
                                                break;
                                            };
                                        };
                                    };
                                };
                                _local7++;
                            };
                            //unresolved if
                        } else {
                            _local4 = (_local4 + _local10);
                        };
                    };
                };
                _local6++;
            };
            if (((_arg2) && ((todo.autologin & 2)))){
                _local12 = _local4.split(" ");
                _local15 = "";
                _local16 = xconst.badwords.length;
                _local17 = _local12.length;
                _local7 = 0;
                while (_local7 < _local17) {
                    if (_local12[_local7].length < 4){
                    } else {
                        _local14 = _local12[_local7].toLowerCase();
                        _local6 = 0;
                        while (_local6 < _local16) {
                            if (_local14.indexOf(xconst.badwords[_local6]) != -1){
                                _local12[_local7] = ("<s>" + _local12[_local7]);
                                _local13 = 1;
                                break;
                            };
                            _local6++;
                        };
                    };
                    _local7++;
                };
                if (_local13){
                    return (_local12.join(" "));
                };
            };
            return (_local4);
        }
        public static function IsDefaultName(_arg1:String){
            var _local5:*;
            var _local2:Boolean;
            var _local3:Boolean;
            var _local4:* = 0;
            while (_local4 < xconst.name1.length) {
                if (_arg1.indexOf(xconst.name1[_local4]) != -1){
                    _local2 = true;
                    break;
                };
                _local4++;
            };
            if (_local2){
                _local5 = 0;
                while (_local5 < xconst.name2.length) {
                    if (_arg1.indexOf(xconst.name2[_local5]) != -1){
                        _local3 = true;
                        break;
                    };
                    _local5++;
                };
            };
            if (((_local2) && (_local3))){
                return (true);
            };
            return (false);
        }
        public static function FindUser(_arg1:Number):Number{
            var _local2:* = FastFind1[_arg1];
            if (((((!((_local2 == undefined))) && (!((todo.Users[_local2] == undefined))))) && ((todo.Users[_local2].u == _arg1)))){
                return (_local2);
            };
            var _local3:* = todo.Users.length;
            _local2 = 0;
            while (_local2 < _local3) {
                if (todo.Users[_local2].u == _arg1){
                    FastFind1[_arg1] = _local2;
                    return (_local2);
                };
                _local2++;
            };
            return (-1);
        }
        public static function urlencode(_arg1){
            _arg1 = searchreplace(" ", "%20", _arg1);
            return (searchreplace("?", "%3F", _arg1));
        }
        public static function CleanCommas(_arg1:String):String{
            var _local3:Number;
            var _local4:Number;
            var _local5:String;
            var _local2 = "";
            _local3 = 0;
            while (_local3 < _arg1.length) {
                _local4 = _arg1.charCodeAt(_local3);
                _local5 = _arg1.charAt(_local3);
                if (_local5 == ","){
                    _local2 = (_local2 + " ");
                } else {
                    if (_local4 < 32){
                    } else {
                        _local2 = (_local2 + _local5);
                    };
                };
                _local3++;
            };
            return (_local2);
        }
        public static function GetStatus(_arg1){
            if (!_arg1){
                return (undefined);
            };
            _arg1 = _arg1.split("##")[1];
            if (!_arg1){
                return (undefined);
            };
            _arg1 = NameNoXat(_arg1, 1).substr(0, 128);
            if (_arg1.substr(0, 1) == " "){
                return (undefined);
            };
            _arg1 = searchreplace("_", " ", _arg1);
            return (_arg1);
        }
        public static function IdToRegName(_arg1){
            var _local3:*;
            var _local2:* = FindUser(_arg1);
            if (_local2 >= 0){
                _local3 = todo.Users[_local2].registered;
            };
            if (_local3 != undefined){
                return ((((_local3 + " (") + _arg1) + ") "));
            };
            return ((_arg1 + " "));
        }
        public static function NY(_arg1:Number):Number{
            return (int(((_arg1 * todo.StageHeight) / 480)));
        }
        public static function SmilieUrl(_arg1, _arg2, _arg3=false){
            var _local4:* = xInt(_arg1);
            if (_local4 >= 20000){
                _arg1 = (_local4 & ~(1));
            } else {
                if (_local4 >= 10000){
                    _arg1 = _local4;
                } else {
                    if (_arg2 != "ks"){
                        _arg1 = _arg1.toLowerCase();
                    };
                };
            };
            if (((!(_arg3)) || ((_arg2 == "ks")))){
                return (((((("http://www.xatech.com/images/" + _arg2) + "/") + _arg1) + ".swf?v=") + global.sv));
            };
            return (((((("http://i79.photobucket.com/albums/j131/chrisrixon/" + _arg2) + "/") + _arg1) + ".swf?v=") + global.sv));
        }
        public static function IsDefaultAvatar(_arg1){
            return ((CleanAv(_arg1) > 0));
        }
        public static function NX(_arg1:Number):Number{
            return (int(((_arg1 * todo.StageWidth) / 640)));
        }
        public static function AttachMovie(_arg1, _arg2, _arg3=undefined){
            var _local4:Class = (getDefinitionByName(_arg2) as Class);
            var _local5:* = new (_local4);
            if (_arg3){
                if (_arg3["x"]){
                    _local5.x = _arg3["x"];
                };
                if (_arg3["y"]){
                    _local5.y = _arg3["y"];
                };
                if (_arg3["scaleX"]){
                    _local5.scaleX = _arg3["scaleX"];
                };
                if (_arg3["scaleY"]){
                    _local5.scaleY = _arg3["scaleY"];
                };
                if (_arg3["width"]){
                    _local5.width = _arg3["width"];
                };
                if (_arg3["height"]){
                    _local5.height = _arg3["height"];
                };
            };
            _arg1.addChild(_local5);
            return (_local5);
        }
        public static function MainSolWrite(_arg1, _arg2=undefined, _arg3=undefined){
            var _local4:*;
            var _local5:*;
            var _local6:*;
            var _local7:*;
            if (_arg1 == "w_friendlist"){
                _local4 = SharedObject.getLocal("chat", "/");
                _local4.objectEncoding = ObjectEncoding.AMF0;
                if (_local4 != null){
                    delete _local4.data.w_friendlist;
                    _local4.data.w_friendlist = new Array();
                    _local5 = todo.w_friendlist.length;
                    _local6 = 0;
                    while (_local6 < _local5) {
                        _local4.data.w_friendlist[_local6] = todo.w_friendlist[_local6];
                        if ((_local6 % 128) == 0){
                            _local7 = _local4.flush();
                        };
                        _local6++;
                    };
                    _local7 = _local4.flush();
                    _local4.flush();
                    return (1);
                };
                return (0);
            };
            _local4 = SharedObject.getLocal("chat", "/");
            _local4.objectEncoding = ObjectEncoding.AMF0;
            if (_local4 != null){
                _local4.data[_arg1] = _arg2;
                if (_arg3 == undefined){
                    _local4.flush();
                };
                return (1);
            };
            return (0);
        }
        public static function UnfairPopup(_arg1, _arg2){
            UnfairPopupClose();
            var _local3:* = (main.box_layer.mcPopup = new xDialog(main.box_layer, int(((20 * todo.StageWidth) / 640)), int((((140 - 14) * todo.StageHeight) / 480)), int(((600 * todo.StageWidth) / 640)), int((((((192 + 32) + 24) + 14) * todo.StageHeight) / 480)), _arg1, _arg2, 0, UnfairPopupClose));
            var _local4:* = _local3.DiaBack.width;
            var _local5:* = _local3.DiaBack.height;
            var _local6:* = _local3.DiaBack.x;
            var _local7:* = _local3.DiaBack.y;
            var _local8:* = xatlib.NY(32);
            var _local9:* = (((_local7 + _local5) - _local8) - 22);
            var _local10:* = ((_local4 / 3) - 16);
            var _local11:* = new xBut(_local3, (_local6 + 8), _local9, _local10, _local8, xconst.ST(101), xatlib.mccopyurl_onRelease2);
            var _local12:* = new xBut(_local3, (((_local6 + (_local4 / 2)) - (_local4 / 6)) + 8), _local9, _local10, _local8, xconst.ST(102), UnfairPopupClose);
            var _local13:* = new xBut(_local3, (((_local6 + _local4) - (_local4 / 3)) + 8), _local9, _local10, _local8, xconst.ST(103), UnfairFindAnotherGroup);
        }
        public static function xInt(_arg1):Number{
            var _local2:Number = parseInt(String(_arg1));
            if (isNaN(_local2)){
                return (0);
            };
            return (_local2);
        }
        public static function LoadMovie(_arg1, _arg2, _arg3=undefined){
            var _local4:* = new Loader();
            var _local5:URLRequest = new URLRequest(_arg2);
            _local4.load(_local5);
            if (_arg1){
                _arg1.addChild(_local4);
            };
            if (_arg3){
                _local4.contentLoaderInfo.addEventListener(Event.COMPLETE, _arg3);
            };
            _local4.addEventListener(IOErrorEvent.IO_ERROR, catchIOError);
            return (_local4);
        }
        public static function createTextNoWrap(_arg1, _arg2:Number, _arg3:Number, _arg4:Number, _arg5:Number, _arg6:String, _arg7:Number, _arg8:Number, _arg9:Number, _arg10:Number, _arg11:Number, _arg12:String, _arg13:Number){
            var _local14:*;
            var _local15:*;
            var _local17:Number;
            var _local18:Number;
            var _local19:*;
            _arg2 = int(_arg2);
            _arg3 = int(_arg3);
            _arg4 = int(_arg4);
            _arg5 = int(_arg5);
            _local15 = new TextFormat();
            _local15.align = _arg12;
            _local15.bold = true;
            _local15.color = _arg7;
            _local15.font = "_sans";
            _local15.size = _arg11;
            var _local16:* = new TextField();
            _local16.x = (_arg2 + 1);
            _local16.y = (1 + _arg3);
            _local16.width = (_arg4 - (1 * 2));
            _local16.height = (_arg5 - (1 * 2));
            _local16.autoSize = _arg12;
            _local16.selectable = true;
            _local16.defaultTextFormat = _local15;
            _local16.text = _arg6;
            _arg1.addChild(_local16);
            if ((_arg13 & 2)){
                _local16.multiline = true;
                _local16.wordWrap = true;
            };
            if (_local16.width > (_arg4 - (1 * 2))){
                _local17 = ((_local15.size * ((_arg4 - (1 * 2)) / _local16.width)) - 0.5);
                _local18 = 4;
                _local19 = ((_local15.size - _local17) / _local18);
                if (_local19 < 1){
                    _local19 = 1;
                };
                while ((((_local16.width > (_arg4 - (1 * 2)))) && ((_local15.size > 1)))) {
                    _local15.size = (_local15.size - _local19);
                    _local16.defaultTextFormat = _local15;
                    _local16.text = _arg6;
                };
            };
            _local16.y = ((_arg3 + int(((_arg5 - _local16.height) / 2))) - 1);
            return (_local16);
        }
        public static function AttachBut(_arg1, _arg2){
            var _local3:Class = (getDefinitionByName(_arg2) as Class);
            _arg1.c = new (_local3);
            _arg1.addChild(_arg1.c);
            _arg1.c.scaleX = SX(0.8);
            _arg1.c.scaleY = SY(0.8);
            _arg1.c.x = NX(10);
            _arg1.c.y = NY(5);
        }
        public static function TimeStamp():String{
            var _local1:Date = new Date();
            var _local2:Number = Number(_local1.getTime());
            return (("&t=" + _local2));
        }
        public static function GotoWeb(_arg1){
            var Url:* = _arg1;
            try {
                navigateToURL(Url, "_blank");
            } catch(e:Error) {
            };
            UrlPopup(xconst.ST(8), Url);
        }
        public static function RandAv(_arg1=undefined){
            var _local2:Number = (1 + Math.floor((Math.random() * 1758)));
            if (_arg1 == undefined){
                return (_local2);
            };
            return (UrlAv(_local2));
        }
        public static function PageUrl(_arg1){
            return (((GroupUrl() + "?p=0&ss=") + _arg1));
        }
        public static function CleanTextNoXat(_arg1):String{
            return (CleanText(NameNoXat(_arg1, 1)));
        }
        public static function UrlAv(_arg1):String{
            var _local2:Number = xInt(_arg1);
            if ((((_local2 > 0)) && ((_local2 <= 1758)))){
                return ((("http://www.xatech.com/web_gear/chat/av/" + _arg1) + ".png"));
            };
            return (String(_arg1));
        }
        public static function SY(_arg1=1):Number{
            var _local2:* = (todo.StageHeight / 480);
            if (_arg1){
                _local2 = (_local2 * _arg1);
            };
            return (_local2);
        }
        public static function catchIOError(_arg1:IOErrorEvent){
        }
        public static function McSetRGB(_arg1, _arg2){
            var _local3:* = _arg1.transform.colorTransform;
            _local3.color = _arg2;
            _arg1.transform.colorTransform = _local3;
        }
        public static function UnfairPopupClose(_arg1:MouseEvent=undefined){
            if (((!(main.box_layer.mcPopup)) || (!(main.box_layer.mcPopup.sParent)))){
                return;
            };
            main.box_layer.mcPopup.Delete();
            delete main.box_layer.mcPopup;
            main.box_layer.mcPopup = null;
        }
        public static function SplitBackground(_arg1:String){
            todo.BackVars = _arg1.split(";=");
            var _local2:* = todo.BackVars[0].split("#");
            todo.BackVars[0] = _local2[0];
            if (todo.BackVars[1] == undefined){
                todo.BackVars[1] = "Lobby";
            };
            if (xInt(todo.BackVars[2]) < 1){
                todo.BackVars[2] = 1;
            };
        }
        public static function GetDefaultAvatar(_arg1:Number){
            return ((((_arg1 ^ 0x5555) % 1758) + 1));
        }
        public static function SX(_arg1=1):Number{
            var _local2:* = (todo.StageWidth / 640);
            if (_arg1){
                _local2 = (_local2 * _arg1);
            };
            return (_local2);
        }
        public static function GetDefaultName(_arg1:Number){
            var _local2:* = ((_arg1 ^ 0x5555) % (42 * 24));
            var _local3:* = (_local2 % 42);
            _local2 = int((_local2 / 42));
            return ((xconst.name1[_local3] + xconst.name2[_local2]));
        }
        public static function GetUserStatus(_arg1:Number):String{
            var _local3:*;
            if (_arg1 == -1){
                return ("");
            };
            var _local2 = "";
            _local3 = (todo.Users[_arg1].online == true);
            if (((!(_local3)) && (((!((main.utabsmc.tabs[0].Main == true))) || (main.ctabsmc.TabIsPrivate()))))){
                _local3 = (todo.Users[_arg1].onsuper == true);
            };
            if (todo.Users[_arg1].u == todo.w_userno){
                _local2 = (xconst.ST(107) + " ");
            };
            if (_local3){
                if (todo.Users[_arg1].Location == 128){
                    _local2 = (_local2 + xconst.ST(156));
                } else {
                    if (todo.Users[_arg1].Location == 129){
                        _local2 = (_local2 + xconst.ST(157));
                    } else {
                        if (todo.Users[_arg1].OnXat){
                            _local2 = (_local2 + xconst.ST(108));
                        } else {
                            _local2 = (_local2 + xconst.ST(109));
                        };
                    };
                };
            } else {
                _local2 = (_local2 + xconst.ST(110));
            };
            if (main.utabsmc.tabs[0].Main == true){
                if (!todo.Users[_arg1].Stealth){
                    if (todo.Users[_arg1].mainowner == true){
                        _local2 = (_local2 + (" " + xconst.ST(134)));
                    } else {
                        if (todo.Users[_arg1].owner == true){
                            _local2 = (_local2 + (" " + xconst.ST(24)));
                        } else {
                            if (todo.Users[_arg1].moderator == true){
                                _local2 = (_local2 + (" " + xconst.ST(23)));
                            } else {
                                if (todo.Users[_arg1].member == true){
                                    _local2 = (_local2 + (" " + xconst.ST(22)));
                                };
                            };
                        };
                    };
                };
            };
            if ((todo.Users[_arg1].flag0 & 0x0200)){
                _local2 = (_local2 + (" " + xconst.ST(195)));
            };
            if (todo.Users[_arg1].friend){
                _local2 = (_local2 + (" " + xconst.ST(111)));
            };
            if ((((todo.Users[_arg1].banned == true)) && ((main.utabsmc.tabs[0].Main == true)))){
                if ((todo.Users[_arg1].flag0 & 0x1000)){
                    _local2 = (_local2 + (" " + xconst.ST(236)));
                } else {
                    _local2 = (_local2 + (" " + xconst.ST(25)));
                };
            } else {
                if (todo.Users[_arg1].ignored == true){
                    _local2 = (_local2 + (" " + xconst.ST(112)));
                } else {
                    if (todo.Users[_arg1].gagged == true){
                        _local2 = (_local2 + (" " + xconst.ST(188)));
                    };
                };
            };
            if (((todo.Users[_arg1].VIP) && (!(todo.HasPower(_arg1, 2))))){
                _local2 = (_local2 + (" " + xconst.ST(158)));
            } else {
                if (((todo.Users[_arg1].registered) && (!(todo.HasPower(_arg1, 9))))){
                    _local2 = (_local2 + (" " + xconst.ST(159)));
                };
            };
            if (todo.Users[_arg1].Bride){
                if ((todo.Users[_arg1].aFlags & 1)){
                    _local2 = (_local2 + (" " + xconst.ST(160)));
                } else {
                    _local2 = (_local2 + (" " + xconst.ST(161)));
                };
            };
            return (_local2);
        }
        public static function dump(_arg1, _arg2=0){
            var _local3:*;
            var _local4:*;
            var _local5:*;
            if (_arg2 == 0){
            };
            for (_local3 in _arg1) {
                _local4 = "";
                _local5 = 0;
                while (_local5 < _arg2) {
                    _local4 = (_local4 + "  ");
                    _local5++;
                };
                _local4 = (_local4 + ((((_local3 + ":") + typeof(_arg1[_local3])) + "=") + _arg1[_local3]));
                if (typeof(_arg1[_local3]) == "object"){
                    dump(_arg1[_local3], (_arg2 + 1));
                };
            };
        }
        public static function xatlinks(_arg1):String{
            var _local2:Array = new Array(64);
            var _local3:* = 0;
            while (_local3 < 26) {
                _local2[_local3] = String.fromCharCode((_local3 + 65));
                _local3++;
            };
            _local3 = 26;
            while (_local3 < 52) {
                _local2[_local3] = String.fromCharCode((_local3 + 71));
                _local3++;
            };
            _local3 = 52;
            while (_local3 < 62) {
                _local2[_local3] = String.fromCharCode((_local3 - 4));
                _local3++;
            };
            _local2[62] = "+";
            _local2[63] = "/";
            var _local4:* = new Array();
            var _local5:* = new Array();
            _local3 = 0;
            while (_local3 < _arg1.length) {
                _local4[_local3] = _arg1.charCodeAt(_local3);
                _local3++;
            };
            _local3 = 0;
            while (_local3 < _local4.length) {
                switch ((_local3 % 3)){
                    case 0:
                        _local5.push(_local2[((_local4[_local3] & 252) >> 2)]);
                        break;
                    case 1:
                        _local5.push(_local2[(((_local4[(_local3 - 1)] & 3) << 4) | ((_local4[_local3] & 240) >> 4))]);
                        break;
                    case 2:
                        _local5.push(_local2[(((_local4[(_local3 - 1)] & 15) << 2) | ((_local4[_local3] & 192) >> 6))]);
                        _local5.push(_local2[(_local4[_local3] & 63)]);
                        break;
                };
                _local3++;
            };
            if ((_local3 % 3) == 1){
                _local5.push(_local2[((_local4[(_local3 - 1)] & 3) << 4)]);
            } else {
                if ((_local3 % 3) == 2){
                    _local5.push(_local2[((_local4[(_local3 - 1)] & 15) << 2)]);
                };
            };
            _local3 = _local5.length;
            while ((_local3 % 4) != 0) {
                _local5.push("=");
                _local3++;
            };
            var _local6:String = new String("http://linkvalidator.net/warn.php?p=");
            _local3 = 0;
            while (_local3 < _local5.length) {
                _local6 = (_local6 + _local5[_local3]);
                _local3++;
            };
            return (_local6);
        }
        public static function CleanText(_arg1, _arg2=undefined):String{
            var _local4:Number;
            var _local5:Number;
            var _local6:String;
            _arg1 = String(_arg1);
            var _local3 = "";
            _local4 = 0;
            while (_local4 < _arg1.length) {
                _local5 = _arg1.charCodeAt(_local4);
                _local6 = _arg1.charAt(_local4);
                if (_local5 < 32){
                } else {
                    if (_local6 == "<"){
                    } else {
                        if (_local6 == ">"){
                        } else {
                            if (_local6 == "\""){
                            } else {
                                if (_local6 == "'"){
                                } else {
                                    if (_local6 == ","){
                                    } else {
                                        if (_local6 == " "){
                                            if (_arg2 != 1){
                                                _local3 = (_local3 + "_");
                                            };
                                        } else {
                                            _local3 = (_local3 + _local6);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                _local4++;
            };
            return (_local3);
        }
        public static function AddTextField(_arg1, _arg2, _arg3, _arg4, _arg5, _arg6="", _arg7=undefined){
            var _local8:* = new TextField();
            if (_arg7 == undefined){
                _arg7 = main.fmt;
            };
            _local8.x = _arg2;
            _local8.y = _arg3;
            _local8.width = _arg4;
            _local8.height = _arg5;
            _local8.autoSize = TextFieldAutoSize.NONE;
            _local8.selectable = true;
            _local8.defaultTextFormat = _arg7;
            _local8.text = _arg6;
            _arg1.addChild(_local8);
            return (_local8);
        }
        public static function SmOk(_arg1, _arg2=undefined, _arg3:Boolean=false){
            if (_arg1 == undefined){
                return (false);
            };
            _arg1 = _arg1.toLowerCase();
            if (!xconst.smih[_arg1]){
                return (false);
            };
            var _local4:* = xconst.pssh[_arg1];
            if ((((((_local4 == -2)) && (_arg2))) && (_arg2[0]))){
                return (true);
            };
            if ((((((_local4 == -1)) && (_arg2))) && ((_arg2[0] & 1)))){
                return (true);
            };
            if (_local4 != undefined){
                return (todo.HasPowerA(_arg2, _local4));
            };
            _local4 = xconst.topsh[_arg1];
            if (!_local4){
                return (true);
            };
            if ((((_arg3 == false)) && ((_local4 < 48)))){
                return (true);
            };
            if ((((_local4 == 78)) && (todo.HasPowerA(_arg2, _local4)))){
                return (true);
            };
            if ((((_local4 < 70)) || ((_local4 & 1)))){
                return (todo.HasPowerA(_arg2, _local4));
            };
            return (todo.HasPowerA(todo.w_GroupPowers, _local4));
        }
        public static function ReLogin(){
            todo.lb = "n";
            todo.DoUpdate = true;
            network.NetworkClose();
            main.logoutbutonPress();
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class buttonmetal extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.media.*;
    import flash.net.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.geom.*;
    import flash.system.*;

    public class main extends Sprite {

        static const un = undefined;

        public static var lockmc;
        public static var debugtext:TextField = new TextField();
        public static var retmcBut;
        public static var kiss_layer;
        public static var mcsnd:MovieClip;
        public static var back_no = 0;
        public static var nudge;
        public static var dialogs;
        public static var ButtonLoginMc;
        public static var mctextbackground;
        public static var uph;
        public static var D_edityourchat;
        public static var mcgetachat;
        public static var upw;
        public static var upx;
        public static var upy;
        static var SndIcnX = 0;
        public static var utabsmc;
        private static var receiving_profile:LocalConnection = null;
        public static var mcuserbackground;
        public static var equ:Sprite = new Sprite();
        public static var backs = new Array();
        public static var uMessLst:Array = new Array();
        public static var fmts = new TextFormat();
        public static var hint:hints;
        public static var fmt;
        public static var mscrollmc;
        public static var textPaneWidth;
        public static var uscrollmc;
        public static var mcLoad:MovieClip = null;
        public static var mctextbackgroundmask;
        public static var eip_layer;
        public static var em:Array = new Array();
        public static var chat_layer;
        static var mcxLoad;
        public static var ctabsmc;
        public static var mcuserbackgroundmask;
        public static var GrpIc:MovieClip;
        private static var sending_profile:LocalConnection = null;
        public static var D_getachatbox;
        public static var DialogOpen = 0;
        private static var ProfileUserNo = 0;
        public static var mcscroller;
        public static var box_layer;
        public static var textfield2:TextField;
        public static var dbgstr = "";
        static var RadioSound = new Array();
        public static var back_layer;
        static var Dragee;
        public static var mcscrollertext;
        public static var retmc;

        const OkPic;

        var textfield2background;
        var IM;
        var cmessmc;
        var emotes;

        public function main(){
            this.IM = chat.IM;
            this.OkPic = {
                xat:1,
                xatech:1,
                photobucket:1,
                tinypic:1
            };
            this.emotes = new Sprite();
            super();
            addEventListener(Event.ENTER_FRAME, this.tick2);
        }
        public static function logoutbutonPress(){
            var _local1:*;
            main.DialogClose();
            xmessage.mspos = undefined;
            while (todo.Pools.length > 0) {
                todo.Pools.splice(0);
            };
            todo.PrivateMessage = 0;
            lockmc.visible = false;
            if (todo.lb == "n"){
                _local1 = SharedObject.getLocal(("chat" + String(todo.w_useroom)), "/");
                _local1.objectEncoding = ObjectEncoding.AMF0;
                todo.pass = _local1.data.pass;
                if (todo.pass != undefined){
                    todo.pass = xatlib.xInt(todo.pass);
                };
                network.NetworkStartChat();
            } else {
                todo.lb = "n";
                todo.DoUpdate = true;
                network.NetworkClose();
            };
        }
        public static function ProcessHelp(_arg1:String){
            _arg1.toLowerCase();
            if (_arg1.indexOf("change") != -1){
                if (((((((!((_arg1.indexOf("name") == -1))) || (!((_arg1.indexOf("picture") == -1))))) || (!((_arg1.indexOf("pic") == -1))))) || (!((_arg1.indexOf("avatar") == -1))))){
                    todo.helpstr = xconst.ST(30, (" <o> <l>" + todo.w_name));
                    todo.HelpUpdate = (300 + (todo.helpstr.length * 8));
                };
            };
        }
        public static function onUserScrollChange(){
            var _local1:* = ((xmessage.useryc3 - uph) + 4);
            var _local2:* = 0;
            if (_local1 > 0){
                uscrollmc.Scr_size = _local1;
                _local2 = uscrollmc.Scr_position;
            } else {
                uscrollmc.Scr_position = 0;
            };
            mcuserbackground.y = -(_local2);
            tickcode.UserScroll = true;
        }
        public static function Private_onRelease(_arg1:Number){
            hint.HintOff();
            utabsmc.SetVisitorsTab();
            todo.DoUpdateMessages = true;
            todo.DoBuildUserListScrollUp = true;
            todo.ScrollDown = true;
            todo.LastScrollTime = undefined;
            ctabsmc.UpdateTabs(_arg1);
            ctabsmc.ColorTab(_arg1, 0xFFFFFF);
        }
        public static function DialogClose(){
            if (DialogOpen == 0){
                return;
            };
            switch (DialogOpen){
                case 1:
                    profile.mcprofilebackground_close();
                    break;
                case 2:
                    viewprofile.mcviewprofilebackground.Delete();
                    break;
                case 3:
                    xkiss.mcBuystuffbackground_close();
                    break;
                case 5:
                    helpdialog.mchelpbackground.Delete();
                    break;
                case 7:
                    powers.mcpowersbackground_close();
                    break;
            };
            if (D_edityourchat){
                D_edityourchat.mceditbackground_close();
                dialogs.removeChild(D_edityourchat);
                D_edityourchat = null;
            };
            DialogOpen = 0;
        }
        public static function ProcessSounds(_arg1:String, _arg2:Boolean){
            var _local3:Boolean;
            var _local4:Number;
            var _local5:String;
            var _local6:Array;
            var _local7:*;
            if ((todo.w_sound & 1)){
                _arg1.toLowerCase();
                _local3 = false;
                _local4 = _arg1.indexOf("#");
                if (((!((_local4 == -1))) && (_arg2))){
                    if (!(((_local4 > 0)) && (!((_arg1.charAt((_local4 - 1)) == " "))))){
                        _local5 = _arg1.substr((_local4 + 1));
                        _local5 = xatlib.CleanText(_local5);
                        _local6 = new Array();
                        _local6 = _local5.split("_");
                        _local7 = _local6[0];
                        if (_local7.length > 0){
                            if (_local7 != "laserfire3"){
                                todo.CustomSound = _local7;
                                todo.DoAudieSnd = true;
                                _local3 = true;
                            };
                        };
                    };
                };
                if (!_local3){
                    todo.DoMessageSnd = true;
                };
            };
        }
        public static function CreateEditYourChatBox(_arg1){
            main.DialogClose();
            main.DialogOpen = 4;
            D_edityourchat = new edityourchat(_arg1);
            dialogs.addChild(D_edityourchat);
        }
        public static function SetScroller(_arg1){
            fmts.color = 0;
            var _local2:* = _arg1.indexOf("#");
            if (_local2 != -1){
                fmts.color = parseInt(_arg1.substr((_local2 + 1), 6), 16);
                _arg1 = _arg1.substr(0, _local2);
            };
            mcscrollertext.text = _arg1;
            mcscrollertext.x = xatlib.NX(435);
            mcscrollertext.y = (xatlib.NY(469) - 12);
            mcscrollertext.setTextFormat(fmts);
            mcscrollertext.selectable = false;
            mcscrollertext.cacheAsBitmap = true;
        }
        public static function ProcessMessage(){
            var _local3:*;
            var _local4:*;
            var _local5:*;
            var _local6:*;
            var _local7:*;
            var _local1:Number = xatlib.FindUser(todo.w_userno);
            var _local2:* = todo.MessageToProcess;
            todo.MessageToProcess = "";
            if ((((_local2.charAt(0) == "$")) && (!((_local2.indexOf("=") == -1))))){
                if (_local2 == "$="){
                    if (todo.Macros != undefined){
                        todo.helpstr = "";
                        for (_local4 in todo.Macros) {
                            todo.helpstr = (todo.helpstr + (((("$" + _local4) + "=") + todo.Macros[_local4]) + " "));
                        };
                        todo.helpupdate = 0;
                    };
                    return;
                };
                _local3 = _local2.substr(1).split("=");
                if (_local3[0].indexOf(" ") == -1){
                    if (todo.Macros == undefined){
                        todo.Macros = new Object();
                    };
                    if ((((_local3[1] == undefined)) || ((_local3[1].length == 0)))){
                        delete todo.Macros[_local3[0]];
                    } else {
                        todo.Macros[_local3[0]] = _local3[1];
                    };
                    if (_local3[0] == "status"){
                        xatlib.ReLogin();
                    };
                    todo.helpstr = ((("$" + _local3[0]) + "=") + ((_local3[1] == undefined)) ? "" : _local3[1]);
                    todo.helpupdate = 0;
                    xatlib.MainSolWrite("Macros", todo.Macros);
                    return;
                };
            };
            if ((((todo.PrivateChat == 0)) && (((((!((_local1 == -1))) && (todo.Users[_local1].banned))) || (((!((_local1 == -1))) && (todo.Users[_local1].gagged))))))){
            } else {
                if (_local2.charAt(0) == "/"){
                    _local5 = _local2.substr(1, 1);
                    if (((todo.w_mainowner) || (todo.w_owner))){
                        if (_local5 == "s"){
                            SetScroller(_local2.substr(2, 510));
                            network.NetworkSendMsg(todo.w_userno, _local2.substr(0, 0x0200));
                        } else {
                            if ((((_local5 == "p")) || ((_local5 == "i")))){
                                network.NetworkSendMsg(todo.w_userno, ("/" + _local5));
                            };
                        };
                    };
                    if (_local2.substr(0, 6) == "/debug"){
                    } else {
                        if ((((_local5 == "g")) && ((_local2.length == 2)))){
                            network.NetworkSendMsg(todo.w_userno, "/g");
                        } else {
                            if (_local5 == "h"){
                                network.NetworkSendMsg(todo.w_userno, _local2);
                            } else {
                                if ((((((_local5 == "x")) || ((_local5 == "m")))) || ((_local5 == "n")))){
                                    network.NetworkSendMsg(todo.w_userno, _local2, ctabsmc.TabUser());
                                } else {
                                    if (_local5 == "o"){
                                        todo.w_Options = _local2.substr(2, 0x0100);
                                        if (todo.w_Options.length == 0){
                                            todo.w_Options = undefined;
                                        };
                                        xatlib.MainSolWrite("w_Options", todo.w_Options);
                                    } else {
                                        if (_local5 == "f"){
                                            _local6 = _local2.substr(2, 64).split(" ");
                                            if (xatlib.xInt(_local6[0]) > 128){
                                                network.UpdateFriendList(xatlib.xInt(_local6[0]), true, (_local6[1]) ? _local6[1] : _local6[0]);
                                            };
                                        } else {
                                            if (_local5 == "t"){
                                                if (ctabsmc.TabUser()){
                                                    network.NetworkSendMsg(todo.w_userno, _local2, 0, ctabsmc.TabUser(), 0);
                                                    network.NetworkIgnore(ctabsmc.TabUser());
                                                } else {
                                                    xkiss.Kiss({
                                                        t:_local2.substr(2),
                                                        u:todo.w_userno,
                                                        k:"Ttth"
                                                    });
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                } else {
                    if (_local2.indexOf("k2=") != -1){
                        todo.helpstr = xconst.ST(214);
                        todo.helpupdate = 0;
                    } else {
                        if (todo.Macros != undefined){
                            for (_local4 in todo.Macros) {
                                _local2 = xatlib.Replace(_local2, ("$" + _local4), todo.Macros[_local4]);
                            };
                        };
                        ProcessHelp(_local2);
                        ProcessSounds(_local2, (((!((todo.w_Powers == undefined))) && (!((todo.w_Mask == undefined))))) ? !(((todo.w_Powers[0] & (1 << 8)) & ~(todo.w_Mask[0]))) : 0);
                        _local2 = xatlib.PreProcSmilie(_local2, undefined, todo.w_Options);
                        _local7 = _local2;
                        if (todo.PrivateMessage != 0){
                            _local7 = ("<priv> " + _local2);
                        };
                        todo.mi++;
                        if ((((((((((((xconst.f_Live & todo.FlagBits)) && (!(todo.w_mainowner)))) && (!(todo.w_owner)))) && (!(todo.w_moderator)))) && (!(todo.w_member)))) && (!(ctabsmc.TabIsPrivate())))){
                        } else {
                            todo.Message.push({
                                i:((todo.mi * 2) + 1),
                                n:0,
                                t:_local7,
                                u:todo.w_userno,
                                s:(ctabsmc.TabIsPrivate()) ? 2 : 0,
                                d:ctabsmc.TabUser()
                            });
                        };
                        if (todo.messageecho == "m"){
                            chat.sending_lc.send(chat.fromxat, "onMsg", 4, ((todo.mi * 2) + 1), _local7);
                        } else {
                            todo.DoUpdateMessages = true;
                            todo.ScrollDown = true;
                            todo.LastScrollTime = undefined;
                            if (todo.MessageCount > 0){
                                todo.MessageCount = 25;
                            };
                            if (_local2 != todo.LastMessageToSend){
                                if (todo.MessageToSend.length == 0){
                                    todo.MessageToSend = _local2;
                                } else {
                                    todo.MessageToSend = (todo.MessageToSend + " ");
                                    todo.MessageToSend = (todo.MessageToSend + _local2);
                                };
                                todo.MessageToSend = todo.MessageToSend.substr(0, 0x0100);
                            } else {
                                todo.MessageCount = 25;
                            };
                        };
                    };
                };
            };
        }
        public static function Private_onDelete(_arg1:Number){
            hint.HintOff();
            utabsmc.SetVisitorsTab();
            ctabsmc.tabs.splice(_arg1, 1);
            if (todo.w_useroom == todo.w_room){
                ctabsmc.UpdateTabs(0);
                ctabsmc.ColorTab(0, 0xFFFFFF);
            } else {
                ctabsmc.UpdateTabs(1);
                ctabsmc.ColorTab(1, 0xFFFFFF);
            };
            todo.DoUpdateMessages = true;
            todo.DoBuildUserList = true;
            todo.ScrollDown = true;
            todo.LastScrollTime = undefined;
        }
        public static function LookupPool(_arg1){
            var _local2:* = 0;
            while (_local2 < todo.Pools.length) {
                if (_arg1 == todo.Pools[_local2]){
                    return (_local2);
                };
                _local2++;
            };
            return (0);
        }

        public function MkGpBut(){
            var _local4:*;
            var _local1:Array = new Array(5, 0, 0xC000, 0, 2, 5592575, 10, 2, 0xFF0000, 5, 4, 0xFF9900);
            if ((todo.FlagBits & xconst.f_Live)){
                _local1 = new Array(5, 0, 0xC000, 3, 1, 0xC000, 7, 1, 0xC000, 0, 2, 0xC000, 5, 2, 0xC000, 10, 2, 0xC000, 3, 3, 0xC000, 7, 3, 0xC000, 5, 4, 0x800080);
            };
            if (GrpIc){
                chat_layer.removeChild(GrpIc);
            };
            GrpIc = new MovieClip();
            var _local2:* = 0;
            while (_local2 < _local1.length) {
                _local4 = new chatter();
                _local4.HatsOff();
                _local4.x = _local1[_local2];
                _local4.y = _local1[(_local2 + 1)];
                _local4.xBack.transform.colorTransform = new ColorTransform(0, 0, 0, 1, ((_local1[(_local2 + 2)] >> 16) & 0xFF), ((_local1[(_local2 + 2)] >> 8) & 0xFF), ((_local1[(_local2 + 2)] >> 0) & 0xFF), 0);
                GrpIc.addChild(_local4);
                _local2 = (_local2 + 3);
            };
            GrpIc.scaleX = (GrpIc.scaleY = (((xatlib.NX(24) < xatlib.NY(24))) ? xatlib.NX(120) : xatlib.NY(120) / 100));
            GrpIc.x = xatlib.NX(484);
            GrpIc.y = xatlib.NY(((395 - 32) + 4));
            GrpIc.buttonMode = true;
            GrpIc.addEventListener(MouseEvent.MOUSE_DOWN, this.onGrpIcMouseDown);
            chat_layer.addChild(GrpIc);
            var _local3:* = xconst.ST(6);
            if (((((todo.w_owner) || (todo.w_mainowner))) && ((todo.FlagBits & xconst.f_Live)))){
                _local3 = xconst.ST(216);
            };
            main.hint.AddEasyHint(GrpIc, _local3);
        }
        function ButtonLoginMc_onRollOver(_arg1:MouseEvent){
            if (todo.lb == "n"){
                hint.Hint(ButtonLoginMc.But.x, ButtonLoginMc.But.y, xconst.ST(26), true, 0, un, 0);
            } else {
                hint.Hint(ButtonLoginMc.But.x, ButtonLoginMc.But.y, xconst.ST(27), true, 0, un, 0);
            };
        }
        function VolRollOver(_arg1:MouseEvent){
            _arg1.currentTarget.parent.Count = 1200000000;
        }
        function onSmilieMouseRollOver(_arg1:MouseEvent){
            var _local2:*;
            if (_arg1.currentTarget.cs != undefined){
                switch (_arg1.currentTarget.cs){
                    case "GetStuff":
                        hint.Hint(em[_arg1.currentTarget.n].x, em[_arg1.currentTarget.n].y, xconst.ST(139), true);
                        todo.SmilieUpdate = -1;
                        break;
                    case "more":
                        hint.Hint(em[_arg1.currentTarget.n].x, em[_arg1.currentTarget.n].y, xconst.ST(9), true);
                        todo.SmilieUpdate = -1;
                        break;
                    case "GetX":
                        hint.Hint(em[_arg1.currentTarget.n].x, em[_arg1.currentTarget.n].y, xconst.ST(207), true);
                        todo.SmilieUpdate = -1;
                        break;
                    default:
                        hint.Hint(em[_arg1.currentTarget.n].x, em[_arg1.currentTarget.n].y, _arg1.currentTarget.cs, true);
                        todo.SmilieUpdate = -1;
                };
            } else {
                hint.Hint(_arg1.currentTarget.x, _arg1.currentTarget.y, ((xconst.smArray[_arg1.currentTarget.t] + " ") + xconst.smArray[_arg1.currentTarget.s]), true);
                hint.Hint(em[_arg1.currentTarget.n].x, em[_arg1.currentTarget.n].y, ((xconst.smArray[_arg1.currentTarget.t] + " ") + xconst.smArray[_arg1.currentTarget.s]), true);
                todo.SmilieUpdate = -1;
            };
            if ((xconst.f_NoSmilies & todo.FlagBits)){
                _local2 = 1;
                while (_local2 < todo.emmax) {
                    if (main.em[_local2] != null){
                        main.em[_local2].visible = true;
                    };
                    _local2++;
                };
            };
        }
        public function UpdateBackground(_arg1){
            if ((((todo.w_useroom == todo.w_room)) && ((global.xc & 0x0400)))){
                _arg1 = "";
            };
            if (((network.Bootp) && (!(this.SafeBack(_arg1))))){
                _arg1 = xatlib.SmilieUrl("zz", "bk", true);
                _arg1 = xatlib.searchreplace("zz.swf", "boot.jpg", _arg1);
            };
            if ((((_arg1 == undefined)) || ((_arg1 == "")))){
                return;
            };
            if (xatlib.xInt(_arg1) > 0){
                _arg1 = (((todo.chatdomain + "../background/xat") + xatlib.xInt(_arg1)) + ".jpg");
            };
            if (_arg1.substr(0, 7) != "http://"){
                _arg1 = "";
            };
            if (_arg1 == ""){
                this.GotBackground(0);
                this.GotBackground(1);
                return;
            };
            backs[back_no] = new loadbitmap(back_layer, _arg1, todo.StageWidth, todo.StageHeight, this.GotBackground);
            back_no = (back_no ^ 1);
        }
        function onGrpIcMouseDown(_arg1:MouseEvent){
            if (((((todo.w_owner) || (todo.w_mainowner))) && ((todo.FlagBits & xconst.f_Live)))){
                if ((global.xc & 0x0800)){
                    mcLoad.OpenByN(40000);
                } else {
                    xatlib.GotoXat("40000");
                };
                return;
            };
            var _local2:* = (xconst.usedomain + "/groups");
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(8), _local2);
        }
        private function GotBackground(_arg1=null){
            if (_arg1 == null){
                _arg1 = back_no;
            };
            if (backs[_arg1]){
                back_layer.removeChild(backs[_arg1]);
            };
            backs[_arg1] = null;
            _arg1 = (_arg1 ^ 1);
            if (backs[_arg1]){
                backs[_arg1].width = todo.StageWidth;
                backs[_arg1].height = todo.StageHeight;
            };
        }
        function onLoadLoaded(_arg1:Event){
            mcLoad = MovieClip(mcxLoad.contentLoaderInfo.content);
            mcLoad.ping();
        }
        public function UpdateEmotes(){
            var _local7:*;
            var _local10:*;
            var _local11:Boolean;
            var _local12:Boolean;
            var _local13:*;
            var _local14:Class;
            var _local15:*;
            while (this.emotes.numChildren) {
                this.emotes.removeChildAt(0);
            };
            em.length = 0;
            var _local1:* = (xatlib.NY(30) & 1048574);
            var _local2:* = (xatlib.NX(30) & 1048574);
            if (_local2 < _local1){
                _local1 = _local2;
            };
            var _local3:* = xatlib.NX(10);
            var _local4:* = (xatlib.NY(395) - _local1);
            var _local5:* = xatlib.NX(440);
            var _local6:* = (_local1 + 3);
            todo.emmax = Math.floor(((_local5 + 3) / _local6));
            if (todo.emmax > 16){
                todo.emmax = 16;
            };
            var _local8:* = 0;
            var _local9:* = ((todo.config["smline"])!=null) ? todo.config["smline"].split(",") : new Array();
            _local7 = 0;
            while (_local7 < todo.emmax) {
                while (!((xconst.smArray[_local8] < 0))) {
                    _local8++;
                };
                _local10 = xconst.smArray[(_local8 - 1)];
                if (_local7 == (todo.emmax - 3)){
                    _local10 = "GetX";
                };
                if (_local7 == (todo.emmax - 2)){
                    _local10 = "GetStuff";
                };
                if (_local7 == (todo.emmax - 1)){
                    _local10 = "more";
                };
                _local11 = (((((((_local10 == "GetX")) || ((_local10 == "News")))) || ((_local10 == "GetStuff")))) || ((_local10 == "more")));
                _local12 = ((_local11) || ((_local7 >= _local9.length)));
                _local13 = _local9[_local7];
                if (!_local12){
                    _local12 = !(xatlib.SmOk(_local13));
                };
                if (_local12){
                    _local14 = (getDefinitionByName(_local10) as Class);
                    em[_local7] = new (_local14);
                    this.emotes.addChild(em[_local7]);
                    em[_local7].scaleX = (em[_local7].scaleY = (_local1 / 19));
                    em[_local7].visible = false;
                } else {
                    em[_local7] = new MovieClip();
                    em[_local7].mc = new smiley(em[_local7], _local13, _local1);
                    em[_local7].cs = em[_local7].SA;
                    this.emotes.addChild(em[_local7]);
                    em[_local7].visible = false;
                };
                em[_local7].x = (em[_local7].startx = (_local3 + (_local7 * _local6)));
                em[_local7].y = (em[_local7].starty = _local4);
                em[_local7].starts = em[_local7].scaleX;
                em[_local7].buttonMode = true;
                em[_local7].n = _local7;
                if (_local11){
                    em[_local7].cs = _local10;
                } else {
                    em[_local7].s = (_local8 - 2);
                    em[_local7].t = (_local8 - 1);
                };
                em[_local7].addEventListener(MouseEvent.MOUSE_DOWN, this.onSmilieMouseDown);
                em[_local7].addEventListener(MouseEvent.ROLL_OVER, this.onSmilieMouseRollOver);
                em[_local7].addEventListener(MouseEvent.ROLL_OUT, this.onSmilieMouseRollOut);
                _local8++;
                _local7++;
            };
            this.CreateSoundIcon("Speaker", 1);
            this.CreateSoundIcon("Radio", 2);
            if (!(xconst.f_NoSmilies & todo.FlagBits)){
                _local15 = 0;
                while (_local15 < todo.emmax) {
                    if (em[_local15]){
                        em[_local15].visible = true;
                    };
                    _local15++;
                };
            } else {
                em[0].visible = true;
            };
        }
        function GetAChatBox_onRollOver(_arg1:MouseEvent){
            if (todo.w_mainowner){
                hint.Hint(mcgetachat.But.x, mcgetachat.But.y, xconst.ST(28), true, 0, un, 100);
            } else {
                hint.Hint(mcgetachat.But.x, mcgetachat.But.y, xconst.ST(29), true, 0, un, 100);
            };
        }
        function ButRollTick(_arg1:Event){
            _arg1.currentTarget.Count--;
            if (_arg1.currentTarget.Count < 0){
                _arg1.currentTarget.vol.visible = false;
                _arg1.currentTarget.removeEventListener(Event.ENTER_FRAME, this.ButRollTick);
            };
        }
        function textfield2onChanged(_arg1:Event){
            var _local2:*;
            if (textfield2.text == "\r"){
                textfield2.text = "";
                todo.PrivateMessage = 0;
                lockmc.visible = false;
            } else {
                if (textfield2.text.indexOf("\r") != -1){
                    _local2 = 0;
                    while (_local2 < textfield2.length) {
                        if (textfield2.text.charAt(_local2) == ">"){
                            textfield2.text = ((textfield2.text.substr(0, _local2) + "˃") + textfield2.text.substr((_local2 + 1)));
                        };
                        _local2++;
                    };
                    this.PostMessage(textfield2.text);
                    textfield2.text = "";
                };
            };
        }
        function VolRelease(_arg1:MouseEvent){
            Dragee.stopDrag();
            stage.removeEventListener(MouseEvent.MOUSE_UP, this.VolRelease);
            stage.removeEventListener(MouseEvent.MOUSE_MOVE, this.VolDrag);
            Dragee.parent.visible = false;
            xatlib.MainSolWrite(("w_Vol" + Dragee.parent.bit), todo.w_Vol[Dragee.parent.bit]);
        }
        public function onMsg(){
            var uid:* = undefined;
            if (ProfileUserNo != 0){
                uid = xatlib.FindUser(ProfileUserNo);
                if (uid >= 0){
                    sending_profile.send("sprofile", "onMsg", todo.Users[uid], xatlib.GetUserStatus(uid));
                };
            };
            try {
                if (receiving_profile != null){
                    receiving_profile.close();
                };
                if (sending_profile != null){
                    sending_profile.close();
                };
            } catch(error:Error) {
            };
            ProfileUserNo = 0;
            receiving_profile = null;
            sending_profile = null;
        }
        function ButtonLoginMc_onRelease(_arg1:MouseEvent){
            todo.LoginPressed = true;
            logoutbutonPress();
        }
        public function GoGroup(){
            if ((((global.xc & 0x0800)) && ((todo.w_useroom == todo.w_room)))){
                return;
            };
            var _local1:* = xatlib.GroupUrl();
            xatlib.getURL(_local1, "_blank");
            xatlib.UrlPopup(xconst.ST(13, _local1), _local1);
        }
        public function OnUsers(_arg1=undefined){
            utabsmc.SetVisitorsTab();
            todo.DoBuildUserListScrollUp = true;
            var _local2:* = todo.Users.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.Users[_local3].friend){
                    xmessage.DeleteOneUserMc(_local3);
                };
                _local3++;
            };
        }
        public function onHelpIcon(_arg1:MouseEvent){
        }
        function ButPress(_arg1, _arg2=null){
            var _local3:*;
            if (_arg1){
                _local3 = _arg1.currentTarget;
            } else {
                _local3 = _arg2.parent.parent;
            };
            if (((_arg1) && ((_arg1.stageY < _local3.y)))){
                return;
            };
            if ((_local3.bit & 3)){
                if ((todo.w_sound & _local3.bit)){
                    todo.w_sound = (todo.w_sound & ~(_local3.bit));
                    _local3.SoundIsOff.visible = true;
                } else {
                    todo.w_sound = (todo.w_sound | _local3.bit);
                    _local3.SoundIsOff.visible = false;
                };
                tickcode.SetRadio();
                xatlib.MainSolWrite("w_sound", todo.w_sound);
            };
        }
        function retmc_onPress(_arg1:MouseEvent){
            var _local2:* = 0;
            while (_local2 < textfield2.length) {
                if (textfield2.text.charAt(_local2) == ">"){
                    textfield2.text = ((textfield2.text.substr(0, _local2) + "˃") + textfield2.text.substr((_local2 + 1)));
                };
                _local2++;
            };
            this.PostMessage(textfield2.text);
            textfield2.text = "";
        }
        public function OnFriends(_arg1=undefined){
            network.GetFriendStatus();
            utabsmc.SetVisitorsTab(1);
            todo.DoBuildUserListScrollUp = true;
        }
        function VolRollOut(_arg1:MouseEvent){
            _arg1.currentTarget.parent.Count = 12;
        }
        public function Lobby_onRelease(_arg1=undefined){
            var _local2:Number;
            _local2 = todo.group;
            if (((!((todo.w_useroom == _local2))) || ((todo.lb == "n")))){
                utabsmc.SetVisitorsTab();
                todo.w_useroom = _local2;
                network.w_redirectport = (network.w_redirectdom = undefined);
                xmessage.ClearLists(true);
                xatlib.ReLogin();
                todo.ScrollDown = true;
                todo.LastScrollTime = undefined;
                hint.HintOff();
            } else {
                if (ctabsmc.tabs[1].Main){
                    todo.DoBuildUserListScrollUp = true;
                    todo.DoUpdateMessages = true;
                    todo.ScrollDown = true;
                    todo.LastScrollTime = undefined;
                    this.GoGroup();
                } else {
                    todo.DoBuildUserListScrollUp = true;
                    todo.DoUpdateMessages = true;
                    todo.ScrollDown = true;
                    todo.LastScrollTime = undefined;
                };
            };
            ctabsmc.UpdateTabs(1);
            ctabsmc.ColorTab(1, 0xFFFFFF);
        }
        function onMessageScrollChange(){
            todo.DoUpdateMessages = true;
        }
        public function PostMessage(_arg1:String){
            var _local4:*;
            if (ctabsmc.TabIsPrivate()){
                todo.PrivateChat = ctabsmc.TabUser();
                _local4 = xatlib.FindUser(todo.w_userno);
                if (todo.HasPower(_local4, 75)){
                    if (_arg1.indexOf("(bump") != -1){
                        todo.CustomSound = "laserfire3";
                        todo.DoAudieSnd = true;
                    };
                };
            } else {
                todo.PrivateChat = 0;
            };
            if (todo.PrivateMessage != 0){
                lockmc.visible = false;
            };
            if (_arg1.length == 0){
                return;
            };
            _arg1 = xatlib.CleanMessage(_arg1);
            var _local2:* = ctabsmc.TabSelected();
            var _local3:* = xatlib.xInt(ctabsmc.tabs[_local2].IMtype);
            if (_local3 >= 128){
                chat.IM.ImPostMessage(_arg1, _local3);
                return;
            };
            _arg1 = _arg1.substr(0, 0x0100);
            if (todo.w_userrev == undefined){
                todo.w_userrev = 0;
                if (todo.lb == "t"){
                    todo.lb = "n";
                    todo.DoUpdate = true;
                    network.NetworkClose();
                };
            };
            if (todo.lb == "n"){
                logoutbutonPress();
            };
            todo.ResetSmilies = true;
            todo.MessageToProcess = _arg1;
        }
        public function Home_onRelease(_arg1=undefined){
            var _local2:Number = todo.w_room;
            if (((!((todo.w_useroom == _local2))) || ((todo.lb == "n")))){
                utabsmc.SetVisitorsTab();
                todo.w_useroom = todo.w_room;
                xmessage.ClearLists(true);
                todo.lb = "n";
                todo.DoUpdate = true;
                network.NetworkClose();
                logoutbutonPress();
                todo.ScrollDown = true;
                todo.LastScrollTime = undefined;
                hint.HintOff();
            } else {
                todo.DoBuildUserListScrollUp = true;
                todo.DoUpdateMessages = true;
                todo.ScrollDown = true;
                todo.LastScrollTime = undefined;
            };
            if (ctabsmc.tabs[0].Main){
                this.GoGroup();
            };
            ctabsmc.UpdateTabs(0);
            ctabsmc.ColorTab(0, 0xFFFFFF);
        }
        function VolDrag(_arg1:MouseEvent){
            var _local2:* = (todo.w_Vol[Dragee.parent.bit] = (102 - Dragee.y));
            Dragee.parent.Count = 12;
            _local2 = (_local2 > 2);
            if (!(((todo.w_sound & Dragee.parent.bit) == 0)) != _local2){
                this.ButPress(null, Dragee);
            };
            if (Dragee.parent.bit == 1){
            } else {
                tickcode.DoRadio(true);
            };
        }
        function onSmilieMouseRollOut(_arg1:MouseEvent){
            hint.HintOff();
            todo.SmilieUpdate = 1000;
        }
        public function CreateSoundIcon(_arg1, _arg2){
            var _local3:*;
            var _local4:*;
            if (RadioSound[_arg2]){
                chat_layer.removeChild(RadioSound[_arg2]);
            };
            RadioSound[_arg2] = null;
            if ((((_arg2 == 2)) && ((todo.useRadio == undefined)))){
                return;
            };
            _local4 = (RadioSound[_arg2] = xatlib.AttachMovie(chat_layer, _arg1));
            _local3 = _local4;
            if (_arg2 == 1){
                SndIcnX = 0;
                mcsnd = _local3;
                _local3.SoundIsOff.visible = ((todo.w_sound & _arg2) == 0);
                _local3.gotoAndStop(1);
            };
            _local4.x = (xatlib.NX(446) + SndIcnX);
            _local4.y = xatlib.NY(((395 - 32) + 4));
            var _local5:* = ((xatlib.NX(24) < xatlib.NY(24))) ? xatlib.SX() : xatlib.SY();
            _local3.scaleY = (_local3.scaleX = _local5);
            SndIcnX = (SndIcnX - int((_local3.scaleX * 32)));
            _local3.bit = _arg2;
            if ((((_arg2 == 2)) && (em[(todo.emmax - 1)]))){
                this.emotes.removeChild(em[(todo.emmax - 1)]);
                em[(todo.emmax - 1)] = null;
                _local3.SoundIsOff.visible = ((todo.w_sound & _arg2) == 0);
            };
            var _local6:* = (_local3.vol = new MovieClip());
            _local4.addChild(_local6);
            _local6.bit = _arg2;
            _local6.y = -118;
            _local6.x = 8;
            _local6.Bk = new xBut(_local6, -8, -4, 22, 118, "", undefined, ((xBut.b_Panel | xBut.b_Border) | xBut.b_NoPress), 5);
            _local6.addEventListener(MouseEvent.ROLL_OVER, this.VolRollOver);
            _local6.addEventListener(MouseEvent.ROLL_OUT, this.VolRollOut);
            var _local7:* = new MovieClip();
            _local6.addChild(_local7);
            _local7.y = 5;
            _local7.addChild(xatlib.ButtonCurve2(2, 4, 100, 0, 1, todo.ButCol, 1, todo.ButColW));
            _local6.Vol = new xBut(_local6, -5, (100 - todo.w_Vol[_arg2]), 15, 10, "", undefined, xBut.b_NoPress, 5);
            _local6.visible = false;
            var _local8:* = _local6.Vol.But;
            _local8.addEventListener(MouseEvent.MOUSE_DOWN, this.VolPress);
            _local8.addEventListener(MouseEvent.MOUSE_UP, this.VolRelease);
            _local3.addEventListener(MouseEvent.ROLL_OVER, this.ButRollOver);
            _local3.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
            _local3.addEventListener(MouseEvent.MOUSE_DOWN, this.ButPress);
        }
        public function GotoProfile(_arg1){
            var Userno:* = _arg1;
            try {
                if (receiving_profile != null){
                    receiving_profile.close();
                };
                if (sending_profile != null){
                    sending_profile.close();
                };
            } catch(error:Error) {
            };
            ProfileUserNo = Userno;
            receiving_profile = new LocalConnection();
            sending_profile = new LocalConnection();
            receiving_profile.client = this;
            try {
                receiving_profile.connect("profile");
            } catch(error:ArgumentError) {
            };
            var url:* = "http://xatspace.com/";
            var uid:* = xatlib.FindUser(Userno);
            if (todo.Users[uid].registered != undefined){
                url = (url + todo.Users[uid].registered);
            } else {
                url = (url + "unregistered");
            };
            xatlib.getURL(url, "_blank");
        }
        function onSmilieMouseDown(_arg1:MouseEvent){
            if (_arg1.currentTarget.cs != undefined){
                switch (_arg1.currentTarget.cs){
                    case "GetX":
                        xatlib.Register_onRelease(1);
                        break;
                    case "News":
                        todo.w_news = todo.News;
                        xatlib.MainSolWrite("w_news", todo.News);
                        xatlib.GotoWeb((xconst.usedomain + "/news"));
                        break;
                    case "GetStuff":
                        main.hint.HintOff();
                        todo.SmilieUpdate = 0;
                        xkiss.CreateBuystuff(0);
                        break;
                    case "more":
                        mcLoad = MovieClip(mcxLoad.contentLoaderInfo.content);
                        mcLoad.OpenSmilies();
                        main.hint.HintOff();
                        todo.SmilieUpdate = 0;
                        if ((global.xc & 0x0800)){
                            mcLoad.OpenSmilies();
                        } else {
                            xatlib.GotoXat("5");
                        };
                        break;
                    default:
                        stage.focus = textfield2;
                        textfield2.appendText(_arg1.currentTarget.cs);
                        textfield2.setSelection(textfield2.text.length, textfield2.text.length);
                };
            } else {
                stage.focus = textfield2;
                textfield2.appendText(xconst.smArray[_arg1.currentTarget.s]);
                textfield2.setSelection(textfield2.text.length, textfield2.text.length);
            };
        }
        function VolPress(_arg1:MouseEvent){
            _arg1.currentTarget.startDrag(true, new Rectangle(-5, 2, 0, 100));
            stage.addEventListener(MouseEvent.MOUSE_UP, this.VolRelease);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, this.VolDrag);
            Dragee = _arg1.currentTarget;
        }
        public function SafeBack(_arg1:String){
            var _local2:* = _arg1.toLowerCase().split("/");
            if (!_local2[2]){
                return (false);
            };
            _local2 = _local2[2].split(".");
            var _local3:* = _local2.length;
            if (_local2[(_local3 - 1)] !== "com"){
                return (false);
            };
            return (this.OkPic[_local2[(_local3 - 2)]]);
        }
        public function OnTickle(_arg1=undefined){
            network.GetFriendStatus();
            utabsmc.SetVisitorsTab(2);
            todo.DoBuildUserListScrollUp = true;
        }
        function RollOutHintOff(_arg1:MouseEvent){
            hint.HintOff();
        }
        function GetAChatBox_onRelease(_arg1:MouseEvent){
            var _local2:*;
            main.hint.HintOff();
            if (todo.w_useroom != todo.w_room){
                this.Home_onRelease();
            };
            if (((((!(todo.w_mainowner)) || (global.xb))) || ((((xatlib.xInt(todo.pass) == 0)) && ((xatlib.xInt(todo.w_dt) == 0)))))){
                CreateEditYourChatBox(0);
            } else {
                if (xatlib.xInt(todo.pass) == 0){
                    _local2 = ((((((((xconst.chatdomain + "../chat.php?id=") + todo.w_room) + "&u=") + todo.w_userno) + "&k2=") + todo.w_k2) + "&dt=") + todo.w_dt);
                    xatlib.getURL(_local2, "_blank");
                    xatlib.UrlPopup(xconst.ST(50), _local2);
                } else {
                    CreateEditYourChatBox(1);
                };
            };
        }
        function ButRollOver(_arg1:MouseEvent){
            var _local2:*;
            if (_arg1.currentTarget.bit == 1){
                if ((todo.w_sound & _arg1.currentTarget.bit)){
                    _local2 = xconst.ST(11);
                } else {
                    _local2 = xconst.ST(10);
                };
            };
            if (_arg1.currentTarget.bit == 2){
                if ((todo.w_sound & _arg1.currentTarget.bit)){
                    _local2 = xconst.ST(179);
                } else {
                    _local2 = xconst.ST(180);
                };
            };
            _arg1.currentTarget.vol.visible = true;
            _arg1.currentTarget.Count = 12;
            _arg1.currentTarget.addEventListener(Event.ENTER_FRAME, this.ButRollTick);
            main.hint.Hint(xatlib.NX(0), -(xatlib.NY(24)), _local2, true, 1, un, 0, _arg1.currentTarget);
        }
        function StartChat(){
            fmts.color = 0;
            fmts.align = "left";
            fmts.font = "_sans";
            fmts.size = 10;
            fmts.bold = true;
            back_layer = new xSprite();
            addChild(back_layer);
            hint = new hints();
            addChild(equ);
            todo.tpw = xatlib.NX(460);
            todo.tph = xatlib.NY(320);
            todo.tpx = xatlib.NX(10);
            todo.tpy = xatlib.NY(10);
            textPaneWidth = ((todo.tpw - 15) - 45);
            Security.allowDomain("xat.com");
            Security.allowDomain("www.xatech.com");
            mcxLoad = new Loader();
            var _local1:URLRequest = new URLRequest("http://xat.com/web_gear/flash/load2.swf?a3");
            mcxLoad.load(_local1);
            mcxLoad.contentLoaderInfo.addEventListener(Event.COMPLETE, this.onLoadLoaded);
            mcxLoad.visible = false;
            addChild(mcxLoad);
            this.cmessmc = new xmessage();
            addChild(this.cmessmc);
            ctabsmc = new ctabs();
            addChild(ctabsmc);
            mctextbackgroundmask = xatlib.AddBackground(this, (todo.tpx + 1), (todo.tpy + 1), ((todo.tpw - 2) - xatlib.NX(16)), (todo.tph - 2), xatlib.c_bl);
            mctextbackground = new Sprite();
            mctextbackground.x = todo.tpx;
            mctextbackground.y = todo.tpy;
            mctextbackground.mask = mctextbackgroundmask;
            addChild(mctextbackground);
            utabsmc = new ctabs();
            addChild(utabsmc);
            upw = xatlib.NX(150);
            uph = xatlib.NY(320);
            upx = xatlib.NX(480);
            upy = xatlib.NY(10);
            mcuserbackgroundmask = xatlib.AddBackground(this, (main.upx + 1), (main.upy + 1), ((main.upw - 2) - xatlib.NX(16)), (main.uph - 2), 0);
            mcuserbackground = new Sprite();
            mcuserbackground.x = main.upx;
            mcuserbackground.y = main.upy;
            mcuserbackground.mask = mcuserbackgroundmask;
            addChild(mcuserbackground);
            mscrollmc = new xScroll(this, ((todo.tpx + todo.tpw) - xatlib.NX(16)), todo.tpy, xatlib.NX(16), todo.tph, xatlib.NX(16), xatlib.NX(32), 100, (10 * 100), (10 * 100), this.onMessageScrollChange);
            uscrollmc = new xScroll(this, ((upx + upw) - xatlib.NX(16)), upy, xatlib.NX(16), uph, xatlib.NX(16), xatlib.NX(32), 20, (10 * 100), (0 * 100), onUserScrollChange);
            lockmc = new lock();
            addChild(lockmc);
            lockmc.x = xatlib.NX(17);
            lockmc.y = xatlib.NY(407);
            lockmc.visible = false;
            lockmc.alpha = 0.75;
            lockmc.width = int(((lockmc.width * xatlib.NY(60)) / lockmc.height));
            lockmc.height = xatlib.NY(60);
            this.textfield2background = xatlib.AddBackground(this, xatlib.NX(10), xatlib.NY(400), xatlib.NX(425), xatlib.NY(70));
            fmt = new TextFormat();
            fmt.align = "left";
            fmt.bold = true;
            fmt.color = 0;
            fmt.font = "_sans";
            fmt.size = 14;
            textfield2 = new TextField();
            textfield2.x = xatlib.NX((10 + 4));
            textfield2.y = xatlib.NY(400);
            textfield2.width = xatlib.NX((425 - 4));
            textfield2.height = xatlib.NY(70);
            textfield2.type = "input";
            textfield2.multiline = true;
            textfield2.wordWrap = true;
            textfield2.defaultTextFormat = fmt;
            textfield2.addEventListener(Event.CHANGE, this.textfield2onChanged);
            addChild(textfield2);
            mcscroller = new Sprite();
            mcscrollertext = new TextField();
            mcscrollertext.x = xatlib.NX(435);
            mcscrollertext.y = xatlib.NY(456);
            mcscrollertext.width = 10000;
            mcscrollertext.height = 20;
            SetScroller("");
            mcscroller.addChild(mcscrollertext);
            var _local2:* = xatlib.AddBackground(mcscroller, xatlib.NX(10), xatlib.NY(400), xatlib.NX(425), xatlib.NY(80), xatlib.c_bl);
            mcscroller.mask = _local2;
            addChild(mcscroller);
            retmc = new xBut(this, xatlib.NX(446), xatlib.NY(400), xatlib.NX(24), xatlib.NY(70), "");
            retmcBut = new returnicon();
            retmcBut.x = ((xatlib.NX(24) - 16) / 2);
            retmcBut.y = ((xatlib.NY(70) - 16) / 2);
            xatlib.McSetRGB(retmcBut, todo.ButColW);
            retmc.SetRoll(xconst.ST(4));
            retmc.addEventListener(MouseEvent.MOUSE_DOWN, this.retmc_onPress);
            retmc.addEventListener(MouseEvent.ROLL_OUT, this.RollOutHintOff);
            retmc.addChild(retmcBut);
            mcgetachat = new xBut(this, xatlib.NX(480), xatlib.NY(400), xatlib.NX(150), xatlib.NY(30), xconst.ST(5), this.GetAChatBox_onRelease);
            mcgetachat.addEventListener(MouseEvent.ROLL_OVER, this.GetAChatBox_onRollOver);
            mcgetachat.SetRoll(this.GetAChatBox_onRollOver);
            ButtonLoginMc = new xBut(this, xatlib.NX(480), xatlib.NY(440), xatlib.NX(150), xatlib.NY(30), xconst.ST(19));
            ButtonLoginMc.addEventListener(MouseEvent.MOUSE_DOWN, this.ButtonLoginMc_onRelease);
            ButtonLoginMc.SetRoll(this.ButtonLoginMc_onRollOver);
            debugtext.x = xatlib.NX(10);
            debugtext.y = (xatlib.NY(456) - 16);
            debugtext.height = 20;
            debugtext.width = xatlib.NX(425);
            debugtext.defaultTextFormat = fmts;
            debugtext.setTextFormat(fmts);
            debugtext.text = "";
            debugtext.visible = false;
            addChild(debugtext);
            chat_layer = new MovieClip();
            addChild(chat_layer);
            this.MkGpBut();
            var _local3:* = new HelpIcon();
            _local3.info.visible = false;
            _local3.x = xatlib.NX((524 - 4));
            _local3.y = xatlib.NY(((395 - 32) + 4));
            _local3.scaleX = (_local3.scaleY = (GrpIc.scaleX * 1.1));
            _local3.buttonMode = true;
            _local3.addEventListener(MouseEvent.MOUSE_DOWN, helpdialog.HelpDialog);
            addChild(_local3);
            main.hint.AddEasyHint(_local3, xconst.ST(7));
            var _local4:* = new xatsat();
            new xatsat().scaleX = (_local4.scaleY = (GrpIc.scaleX / 11));
            _local4.x = (xatlib.NX((640 - 10)) - _local4.width);
            _local4.y = xatlib.NY(((395 - 32) + 4));
            _local4.buttonMode = true;
            _local4.addEventListener(MouseEvent.MOUSE_DOWN, this.onxatLogo);
            addChild(_local4);
            main.hint.AddEasyHint(_local4, "http://xat.com", {Pos:0});
            addChild(this.emotes);
            ctabsmc.CreateTabs();
            utabsmc.CreateVisitorsTabs();
            dialogs = new MovieClip();
            addChild(dialogs);
            box_layer = new MovieClip();
            addChild(box_layer);
            addChild(hint);
            kiss_layer = new MovieClip();
            addChild(kiss_layer);
        }
        public function tick2(_arg1:Event){
            var _local2:*;
            var _local3:*;
            var _local4:*;
            if (nudge > 0){
                _local2 = nudge;
                if (_local2 > 8){
                    _local2 = 8;
                };
                _local3 = Math.round(((Math.random() * _local2) - (_local2 / 2)));
                _local4 = Math.round(((Math.random() * _local2) - (_local2 / 2)));
                x = _local3;
                y = _local4;
                back_layer.x = -(_local3);
                back_layer.y = -(_local4);
                nudge--;
                if (nudge == 0){
                    x = (y = (back_layer.x = (back_layer.y = 0)));
                };
            };
            if ((todo.tick % 12) == 0){
                xAvatar.oatc = xAvatar.atc;
            };
        }
        public function onxatLogo(_arg1:MouseEvent){
            var _local2:* = "http://xat.com";
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(8), _local2);
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.text.*;
    import flash.system.*;

    public dynamic class xBut extends Sprite {

        public static const b_Gray:Number = 128;
        public static const b_NoPress:Number = 32;
        public static const b_Panel:Number = 8;
        public static const b_Border:Number = 16;
        public static const b_LeftText:Number = 2;
        public static const b_mouseChild = 0x0100;
        public static const b_Grayed:Number = 64;

        var ButColor;
        var PressFunc;
        var but_metal;
        var sh:Number;
        var TextColor;
        var mcFmt:TextFormat;
        var RollOver;
        var But;
        var sw:Number;
        var but_back;
        var sy:Number;
        var RollOut;
        var mcTxt:TextField;
        var sx:Number;

        public function xBut(_arg1, _arg2:Number, _arg3:Number, _arg4:Number, _arg5:Number, _arg6:String, _arg7=undefined, _arg8:Number=0, _arg9:Number=10){
            var _local13:*;
            this.But = this;
            super();
            this.mouseChildren = (_arg8 & b_mouseChild);
            this.PressFunc = _arg7;
            if (_arg1 != undefined){
                _arg1.addChild(this);
            };
            this.TextColor = todo.ButColW;
            this.ButColor = todo.ButCol;
            if ((_arg8 & (b_Panel | b_Gray))){
                this.TextColor = 0;
            };
            if ((_arg8 & b_Panel)){
                _local13 = 0;
                while (_local13 < 2) {
                    if ((this.ButColor & 0x808080) == 0){
                        this.ButColor = (this.ButColor << 1);
                    };
                    _local13++;
                };
            };
            if ((_arg8 & b_Gray)){
                this.ButColor = 0xC8C8C8;
            };
            if ((_arg8 & b_Grayed)){
                this.alpha = 0.4;
                this.TextColor = 0x808080;
            };
            this.x = (this.sx = _arg2);
            this.y = (this.sy = _arg3);
            this.sw = int(_arg4);
            this.sh = int(_arg5);
            this.mcFmt = new TextFormat();
            this.mcFmt.align = "center";
            if ((_arg8 & b_LeftText)){
                this.mcFmt.align = "left";
            };
            this.mcFmt.bold = true;
            this.mcFmt.color = this.TextColor;
            this.mcFmt.font = "_sans";
            var _local10:* = xatlib.Blend(this.sw, 70, 150, 8, 20);
            var _local11:* = xatlib.Blend(this.sh, 15, 40, 10, 20);
            this.mcFmt.size = _local10;
            if (_local11 < _local10){
                this.mcFmt.size = _local11;
            };
            if (_arg8 > 0xFFFFFF){
                this.mcFmt.size = (this.mcFmt.size + (_arg8 >> 24));
            };
            this.but_back = new Metal();
            this.but_back.width = this.sw;
            this.but_back.height = this.sh;
            addChild(this.but_back);
            xatlib.McSetRGB(this.but_back, this.ButColor);
            if ((_arg8 & b_Panel)){
                this.but_metal = new panelmetal();
            } else {
                this.but_metal = new buttonmetal();
            };
            this.but_metal.width = this.sw;
            this.but_metal.height = this.sh;
            addChild(this.but_metal);
            var _local12:* = xatlib.ButtonCurve2(_arg9, this.sw, this.sh, _arg8, 0, 0, 0);
            addChild(_local12);
            this.mask = _local12;
            addChild(xatlib.ButtonCurve2(_arg9, this.sw, this.sh, _arg8, 2, 0, 0.3, 0, 0));
            this.mcTxt = new TextField();
            this.mcTxt.x = 0;
            this.mcTxt.y = 0;
            this.mcTxt.width = this.sw;
            this.mcTxt.height = this.sh;
            this.mcTxt.autoSize = TextFieldAutoSize.NONE;
            this.mcTxt.defaultTextFormat = this.mcFmt;
            this.mcTxt.text = _arg6;
            this.mcTxt.y = xatlib.Blend((this.sh - this.mcTxt.textHeight), 5, 25, 0, 10);
            this.mcTxt.selectable = true;
            addChild(this.mcTxt);
            if (!(_arg8 & b_NoPress)){
                addEventListener(MouseEvent.ROLL_OVER, this.rollOverHandler, false, 0, true);
                addEventListener(MouseEvent.ROLL_OUT, this.rollOutHandler, false, 0, true);
                addEventListener(MouseEvent.MOUSE_DOWN, this.mouseDownHandler, false, 0, true);
                buttonMode = true;
            } else {
                if (_arg6.length > 0){
                    addEventListener(MouseEvent.MOUSE_DOWN, this.TextToClip);
                };
            };
            addEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp, false, 0, true);
        }
        public function set Col(_arg1:Number){
        }
        public function SetColor(_arg1:Number){
        }
        private function cleanUp(_arg1:Event){
            stage.removeEventListener(MouseEvent.MOUSE_UP, this.mouseUpHandler);
            removeEventListener(MouseEvent.ROLL_OVER, this.rollOverHandler);
            removeEventListener(MouseEvent.ROLL_OUT, this.rollOutHandler);
            removeEventListener(MouseEvent.MOUSE_DOWN, this.mouseDownHandler);
        }
        public function Text(_arg1:String){
        }
        public function SetText(_arg1:String){
            this.mcTxt.text = _arg1;
            this.mcFmt.color = this.TextColor;
            this.mcTxt.setTextFormat(this.mcFmt);
        }
        private function TextToClip(_arg1){
            System.setClipboard(this.mcTxt.text);
        }
        public function rollOverHandler(_arg1:MouseEvent):void{
            if (this.RollOver){
                if ((this.RollOver is String)){
                    main.hint.Hint(0, 0, this.RollOver, true, 0, undefined, 0, _arg1.currentTarget);
                } else {
                    this.RollOver(_arg1);
                };
            };
            this.mcFmt.color = ~(this.TextColor);
            if ((((todo.ButColW2 < 192)) || ((todo.ButColW2 > 576)))){
                this.mcFmt.color = 0x808080;
            };
            this.mcTxt.setTextFormat(this.mcFmt);
        }
        public function mouseDownHandler(_arg1:MouseEvent):void{
            stage.addEventListener(MouseEvent.MOUSE_UP, this.mouseUpHandler);
            if (this.PressFunc){
                this.PressFunc(_arg1);
            };
            this.x++;
            this.y++;
            this.mcFmt.color = this.TextColor;
            this.mcTxt.setTextFormat(this.mcFmt);
        }
        public function RefreshColor(){
            this.TextColor = todo.ButColW;
            this.ButColor = todo.ButCol;
            xatlib.McSetRGB(this.but_back, this.ButColor);
            this.mcFmt.color = this.TextColor;
            this.mcTxt.setTextFormat(this.mcFmt);
        }
        public function set TextCol(_arg1:Number){
        }
        public function SetHint(_arg1){
            main.hint.AddEasyHint(this, _arg1, {MaxWidth:xatlib.NX(300)});
        }
        public function SetRoll(_arg1, _arg2=undefined){
            this.RollOver = _arg1;
            this.RollOut = _arg2;
        }
        public function mouseUpHandler(_arg1:MouseEvent):void{
            stage.removeEventListener(MouseEvent.MOUSE_UP, this.mouseUpHandler);
            this.x = this.sx;
            this.y = this.sy;
            this.mcFmt.color = this.TextColor;
            this.mcTxt.setTextFormat(this.mcFmt);
        }
        public function SetTextCol(_arg1:Number){
        }
        public function rollOutHandler(_arg1:MouseEvent):void{
            if (this.RollOut){
                this.RollOut();
            };
            main.hint.HintOff();
            this.mcFmt.color = this.TextColor;
            this.mcTxt.setTextFormat(this.mcFmt);
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class sleepy extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class textWrapperClip extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class Radio extends MovieClip {

        public var SoundIsOff:SoundOff;

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class chatter extends MovieClip {

        public var BFF:MovieClip;
        public var Shine:MovieClip;
        public var MBack:MovieClip;
        public var Married:MovieClip;
        public var Married2:MovieClip;
        public var Mob:MovieClip;
        public var hat:MovieClip;
        public var Gag:SoundOff;
        public var sinbin:close;
        public var BFF2:MovieClip;
        public var Star:MovieClip;
        public var xBack:MovieClip;

        public function HatsOff(){
            this.hat.visible = false;
            this.Married.visible = false;
            this.BFF.visible = false;
            this.Married2.visible = false;
            this.BFF2.visible = false;
            this.Star.visible = false;
            this.Gag.visible = false;
            this.sinbin.visible = false;
            if (!this.IsMob){
                this.Mob.visible = false;
                this.MBack.visible = false;
            };
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class tongue extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class cool extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class pwr extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.filters.*;
    import flash.geom.*;

    public class ctabs extends Sprite {

        public var tabs:Array;
        public var MaxT:Number = 10;
        var tabsmc;
        public var Notif:Boolean;
        var LastPC;

        public function ctabs(){
            this.tabs = new Array();
            super();
        }
        public function TabIsPrivate():Boolean{
            var _local1:* = this.TabSelected();
            return (((this.tabs[_local1].Flags & 1)) ? true : false);
        }
        public function UpdateTabs(_arg1:Number=NaN){
            var _local4:*;
            if (_arg1 >= this.MaxT){
                _arg1 = NaN;
            };
            if (!isNaN(_arg1)){
                _local4 = 0;
                while (_local4 < this.tabs.length) {
                    this.tabs[_local4].Main = false;
                    if (_local4 != _arg1){
                        this.tabs[_local4].Sound = undefined;
                    };
                    _local4++;
                };
                this.tabs[_arg1].Main = true;
                xmessage.DeleteOneUserMc(xatlib.FindUser(this.LastPC));
                this.LastPC = this.tabs[_arg1].User;
                xmessage.DeleteOneUserMc(xatlib.FindUser(this.LastPC));
            };
            if (this.tabs.length > 2){
                this.tabs[0].Skip = undefined;
            } else {
                if (this.tabs[1].Skip == true){
                    this.tabs[0].Skip = true;
                };
            };
            this.AddTabs(todo.tpx, todo.tpy, todo.tpw, todo.tph);
            var _local2:* = 0;
            while (_local2 < this.tabs.length) {
                this.ColorTab(_local2, this.tabs[_local2].Col);
                _local2++;
            };
            var _local3:* = this.TabUser();
            if (_local3 != todo.LastTabUser){
                if (chat.sending_lc != undefined){
                    chat.sending_lc.send(chat.fromxat, "onMsg", 2, ((((_local3 == undefined)) || (isNaN(_local3)))) ? 0 : _local3, "");
                };
            };
            todo.LastTabUser = _local3;
        }
        function DoFunc(_arg1:MouseEvent){
            _arg1.currentTarget.dFunc(_arg1.currentTarget.n);
        }
        public function ColorTab(_arg1:Number, _arg2:Number){
            this.tabs[_arg1].Col = _arg2;
            if (this.tabs[_arg1].mc == undefined){
                return;
            };
            var _local3:* = this.tabs[_arg1].mc.bub.back;
            if ((((this.tabs[_arg1].Flags & 32)) && (this.tabs[_arg1].Main))){
                _arg2 = 0xFFFFFF;
            };
            var _local4:* = _local3.transform.colorTransform;
            _local4.color = _arg2;
            _local3.transform.colorTransform = _local4;
            if ((((_arg2 == 0xFFFFFF)) && ((this.tabs[_arg1].Flags & 1)))){
                _local3.alpha = 0;
            } else {
                _local3.alpha = 1;
            };
        }
        public function AddTabs(_arg1, _arg2, _arg3, _arg4){
            var Main:* = undefined;
            var MainX:* = undefined;
            var Wid3:* = undefined;
            var mcx:* = undefined;
            var mc:* = undefined;
            var Mask:* = undefined;
            var tpx:* = _arg1;
            var tpy:* = _arg2;
            var tpw:* = _arg3;
            var tph:* = _arg4;
            var n:* = this.tabs.length;
            var v:* = 0;
            var m:* = 0;
            while (m < n) {
                if (this.tabs[m].Skip != true){
                    v = (v + 1);
                };
                m = (m + 1);
            };
            var RightM:* = 12;
            var HasTickle:* = (((v > 2)) && ((this.tabs[2].Flags & 32)));
            var TickWidth:* = xatlib.xInt(20);
            if (HasTickle){
                RightM = 6;
            };
            RightM = xatlib.NX(RightM);
            var f:* = (xatlib.c_solid | xatlib.c_NoCol);
            if (v > 0){
                f = ((xatlib.c_bl | xatlib.c_nolb) | xatlib.c_NoCol);
            };
            if (this.tabsmc != null){
                removeChild(this.tabsmc);
            };
            this.tabsmc = new MovieClip();
            addChild(this.tabsmc);
            this.tabsmc.x = tpx;
            this.tabsmc.y = (tpy + tph);
            var mctextbackgroundb:* = xatlib.AddBackground(this.tabsmc, 0, -(tph), tpw, tph, f);
            if (v == 0){
                return;
            };
            var MainW:* = xatlib.NX(120);
            if (MainW > (tpw / 2)){
                MainW = xatlib.xInt((tpw / 2));
            };
            var Olap:* = 3;
            if (v > this.MaxT){
                v = this.MaxT;
            };
            var Wid2:* = xatlib.xInt(((((tpw - RightM) - MainW) + (Olap * 2)) / (v - 1)));
            if (HasTickle){
                MainW = xatlib.NX(68);
                Wid2 = xatlib.NX(64);
                if (this.tabs[2].Main){
                    MainW = Wid2;
                };
                if (this.tabs[0].Main){
                    MainW = (MainW - 3);
                };
            };
            var xx:* = 0;
            var TabH:* = xatlib.NY(24);
            if (Wid2 > MainW){
                Wid2 = MainW;
            };
            var vv:* = 0;
            m = 0;
            while (m < n) {
                if (this.tabs[m].Skip == true){
                } else {
                    vv = (vv + 1);
                    if (vv > this.MaxT){
                        break;
                    };
                    if (this.tabs[m].Main == true){
                        if ((this.tabs[m].Flags & 32)){
                            MainW = TickWidth;
                        };
                        Main = m;
                        MainX = (xx - Olap);
                        xx = (xx + (MainW - (2 * Olap)));
                        if (m == 0){
                            MainX = (MainX + Olap);
                            xx = (xx + Olap);
                        };
                    } else {
                        if (this.tabsmc.sec == undefined){
                            this.tabsmc.sec = new MovieClip();
                            this.tabsmc.addChild(this.tabsmc.sec);
                        };
                        Wid3 = Wid2;
                        if (((HasTickle) && ((vv == 3)))){
                            Wid3 = TickWidth;
                        };
                        mcx = xatlib.ButtonCurve2(8, (Wid3 + 1), TabH, ((xatlib.c_tl + xatlib.c_tr) + xatlib.c_nolt), 0, 0xCCCCCC, 0, 0xFFFFFF, 0.4);
                        this.tabsmc.sec.addChild(mcx);
                        this.tabs[m].mc = mcx;
                        this.AddTabText(m, Wid3, TabH);
                        mcx.x = (mcx.x + xx);
                        xx = (xx + Wid3);
                    };
                };
                m = (m + 1);
            };
            mcx = xatlib.ButtonCurve2(8, MainW, TabH, ((xatlib.c_tl + xatlib.c_tr) + xatlib.c_nolt), 1, 0xCCCCCC, 1, 0xFFFFFF, 0.4);
            mcx.x = MainX;
            this.tabsmc.addChild(mcx);
            this.tabs[Main].mc = mcx;
            this.AddTabText(Main, MainW, TabH);
            vv = this.MaxT;
            m = 0;
            while (m < n) {
                vv = (vv - 1);
                if (vv < 0){
                    break;
                };
                if (this.tabs[m].Skip == true){
                } else {
                    mc = this.tabs[m].mc;
                    mc.dFunc = this.tabs[m].dFunc;
                    mc.t = this.tabs[m].t;
                    mc.h = this.tabs[m].h;
                    mc.n = m;
                    mc.buttonMode = true;
                    mc.mouseChildren = false;
                    mc.addEventListener(MouseEvent.ROLL_OVER, this.TabRollover);
                    mc.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                    mc.addEventListener(MouseEvent.MOUSE_DOWN, this.TabMouseDown);
                };
                m = (m + 1);
            };
            if (this.tabsmc.sec != undefined){
                Mask = xatlib.ButtonCurve2(8, MainW, TabH, (((xatlib.c_tl + xatlib.c_tr) + xatlib.c_nolt) + xatlib.c_inv), 0, 0, 0);
                Mask.x = MainX;
                this.tabsmc.sec.addChild(Mask);
                this.tabsmc.sec.mask = Mask;
            };
            var _local6 = this.tabsmc;
            with (_local6) {
                graphics.lineStyle(1, 0xCCCCCC, 100);
                graphics.moveTo(0, 0);
                graphics.lineTo(MainX, 0);
                graphics.moveTo((MainX + MainW), 0);
                graphics.lineTo((int(tpw) - 8), 0);
            };
            this.tabsmc.addEventListener(MouseEvent.ROLL_OUT, this.TabMouseOut);
        }
        public function AddTabText(_arg1:Number, _arg2:Number, _arg3:Number){
            var XX:* = undefined;
            var YY:* = undefined;
            var classRef:* = null;
            var swt:* = undefined;
            var n:* = _arg1;
            var sw:* = _arg2;
            var sh:* = _arg3;
            var mc:* = this.tabs[n].mc;
            var Tab:* = this.tabs[n];
            var sym:* = "bubble";
            if ((Tab.Flags & 1)){
                sym = "lock";
            };
            if ((Tab.Flags & 8)){
                sym = (10000 + Tab.Location);
            };
            if ((Tab.Flags & 32)){
                sym = "notif";
            };
            var Tx:* = 4;
            if (!(Tab.Flags & 4)){
                classRef = (getDefinitionByName(sym) as Class);
                mc.bub = new (classRef);
                mc.addChild(mc.bub);
                XX = mc.bub.width;
                YY = mc.bub.height;
                var _local5 = mc.bub;
                with (_local5) {
                    scaleX = (scaleY = ((1 / YY) * (sh - 6)));
                    y = 3;
                    swt = sw;
                    if (swt > 100){
                        swt = 100;
                    };
                    x = (sw * (10 / xatlib.NX(120)));
                    Tx = int(((x + (scaleX * XX)) + (sw * (4 / 120))));
                };
            };
            var mcFmt:* = new TextFormat();
            mcFmt.align = "left";
            mcFmt.bold = true;
            mcFmt.font = "_sans";
            var s2:* = xatlib.Blend(sh, 18, 28, 10, 16);
            mcFmt.size = int(s2);
            mcFmt.color = 0x101010;
            var mcTxt:* = new TextField();
            mcTxt.x = Tx;
            mcTxt.y = 0;
            mcTxt.width = (sw - Tx);
            mcTxt.height = sh;
            mcTxt.autoSize = TextFieldAutoSize.NONE;
            mcTxt.selectable = false;
            mcTxt.defaultTextFormat = mcFmt;
            mcTxt.text = Tab.t;
            var t:* = mc.addChild(mcTxt);
            var z:* = xatlib.Blend((sh - mcTxt.textHeight), 5, 10, 0, 3);
            mcTxt.y = (mcTxt.y + z);
            mcTxt.y = (mcTxt.y + z);
        }
        function TabRollover(_arg1:MouseEvent){
            var _local2:int;
            var _local3:*;
            if (_arg1.currentTarget.h != undefined){
                _local2 = 0;
                if ((this.tabs[_arg1.currentTarget.n].Flags & 32)){
                    _local2 = 3;
                };
                main.hint.Hint(8, 0, _arg1.currentTarget.h, true, _local2, undefined, 200, _arg1.currentTarget);
            };
            if (this.tabsmc.del != undefined){
                this.tabsmc.removeChild(this.tabsmc.del);
                this.tabsmc.del = undefined;
            };
            if (_arg1.currentTarget.dFunc != undefined){
                if (_arg1.currentTarget.dFunc == main(parent).GoGroup){
                    _local3 = new Home();
                } else {
                    _local3 = new xdelete();
                };
                this.tabsmc.addChild(_local3);
                this.tabsmc.del = _local3;
                _local3.dFunc = _arg1.currentTarget.dFunc;
                _local3.x = (((_arg1.currentTarget.x + _arg1.currentTarget.width) - 9) - 6);
                _local3.y = int(((_arg1.currentTarget.height - 9) / 2));
                _local3.n = _arg1.currentTarget.n;
                _local3.addEventListener(MouseEvent.MOUSE_DOWN, this.DoFunc);
                _local3.buttonMode = true;
            };
        }
        public function TabAdd(_arg1, _arg2, _arg3, _arg4, _arg5):Number{
            var _local6:Number = -1;
            var _local7:* = 0;
            while (_local7 < this.tabs.length) {
                if (this.tabs[_local7].User == _arg1){
                    _local6 = _local7;
                    break;
                };
                _local7++;
            };
            if (_local6 == -1){
                _local6 = this.tabs.length;
                this.tabs[_local6] = new Object();
            };
            this.tabs[_local6].User = _arg1;
            this.tabs[_local6].h = xatlib.GetUsername(_arg1);
            this.tabs[_local6].t = xatlib.StripSmilies(this.tabs[_local6].h);
            var _local8:* = xatlib.FindUser(_arg1);
            if (this.tabs[_local6].t == ""){
                todo.Users[_local8].tUpd = _local6;
            };
            this.tabs[_local6].Col = _arg2;
            this.tabs[_local6].Flags = _arg3;
            this.tabs[_local6].pFunc = _arg4;
            this.tabs[_local6].dFunc = _arg5;
            this.tabs[_local6].Location = todo.Users[_local8].Location;
            return (_local6);
        }
        public function SetVisitorsTab(_arg1:int=0){
            var _local2:int;
            if (_arg1 == 2){
                this.Notif = false;
            };
            var _local3:int;
            while (_local3 < this.tabs.length) {
                if (this.tabs[_local3].Main){
                    _local2 = _arg1;
                };
                this.tabs[_local3].Main = (_local3 == _arg1);
                _local3++;
            };
            if (((!((_local2 == _arg1))) && ((((_arg1 == 2)) || ((_local2 == 2)))))){
                xmessage.DeleteUserList(1);
            };
            this.AddTabs(main.upx, main.upy, main.upw, main.uph);
            if (this.Notif){
                this.ColorTab(2, 0x9900);
            };
        }
        public function GlowTab(_arg1:Number){
            if (this.tabs[_arg1].mc == undefined){
                return;
            };
            if (this.tabs[_arg1].Sound == undefined){
                todo.DoMessageSnd = false;
                todo.DoTabSnd = true;
                this.tabs[_arg1].Sound = true;
            };
            this.tabs[_arg1].mc.bub.filters = [todo.TextGlow];
            this.tabs[_arg1].glowc = 6;
            todo.TabGlowFlag = true;
        }
        public function TabSelected():Number{
            var _local1:* = this.tabs.length;
            var _local2:* = 0;
            while (_local2 < _local1) {
                if (this.tabs[_local2].Main == true){
                    return (_local2);
                };
                _local2++;
            };
            return (0);
        }
        function TabMouseDown(_arg1:MouseEvent){
            if (this.tabs[_arg1.currentTarget.n].pFunc){
                this.tabs[_arg1.currentTarget.n].pFunc(_arg1.currentTarget.n);
            };
        }
        public function CreateVisitorsTabs(){
            this.tabs[0] = new Object();
            this.tabs[0].t = (this.tabs[0].h = xconst.ST(2));
            this.tabs[0].Col = 0xFFFFFF;
            this.tabs[0].Flags = 4;
            this.tabs[0].pFunc = main(parent).OnUsers;
            this.tabs[1] = new Object();
            this.tabs[1].t = xconst.ST(3);
            this.tabs[1].h = (this.tabs[1].t + " ");
            this.tabs[1].Col = 0xFFFFFF;
            this.tabs[1].Flags = 4;
            this.tabs[1].pFunc = main(parent).OnFriends;
            if (todo.HasPowerA(todo.w_Powers, 81, todo.w_Mask)){
                this.tabs[2] = new Object();
                this.tabs[2].t = "";
                this.tabs[2].h = "Notifications ";
                this.tabs[2].Col = 0xFFFFFF;
                this.tabs[2].Flags = 32;
                this.tabs[2].pFunc = main(parent).OnTickle;
            };
            this.SetVisitorsTab(0);
        }
        public function TabUser():Number{
            var _local1:* = this.TabSelected();
            return (this.tabs[_local1].User);
        }
        public function CreateTabs(){
            this.tabs[0] = new Object();
            this.tabs[0].t = (this.tabs[0].h = ((global.gn)!=null) ? global.gn : xconst.ST(0));
            this.tabs[0].Col = 0xFFFFFF;
            this.tabs[0].Flags = 0;
            this.tabs[0].pFunc = main(parent).Home_onRelease;
            this.tabs[0].Skip = true;
            this.tabs[1] = new Object();
            this.tabs[1].t = (((!((global.xl == undefined))) && (!((global.xt == undefined))))) ? global.xt : "Error!";
            this.tabs[1].h = (this.tabs[1].t + " ");
            this.tabs[1].Col = 0xFFFFFF;
            this.tabs[1].Flags = 0;
            this.tabs[1].pFunc = main(parent).Lobby_onRelease;
            this.tabs[1].dFunc = main(parent).GoGroup;
            this.tabs[1].Skip = true;
            this.UpdateTabs(0);
        }
        function TabMouseOut(_arg1:MouseEvent){
            if (this.tabsmc.del != undefined){
                this.tabsmc.removeChild(this.tabsmc.del);
                this.tabsmc.del = undefined;
            };
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class crying extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class xatsat extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;
    import flash.ui.*;

    public class viewprofile extends Sprite {

        static const TO = 5;

        static var tf;
        static var tf2;
        public static var mcreasonbackground;
        static var bBan;
        static var un = "";
        static var SavedUserNo;
        public static var mcviewprofilebackground;

        static function ViewprofileonUnMake(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            network.NetworkMakeUser(_local2, "r");
            CloseViewprofile();
        }
        static function CloseReason(_arg1:MouseEvent=undefined){
            CloseViewprofile();
        }
        static function ViewprofileonModerate(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            network.NetworkMakeUser(_local2, "m");
            CloseViewprofile();
        }
        static function ViewprofileonKick(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            CloseViewprofile();
            CreateReasonDialog(_local2, false);
        }
        static function Delete(){
        }
        static function ReasonOK(_arg1:MouseEvent=undefined){
            if (bBan){
                DoBan("g");
            } else {
                if (tf.text.length > 0){
                    network.NetworkKickUser(SavedUserNo, (tf.text + (((tf2) && ((tf2.text.length > 0)))) ? ("#" + tf2.text) : ""));
                } else {
                    todo.helpstr = xconst.ST(124);
                    todo.HelpUpdate = 0;
                };
            };
            CloseReason();
        }
        static function ViewprofileonPowers(_arg1:Event){
            powers.PowersDialog(mcviewprofilebackground.UserNo, un);
        }
        static function WriteLocation(_arg1:String, _arg2, _arg3:String){
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local10:*;
            var _local11:*;
            var _local12:*;
            if (!mcviewprofilebackground){
                return;
            };
            var _local4:MovieClip = mcviewprofilebackground.Dia;
            if (_local4.UserNo != xatlib.xInt(_arg2)){
                return;
            };
            var _local5:* = xatlib.xInt(_arg2).toString();
            if (_local5.substr(-6, 6) == "000000"){
                _local5 = (_local5.substr(0, (_local5.length - 6)) + "M");
            };
            var _local6:* = (" " + ((_arg3)!=undefined) ? (((_arg3 + " (") + _local5) + ")") : xatlib.xInt(_arg2));
            _local4.DiaBar.SetText(xatlib.FixLI(_local6));
            if (_local4.txt1 != undefined){
                if (_local4.txt4){
                    _local4.removeChild(_local4.txt4);
                };
                _local4.txt4 = new xSprite();
                _local4.addChild(_local4.txt4);
                xatlib.createTextNoWrap(_local4.txt4, 0, 0, (270 + 10), 15, _arg1, 0, 0, 100, 0, 14, "left", 1);
                _local4.txt4.x = (((_local4.DiaBack.x + 5) + 17) + 5);
                _local4.txt4.y = (((_local4.DiaBack.y + 37) + 15) + 16);
                if (xatlib.CountLinks(_arg1) != 0){
                    if (!((((todo.w_mainowner) || (todo.w_owner))) || (todo.w_moderator))){
                        _local7 = xatlib.FindUser(_local4.UserNo);
                        if ((todo.Users[_local7].Powers[0] & (1 << 10))){
                            _local8 = _local4.pm.But.y;
                            _local9 = _local4.pm.But.x;
                            _local4.removeChild(_local4.pm);
                            _local10 = undefined;
                            if (((!(todo.Users[_local7].online)) && (!(todo.Users[_local7].onsuper)))){
                                _local10 = (xBut.b_Grayed + xBut.b_NoPress);
                            };
                            _local4.pm = new xBut(_local4, _local9, _local8, 150, xatlib.NY(30), xconst.ST(69), ViewprofileonPrivChat, _local10);
                            _local4.pm.SetRoll(xconst.ST(70));
                            _local4.pm.But.UserNo = _local4.UserNo;
                        };
                        if (todo.HasPower(_local7, 69)){
                            _local8 = _local4.im.But.y;
                            _local9 = _local4.im.But.x;
                            _local4.removeChild(_local4.im);
                            _local10 = undefined;
                            if (((!(todo.Users[_local7].online)) && (!(todo.Users[_local7].onsuper)))){
                                _local10 = (xBut.b_Grayed + xBut.b_NoPress);
                            };
                            _local4.im = new xBut(_local4, _local9, _local8, 150, xatlib.NY(30), xconst.ST(71), ViewprofileonPriv, _local10);
                            _local4.im.SetRoll(xconst.ST(72));
                            _local4.im.But.UserNo = _local4.UserNo;
                        };
                    };
                    _local4.txt4.str = _arg1;
                    _local4.txt4.addEventListener(MouseEvent.MOUSE_DOWN, GoFriend);
                    _local4.txt4.addEventListener(MouseEvent.ROLL_OVER, GoFriendHint);
                    _local4.txt4.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                    _local4.txt4.buttonMode = true;
                    _local4.txt4.mouseChildren = false;
                };
                if (_local4.po != undefined){
                    _local7 = xatlib.FindUser(_local4.UserNo);
                    _local11 = _local4.po.But.y;
                    _local12 = _local4.po.But.x;
                    _local4.po = new xBut(_local4, _local12, _local11, 150, xatlib.NY(30), xconst.ST(189), ViewprofileonPowers, 0);
                    xatlib.AttachBut(_local4.po, "pwr");
                    _local4.po.But.UserNo = _local4.UserNo;
                };
            };
        }
        static function ViewprofileonIgnore(_arg1:MouseEvent=undefined){
            network.NetworkIgnore(mcviewprofilebackground.UserNo, (chat.isKeyDown(Keyboard.SHIFT)) ? true : undefined);
            CloseViewprofile();
        }
        static function ViewprofileonOwner(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            network.NetworkMakeUser(_local2, "M");
            CloseViewprofile();
        }
        static function ViewprofileImInv(_arg1){
            chat.IM.ImPostMessage((("Join me on " + xatlib.GroupUrl()) + " chat group :)"), undefined, mcviewprofilebackground.UserNo);
            CloseViewprofile();
        }
        static function ViewprofileonMember(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            network.NetworkMakeUser(_local2, "e");
            CloseViewprofile();
        }
        private static function GoFriend(_arg1:MouseEvent){
            var _local2:* = xatlib.CountLinks(_arg1.currentTarget.str, 1);
            xatlib.UrlPopup(xconst.ST(91), _local2);
            xatlib.getURL(_local2, "_blank");
        }
        static function ViewprofileonFriend(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            network.NetworkFriendUser(_local2, (network.OnFriendList(_local2)) ? false : true);
            CloseViewprofile();
            todo.DoBuildUserListScrollUp = true;
        }
        static function CreateReasonDialog(_arg1, _arg2){
            var _local8:*;
            var _local9:Number;
            SavedUserNo = _arg1;
            bBan = _arg2;
            var _local3:* = (((main.mcuserbackground.x - 270) - 15) - 50);
            if (_local3 < 5){
                _local3 = 5;
            };
            var _local4:* = xatlib.NY(30);
            var _local5:* = false;
            if (((bBan) && (((todo.HasPowerA(todo.w_Powers, (9 + 32), todo.w_Mask)) || (((todo.HasPowerA(todo.w_Powers, (14 + 32), todo.w_Mask)) && (todo.w_owner))))))){
                _local5 = true;
            };
            main.DialogOpen = 2;
            mcviewprofilebackground = (mcreasonbackground = new xDialog(main.dialogs, _local3, _local4, (270 + 60), (_local5) ? 240 : 200, (" " + (bBan) ? xconst.ST(81) : xconst.ST(79)), undefined, 0));
            var _local6:* = mcreasonbackground.Dia;
            _local6.txt1 = xatlib.createTextNoWrap(_local6, (_local3 + 10), (_local4 + 30), 310, 22, (bBan) ? xconst.ST(113) : xconst.ST(114), 0, 0, 100, 0, 14, "left", 1);
            var _local7:* = xatlib.AddBackground(_local6, (_local3 + 10), (_local4 + 55), 310, 32);
            tf = xatlib.AddTextField(_local7, 0, TO, 310, 32, "", main.fmt);
            tf.type = TextFieldType.INPUT;
            tf.addEventListener(Event.CHANGE, xatlib.RemoveCR);
            if (bBan){
                _local6.txt2 = xatlib.createTextNoWrap(_local6, (_local3 + 10), (_local4 + 95), 310, 22, xconst.ST(115), 0, 0, 100, 0, 14, "left", 1);
                _local8 = xatlib.AddBackground(_local6, (_local3 + 10), (_local4 + 120), 155, 32);
                tf2 = xatlib.AddTextField(_local8, 0, TO, 310, 32, "1", main.fmt);
                tf2.type = TextFieldType.INPUT;
                _local6.txt3 = xatlib.createTextNoWrap(_local6, (_local3 + 165), (_local4 + 120), 155, 32, ((xconst.ST(116) + "  ") + (todo.w_owner) ? xconst.ST(117) : xconst.ST(118)), 0, 0, 100, 0, 14, "left", 1);
            } else {
                _local9 = xatlib.FindUser(todo.w_userno);
                if (todo.HasPower(_local9, 25)){
                    _local6.txt2 = xatlib.createTextNoWrap(_local6, (_local3 + 10), (_local4 + 95), 310, 22, "Group To Boot to:", 0, 0, 100, 0, 14, "left", 1);
                    _local8 = xatlib.AddBackground(_local6, (_local3 + 10), (_local4 + 120), 310, 32);
                    tf2 = xatlib.AddTextField(_local8, 0, TO, 310, 32, "", main.fmt);
                    tf2.type = TextFieldType.INPUT;
                };
            };
            if (_local5){
                if (todo.HasPowerA(todo.w_Powers, 41, todo.w_Mask)){
                    _local6.gag = new xBut(_local6, (_local3 + 10), (_local4 + 160), 150, 30, xconst.ST(197), ReasonGag);
                    _local6.gag.But.UserNo = _arg1;
                };
                if (((todo.HasPowerA(todo.w_Powers, 46, todo.w_Mask)) && (todo.w_owner))){
                    _local6.mute = new xBut(_local6, (_local3 + 170), (_local4 + 160), 150, 30, xconst.ST(198), ReasonMute);
                    _local6.mute.But.UserNo = _arg1;
                };
                _local4 = (_local4 + 40);
            };
            _local6.ok = new xBut(_local6, (_local3 + 10), (_local4 + 160), 150, 30, (bBan) ? xconst.ST(81) : xconst.ST(79), ReasonOK);
            _local6.ok.But.UserNo = _arg1;
            _local6.can = new xBut(_local6, (_local3 + 170), (_local4 + 160), 150, 30, xconst.ST(66), CloseReason);
            _local6.can.But.UserNo = _arg1;
        }
        static function ViewprofileonGag(_arg1){
            var _local2:* = mcviewprofilebackground.UserNo;
            var _local3:* = xatlib.FindUser(_local2);
            if (todo.Users[_local3].banned){
                network.NetworkGagUser("u", _local2, false, 0);
                CloseViewprofile();
            } else {
                CloseViewprofile();
                CreateReasonDialog(_local2, true);
            };
        }
        static function ReasonGag(_arg1:MouseEvent=undefined){
            DoBan("gg");
            CloseReason();
        }
        static function CloseViewprofile(){
            main.hint.HintOff();
            mcviewprofilebackground.Delete();
            main.DialogOpen = 0;
        }
        private static function GoFriendHint(_arg1:MouseEvent){
            main.hint.Hint(0, 0, xconst.ST(91));
        }
        static function ViewprofileonMarry(_arg1){
            xkiss.CreateBuystuff(mcviewprofilebackground.UserNo, _arg1.currentTarget.Mode);
        }
        static function CreateViewProfileDialog(_arg1){
            var s:* = undefined;
            var mc:* = null;
            var url:* = undefined;
            var t:* = undefined;
            var butstate:* = undefined;
            var UserNo:* = _arg1;
            main.DialogClose();
            main.DialogOpen = 2;
            var uid:* = xatlib.FindUser(UserNo);
            var PrivChatOnly:* = (xatlib.xInt(todo.Users[uid].Location) >= 128);
            var ShowAsBanned:* = ((((todo.Users[uid].banned) && (!(todo.Users[uid].friend)))) || (todo.Users[uid].forever));
            var Me:* = xatlib.FindUser(todo.w_userno);
            var xx:* = 0;
            var yy:* = 0;
            var StatusText:* = "";
            var bKick:* = undefined;
            var bMake:* = undefined;
            var bMake2:* = undefined;
            var bMTP:* = undefined;
            bBan = undefined;
            var i:* = xatlib.FindUser(todo.w_userno);
            if (((((((todo.w_owner) || (todo.w_moderator))) || (todo.w_member))) && (!((((main.utabsmc.tabs[0].Main == false)) && (!(network.OnFriendList(todo.Users[i].u)))))))){
                if ((todo.Users[i].flag0 & 0x0200)){
                    bKick = false;
                } else {
                    if (todo.HasPower(i, 28)){
                        if (todo.w_mainowner){
                            bKick = false;
                            if (((todo.Users[uid].online) && (!(todo.Users[uid].mainowner)))){
                                bKick = true;
                            };
                        } else {
                            if (todo.w_owner){
                                bKick = false;
                                if (((((todo.Users[uid].online) && (!(todo.Users[uid].mainowner)))) && (!(todo.Users[uid].owner)))){
                                    bKick = true;
                                };
                            } else {
                                if (todo.w_moderator){
                                    bKick = false;
                                    if (((((((todo.Users[uid].online) && (!(todo.Users[uid].mainowner)))) && (!(todo.Users[uid].owner)))) && (!(todo.Users[uid].moderator)))){
                                        bKick = true;
                                    };
                                } else {
                                    if (todo.w_member){
                                        if (((((((((todo.Users[uid].online) && (!(todo.Users[uid].mainowner)))) && (!(todo.Users[uid].owner)))) && (!(todo.Users[uid].moderator)))) && (todo.Users[uid].banned))){
                                            bKick = true;
                                        };
                                    };
                                };
                            };
                        };
                    } else {
                        if (((todo.w_owner) || (todo.w_moderator))){
                            bKick = (((((((todo.Users[uid].online) && (!(todo.Users[uid].mainowner)))) && (!(todo.Users[uid].owner)))) && (!(todo.Users[uid].moderator)))) ? true : false;
                        };
                    };
                };
            };
            if (((((todo.w_owner) || (todo.w_moderator))) && (!((((main.utabsmc.tabs[0].Main == false)) && (!(network.OnFriendList(todo.Users[i].u)))))))){
                bBan = false;
                if ((todo.Users[i].flag0 & 0x0200)){
                    bBan = false;
                } else {
                    if (todo.w_mainowner){
                        if (!todo.Users[uid].mainowner){
                            bBan = true;
                        };
                    } else {
                        if (todo.w_owner){
                            if (((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))){
                                bBan = true;
                            };
                        } else {
                            if (todo.w_moderator){
                                if (((((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))) && (!(todo.Users[uid].moderator)))){
                                    bBan = true;
                                };
                            };
                        };
                    };
                };
            };
            if (((((((todo.w_mainowner) || (todo.w_owner))) || (todo.w_moderator))) && (!((((main.utabsmc.tabs[0].Main == false)) && (!(network.OnFriendList(todo.Users[i].u)))))))){
                bMake = true;
            };
            if (((((todo.w_mainowner) || (todo.w_owner))) && (!((((main.utabsmc.tabs[0].Main == false)) && (!(network.OnFriendList(todo.Users[i].u)))))))){
                bMake2 = true;
            };
            if (todo.Users[uid].online){
                bMTP = true;
            };
            network.NetworkLocateUser(UserNo);
            xx = (((main.mcuserbackground.x - 270) - 15) - 50);
            if (xx < 5){
                xx = 5;
            };
            yy = xatlib.NY(30);
            StatusText = (StatusText + xatlib.GetUserStatus(uid));
            var dlght:* = 100;
            if (PrivChatOnly){
                dlght = (dlght + xatlib.NY(40));
            } else {
                dlght = (dlght + xatlib.NY(40));
                dlght = (dlght + xatlib.NY(40));
                if (((!((bBan == undefined))) || (!((bKick == undefined))))){
                    dlght = (dlght + xatlib.NY(40));
                };
                if (bMake != undefined){
                    dlght = (dlght + xatlib.NY(40));
                };
                if (bMake2 != undefined){
                    dlght = (dlght + xatlib.NY(40));
                };
                if (bMTP != undefined){
                    dlght = (dlght + xatlib.NY(80));
                };
            };
            var strUserNo:* = UserNo.toString();
            if (strUserNo.substr(-6, 6) == "000000"){
                strUserNo = (strUserNo.substr(0, (strUserNo.length - 6)) + "M");
            };
            un = ((todo.Users[uid].registered)!=undefined) ? (((todo.Users[uid].registered + " (") + strUserNo) + ")") : UserNo.toString();
            if (UserNo >= (2000000000 - (100000 * 2))){
                un = todo.Users[uid].registered;
            };
            if (UserNo >= (2000000000 - 100000)){
                un = " ";
            };
            mcviewprofilebackground = new xDialog(main.dialogs, xx, yy, (270 + 60), dlght, xatlib.FixLI(un), undefined, 0);
            var Dia:* = mcviewprofilebackground.Dia;
            Dia.UserNo = UserNo;
            var Press:* = function (){
                chat.mainDlg.GotoProfile(mcviewprofilebackground.UserNo);
            };
            yy = (yy + 35);
            if (!ShowAsBanned){
                Dia.avc = new xAvatar(mcviewprofilebackground, todo.Users[uid].a, xconst.ST(140), Press, !((todo.Users[uid].VIP == false)), todo.Users[uid].aFlags, todo.Users[uid].Powers);
                mc = Dia.avc.Av;
                mc.UserNo = UserNo;
                mc.x = (xx + 5);
                mc.y = yy;
            };
            Dia.txt1 = xatlib.createTextNoWrap(Dia, ((xx + 5) + 35), (yy - 7), (270 + 10), (15 + 20), (ShowAsBanned) ? xconst.ST(25) : xatlib.StripSmilies(xatlib.GetUsername(UserNo)), 0, 0, 100, 0, 14, "left", 1);
            Dia.txt2 = xatlib.createTextNoWrap(Dia, ((xx + 5) + 35), (yy + 9), (270 + 10), (15 + 20), StatusText, 0, 0, 100, 0, 14, "left", 1);
            if (!ShowAsBanned){
                Dia.Home = new MovieClip();
                Dia.addChild(Dia.Home);
                Dia.Home1 = new Home();
                Dia.Home.addChild(Dia.Home1);
                Dia.Home.x = (mc.x + 5);
                Dia.Home.y = ((mc.y + 15) + 34);
                url = todo.Users[uid].h;
                if (ShowAsBanned){
                    url = "";
                };
                t = url;
                if (((url) && ((url.length > 5)))){
                    Dia.Home.url = url;
                    Dia.Home.addEventListener(MouseEvent.MOUSE_DOWN, Home1_onPress);
                    Dia.Home.hint = {
                        Hint:url,
                        mc:Dia.Home
                    };
                    Dia.Home.addEventListener(MouseEvent.ROLL_OVER, main.hint.EasyHint);
                    Dia.Home.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                    Dia.Home.buttonMode = true;
                } else {
                    t = xconst.ST(68);
                };
                Dia.txt3 = xatlib.createTextNoWrap(Dia.Home, 17, -1, 280, (15 + 1), t, 0, 0, 100, 0, 14, "left", 1);
            };
            yy = (yy + 65);
            var PrivFlags:* = undefined;
            if (((!(todo.Users[uid].online)) && (!(todo.Users[uid].onsuper)))){
                PrivFlags = (xBut.b_Grayed + xBut.b_NoPress);
            } else {
                if (((todo.HasPower(uid, 10)) && (!(((((todo.w_mainowner) || (todo.w_owner))) || (todo.w_moderator)))))){
                    PrivFlags = (xBut.b_Grayed + xBut.b_NoPress);
                };
            };
            Dia.pm = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), xconst.ST(69), ViewprofileonPrivChat, PrivFlags);
            Dia.pm.SetRoll(xconst.ST(70));
            Dia.pm.But.UserNo = UserNo;
            if (PrivChatOnly){
                PrivFlags = undefined;
                if (((!(todo.Users[uid].online)) && (!(todo.Users[uid].onsuper)))){
                    PrivFlags = (xBut.b_Grayed + xBut.b_NoPress);
                };
                Dia.im = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), "Invite to chat", ViewprofileImInv, PrivFlags);
                Dia.im.But.UserNo = UserNo;
                return;
            };
            PrivFlags = undefined;
            if (((!(todo.Users[uid].online)) && (!(todo.Users[uid].onsuper)))){
                PrivFlags = (xBut.b_Grayed + xBut.b_NoPress);
            } else {
                if (((todo.HasPower(uid, 69)) && (!(((((todo.w_mainowner) || (todo.w_owner))) || (todo.w_moderator)))))){
                    PrivFlags = (xBut.b_Grayed + xBut.b_NoPress);
                };
            };
            Dia.im = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), xconst.ST(71), ViewprofileonPriv, PrivFlags);
            Dia.im.SetRoll(xconst.ST(72));
            Dia.im.But.UserNo = UserNo;
            s = "";
            if (network.OnFriendList(UserNo)){
                s = xconst.ST(73);
            } else {
                s = xconst.ST(74);
            };
            yy = (yy + xatlib.NY(40));
            Dia.af = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), s, ViewprofileonFriend, (todo.Users[uid].banned) ? (xBut.b_Grayed + xBut.b_NoPress) : 0);
            Dia.af.SetRoll(xconst.ST(75));
            Dia.af.But.UserNo = UserNo;
            s = xconst.ST(76);
            if (network.OnIgnoreList(UserNo)){
                s = xconst.ST(77);
            };
            Dia.ig = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), s, ViewprofileonIgnore);
            Dia.ig.SetRoll(xconst.ST(78));
            Dia.ig.But.UserNo = UserNo;
            if (((!((bKick == undefined))) || (!((bBan == undefined))))){
                yy = (yy + xatlib.NY(40));
            };
            if (bKick != undefined){
                s = xconst.ST(79);
                Dia.kick = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), s, ViewprofileonKick, (bKick) ? 0 : (xBut.b_Grayed + xBut.b_NoPress));
                Dia.kick.SetRoll(xconst.ST(80));
                Dia.kick.But.UserNo = UserNo;
            };
            if (bBan != undefined){
                s = xconst.ST(81);
                if ((((uid > -1)) && (todo.Users[uid].banned))){
                    s = xconst.ST(82);
                };
                Dia.ban = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), s, ViewprofileonGag, (bBan) ? 0 : (xBut.b_Grayed + xBut.b_NoPress));
                Dia.ban.SetRoll(xconst.ST(83));
                Dia.ban.But.UserNo = UserNo;
            };
            if (bMake != undefined){
                yy = (yy + xatlib.NY(40));
                s = xconst.ST(135);
                butstate = (xBut.b_Grayed + xBut.b_NoPress);
                if (((((((todo.Users[uid].online) && (!(todo.Users[uid].banned)))) && (((((((todo.Users[uid].member) || (todo.Users[uid].moderator))) || (todo.Users[uid].owner))) || (todo.Users[uid].gagged))))) || (!(todo.Users[uid].online)))){
                    if ((todo.Users[i].flag0 & 0x0200)){
                    } else {
                        if (todo.w_mainowner){
                            if (!todo.Users[uid].mainowner){
                                butstate = 0;
                            };
                        } else {
                            if (todo.w_owner){
                                if (((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))){
                                    butstate = 0;
                                };
                            } else {
                                if (todo.w_moderator){
                                    if (((((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))) && (!(todo.Users[uid].moderator)))){
                                        butstate = 0;
                                    };
                                };
                            };
                        };
                    };
                };
                Dia.mv = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), s, ViewprofileonUnMake, butstate);
                Dia.mv.But.UserNo = UserNo;
                s = xconst.ST(84);
                butstate = (xBut.b_Grayed + xBut.b_NoPress);
                if (((((todo.Users[uid].online) && (!(todo.Users[uid].banned)))) && (!(todo.Users[uid].member)))){
                    if ((todo.Users[i].flag0 & 0x0200)){
                    } else {
                        if (todo.w_mainowner){
                            if (!todo.Users[uid].mainowner){
                                butstate = 0;
                            };
                        } else {
                            if (todo.w_owner){
                                if (((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))){
                                    butstate = 0;
                                };
                            } else {
                                if (todo.w_moderator){
                                    if (((((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))) && (!(todo.Users[uid].moderator)))){
                                        butstate = 0;
                                    };
                                };
                            };
                        };
                    };
                };
                Dia.me = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), s, ViewprofileonMember, butstate);
                Dia.me.But.UserNo = UserNo;
            };
            if (bMake2 != undefined){
                yy = (yy + xatlib.NY(40));
                s = xconst.ST(88);
                butstate = (xBut.b_Grayed + xBut.b_NoPress);
                if (((((((todo.Users[uid].online) && (!(todo.Users[uid].banned)))) && (!(todo.Users[uid].moderator)))) || (((todo.Users[uid].moderator) && ((todo.Users[uid].flag0 & 0x0200)))))){
                    if ((todo.Users[i].flag0 & 0x0200)){
                    } else {
                        if (todo.w_mainowner){
                            if (!todo.Users[uid].mainowner){
                                butstate = 0;
                            };
                        } else {
                            if (todo.w_owner){
                                if (((!(todo.Users[uid].mainowner)) && (!(todo.Users[uid].owner)))){
                                    butstate = 0;
                                };
                            };
                        };
                    };
                };
                Dia.mm = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), s, ViewprofileonModerate, butstate);
                Dia.mm.But.UserNo = UserNo;
                s = xconst.ST(136);
                butstate = (xBut.b_Grayed + xBut.b_NoPress);
                if (((((((todo.Users[uid].online) && (!(todo.Users[uid].banned)))) && (!(todo.Users[uid].owner)))) || (((todo.Users[uid].owner) && ((todo.Users[uid].flag0 & 0x0200)))))){
                    if ((todo.Users[i].flag0 & 0x0200)){
                    } else {
                        if (todo.w_mainowner){
                            if (!todo.Users[uid].mainowner){
                                butstate = 0;
                            };
                        };
                    };
                };
                Dia.mo = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), s, ViewprofileonOwner, butstate);
                Dia.mo.But.UserNo = UserNo;
            };
            if (bMTP){
                yy = (yy + xatlib.NY(40));
                s = xconst.ST(148);
                if (todo.Users[Me].Bride){
                    s = xconst.ST(150);
                };
                Dia.ma = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), s, ViewprofileonMarry, 0);
                Dia.ma.But.UserNo = UserNo;
                Dia.ma.But.Mode = 1;
                if (todo.Users[Me].Bride){
                    Dia.ma.But.Mode = 2;
                };
                Dia.dv = new xBut(Dia, (xx + 170), yy, 150, xatlib.NY(30), xconst.ST(149), ViewprofileonMarry, 0);
                Dia.dv.But.UserNo = UserNo;
                Dia.dv.But.Mode = 3;
                Dia.dv.SetRoll(xconst.ST(151));
                yy = (yy + xatlib.NY(40));
                Dia.po = new xBut(Dia, (xx + 10), yy, 150, xatlib.NY(30), "Powers", ViewprofileonPowers, (xBut.b_Grayed + xBut.b_NoPress));
                xatlib.AttachBut(Dia.po, "pwr");
                Dia.po.But.UserNo = UserNo;
            };
        }
        static function ViewprofileonPrivChat(_arg1){
            var _local2:* = xatlib.FindUser(mcviewprofilebackground.UserNo);
            var _local3:* = todo.Users[_local2].Location;
            main.utabsmc.SetVisitorsTab();
            var _local4:* = 1;
            if (_local3){
                _local4 = (_local4 | 8);
            };
            _local4 = (_local4 | 16);
            var _local5:Number = main.ctabsmc.TabAdd(mcviewprofilebackground.UserNo, 0xFFFFFF, _local4, chat.IM.IM_onRelease, chat.IM.IM_onDelete);
            main.ctabsmc.tabs[_local5].IMtype = _local3;
            main.ctabsmc.UpdateTabs(_local5);
            todo.DoBuildUserListScrollUp = true;
            todo.DoUpdateMessages = true;
            todo.ScrollDown = true;
            CloseViewprofile();
        }
        static function ReasonMute(_arg1:MouseEvent=undefined){
            DoBan("gm");
            CloseReason();
        }
        static function Home1_onPress(_arg1:MouseEvent){
            var _local2:String = _arg1.currentTarget.url;
            if (_local2.substr(0, 7).toLowerCase() != "http://"){
                _local2 = ("http://" + _local2);
            };
            _local2 = xatlib.xatlinks(_local2);
            if (chat.isKeyDown(Keyboard.SHIFT)){
                _local2 = (_local2 + "&f=1");
            };
            xatlib.UrlPopup(xconst.ST(21), _local2);
            xatlib.getURL(_local2, "_blank");
        }
        static function ViewprofileonPriv(_arg1){
            main.lockmc.visible = true;
            todo.PrivateMessage = mcviewprofilebackground.UserNo;
            CloseViewprofile();
        }
        static function DoBan(_arg1){
            var _local2:Number = 1;
            if (!isNaN(tf2.text)){
                _local2 = Math.abs(Number(tf2.text));
            };
            if (_local2 > 8760){
                _local2 = 0;
            };
            network.NetworkGagUser(_arg1, SavedUserNo, true, xatlib.xInt((_local2 * 3600)), tf.text);
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class redface extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class panelmetal extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class close extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class HelpIcon extends MovieClip {

        public var ques:MovieClip;
        public var infob:MovieClip;
        public var info:MovieClip;

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class kiss extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class star extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class 10129 extends MovieClip {

        public var back:MovieClip;

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class News extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class xSprite extends Sprite {

    }
}//package 
﻿package {

    public class global {

        public static var xl;
        public static var pw;
        public static var lv;
        public static var pass;
        public static var um;
        public static var mg;
        public static var mk;
        public static var mp;
        public static var ms;
        public static var mt;
        public static var fwd:String;
        public static var rl;
        public static var rf:Number;
        public static var Sock2:Array;
        public static var sv;
        public static var Sock:Array;
        public static var gn:String;
        public static var xc;
        public static var xh;
        public static var xb;
        public static var cn;
        public static var xm;
        public static var xo;
        public static var lg;
        public static var xt;
        public static var xn;
        public static var xp;

    }
}//package 
﻿package {
    import flash.display.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.filters.*;
    import flash.geom.*;

    public class todo {

        public static const PWR_MAX_TRADE:int = 94;
        public static const MAX_PWR_INDEX:int = int((PWR_MAX_TRADE / 32));

        public static var w_help = true;
        public static var w_roomlang;
        public static var myDropFilter:DropShadowFilter = new DropShadowFilter(6, 45, 0, 0.6, 5, 5, 1, 1, false, false, false);
        public static var chatdomain:String = "http://xat.com/web_gear/chat/";
        public static var turbo:int = 1;
        public static var DoTabSnd:Boolean;
        public static var pass;
        public static var w_avatar:String = "";
        public static var pool;
        public static var w_VIP;
        public static var w_coins:Number;
        public static var w_avatarlist:Array = new Array();
        public static var Macros;
        public static var debug = false;
        public static var w_homepagelist:Array = new Array();
        public static var ButColW2 = 0;
        public static var LangText = undefined;
        public static var w_namelist:Array = new Array();
        public static var DoUserSnd:Boolean;
        public static var forcedom:String;
        public static var LastMessageToSend:String;
        public static var group;
        public static var w_langv;
        public static var TextGlow:GlowFilter = new GlowFilter(0xFF00, 0.7, 4, 4, 6, 3, false, false);
        public static var useport:Number;
        public static var ResetSmilies:Boolean;
        public static var LastScrollTime;
        public static var w_bride:Number;
        public static var mscrollmc;
        public static var LoginPressed:Boolean;
        public static var heartbeatduration:Number = 83;
        public static var DoBuildUserList:Boolean;
        public static var FlagBits:Number;
        public static var messageecho:String;
        public static var w_homepage:String = "";
        public static var useRadio;
        public static var OnSuper:Boolean;
        public static var w_lang;
        public static var DoUpdateMessages:Boolean;
        public static var w_Options;
        public static var FV:int = 9;
        public static var w_PowerO = undefined;
        public static var ButColW = 0;
        public static var w_mainowner:Boolean;
        public static var avs:int = 7;
        public static var connectchannel;
        public static var w_pool:Number = 0;
        public static var w_owner:Boolean;
        public static var DoMessageSnd:Boolean;
        public static var w_Vol:Array = new Array();
        public static var News = 17;
        public static var w_Powers:Array = new Array(0, 0, 0);
        public static var w_ignorelist2:Object = new Object();
        public static var w_friendlist:Array = new Array();
        public static var w_hints = true;
        public static var LastBump = -1;
        public static var UserNo;
        public static var w_d0:Number = 0;
        public static var w_d1:Number = 0;
        public static var w_d2:Number;
        public static var w_d3:Number;
        public static var w_useroom:Number = w_room;
        public static var DoBuildUserListScrollUp:Boolean;
        public static var autologin;
        public static var SmilieUpdate = -1;
        public static var PrivateMessage = 0;
        public static var Tickled:int = 1;
        public static var ScrollDown:Boolean;
        public static var w_userrev = undefined;
        public static var WV2:Boolean;
        public static var TabGlowFlag:Boolean;
        public static var mcgetachat;
        public static var w_moderator:Boolean;
        public static var w_attract = true;
        public static var LastPC;
        public static var config = new Object();
        public static var w_sound;
        public static var helpupdate;
        public static var Private_onRelease:Number;
        public static var MessageToProcess:String = "";
        public static var helpstr = "";
        public static var w_registered = undefined;
        public static var w_autologin = 0xFFFF;
        public static var w_name:String = "";
        public static var DoUpdate:Boolean;
        public static var w_dt:Number;
        public static var PrivateChat = 0;
        public static var w_member:Boolean;
        public static var w_banlist:Array = new Array();
        public static var ButCol = 0xC8C8C8;
        public static var MessageCount;
        public static var w_password;
        public static var MessageToSend:String = "";
        public static var lb:String = "n";
        public static var LastTabUser:Number;
        public static var tpx;
        public static var tpy;
        public static var tabs:Array = new Array();
        public static var tpw;
        public static var tph;
        public static var w_GroupPowers:Array = new Array(0, 0, 0);
        public static var RefreshLogin;
        public static var sockdomain:String;
        public static var DropFilter:Array = new Array();
        public static var HelpUpdate = 0;
        public static var MainFlagBits;
        public static var StageWidth = 640;
        public static var w_userno:Number = 0;
        public static var w_news;
        public static var mi = 0;
        public static var tick:Number = 0;
        public static var w_room:Number = 1;
        public static var StageHeight = 480;
        public static var w_friendlist2:Object = new Object();
        public static var w_ALLP:Number;
        public static var Pools:Array = new Array();
        public static var newpool;
        public static var emmax;
        public static var DoAudieSnd:Boolean = false;
        public static var BackVars = new Array(undefined, undefined, undefined, undefined, new Array(), " ", undefined);
        public static var w_email;
        public static var w_userrevlist:Array = new Array();
        public static var w_Mask = new Array(0, 0, 0);
        public static var Meezer;
        public static var Users:Array = new Array();
        public static var w_k1:Number = 0;
        public static var w_k2:Number = 0;
        public static var w_xats:Number;
        public static var forceport;
        public static var usebackground;
        public static var Message:Array = new Array();
        public static var w_k3:Number;
        public static var CustomSound = "";

        public static function Debug(){
            var _local1:* = 0;
            _local1++;
        }
        public static function HasPower(_arg1, _arg2){
            if (!Users[_arg1]){
                return (false);
            };
            return (HasPowerA(Users[_arg1].Powers, _arg2));
        }
        public static function ImInviteAll(){
        }
        public static function HasPowerA(_arg1, _arg2, _arg3=undefined){
            if (!_arg1){
                return (false);
            };
            var _local4:* = (_arg2 >> 5);
            if (!_arg1[_local4]){
                return (false);
            };
            var _local5:* = (_arg2 % 32);
            var _local6:* = _arg1[_local4];
            if (((_arg3) && (_arg3[_local4]))){
                _local6 = (_local6 & ~(_arg3[_local4]));
            };
            return (!(((_local6 & (1 << _local5)) == 0)));
        }

        DropFilter.push(myDropFilter);
    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class 10200 extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.geom.*;

    class xScroll extends Sprite {

        var Scr_thumbheight:Number;
        var Scr_x:Number;
        var Scr_height:Number;
        var mcScrollDown:xBut;
        var Scr_position;
        var Scr_width:Number;
        var Scr_y:Number;
        var Scr_buttonheight:Number;
        var Scrolling;
        public var Scr_size;
        var mcThumb:xBut;
        var Scr_step:Number;
        var ChangeFunc;
        var ScrollPressed;
        var scrollbackground:MovieClip;
        var mcScrollUp:xBut;

        public function xScroll(_arg1, _arg2:Number, _arg3:Number, _arg4:Number, _arg5:Number, _arg6:Number, _arg7:Number, _arg8:Number, _arg9:Number, _arg10:Number, _arg11){
            if (_arg1 != undefined){
                _arg1.addChild(this);
            };
            this.Scr_x = _arg2;
            this.Scr_y = _arg3;
            this.Scr_width = _arg4;
            this.Scr_height = _arg5;
            this.Scr_buttonheight = _arg6;
            this.Scr_thumbheight = _arg7;
            this.Scr_step = _arg8;
            this.Scr_size = _arg9;
            this.Scr_position = _arg10;
            this.ChangeFunc = _arg11;
            this.Scrolling = false;
            this.ScrollPressed = false;
            var _local12:* = xatlib.AddBackground(this, (this.Scr_x - 1), this.Scr_y, (this.Scr_width + 1), this.Scr_height, true);
            _local12.alpha = 0.4;
            this.mcScrollUp = new xBut(this, this.Scr_x, this.Scr_y, this.Scr_width, this.Scr_buttonheight, "", this.onScrollUp, xBut.b_Gray, 6);
            this.mcScrollUp.gfx = new sc_up();
            this.mcScrollUp.gfx.x = int(((this.Scr_width - 6) / 2));
            this.mcScrollUp.gfx.y = int(((this.Scr_buttonheight - 3) / 2));
            this.mcScrollUp.addChild(this.mcScrollUp.gfx);
            this.mcScrollDown = new xBut(this, this.Scr_x, ((this.Scr_y + this.Scr_height) - this.Scr_buttonheight), this.Scr_width, this.Scr_buttonheight, "", this.onScrollDown, xBut.b_Gray, 6);
            this.mcScrollDown.gfx = new sc_dn();
            this.mcScrollDown.gfx.x = int(((this.Scr_width - 6) / 2));
            this.mcScrollDown.gfx.y = int(((this.Scr_buttonheight - 3) / 2));
            this.mcScrollDown.addChild(this.mcScrollDown.gfx);
            this.mcThumb = new xBut(this, this.Scr_x, (((this.Scr_y + this.Scr_height) - this.Scr_buttonheight) - this.Scr_thumbheight), this.Scr_width, this.Scr_thumbheight, "", null, (xBut.b_NoPress | xBut.b_Gray), 6);
            this.mcThumb.gfx = new sc_dr();
            this.mcThumb.buttonMode = true;
            this.mcThumb.gfx.x = int(((this.Scr_width - 6) / 2));
            this.mcThumb.gfx.y = int(((this.Scr_thumbheight - 7) / 2));
            this.mcThumb.addChild(this.mcThumb.gfx);
            this.mcThumb.addEventListener(MouseEvent.MOUSE_DOWN, this.onThumb);
            this.mcThumb.addEventListener(MouseEvent.MOUSE_UP, this.onThumbRelease);
            this.Update();
        }
        function onThumbRelease(_arg1:Event){
            this.Scrolling = false;
            stage.removeEventListener(MouseEvent.MOUSE_UP, this.onThumbRelease);
            stage.removeEventListener(MouseEvent.MOUSE_MOVE, this.onThumbMouseMove);
            this.mcThumb.stopDrag();
        }
        function onScrollUp(_arg1){
            this.ScrollPressed = true;
            this.Scr_position = (this.Scr_position - this.Scr_step);
            if (this.Scr_position < 0){
                this.Scr_position = 0;
            };
            this.ChangeFunc();
            this.Update();
        }
        function Delete(){
        }
        function onScrollDown(_arg1){
            this.ScrollPressed = true;
            this.Scr_position = (this.Scr_position + this.Scr_step);
            if (this.Scr_position > this.Scr_size){
                this.Scr_position = this.Scr_size;
            };
            this.ChangeFunc();
            this.Update();
        }
        function onThumbMouseMove(_arg1:Event){
            var _local2:* = ((this.mcThumb.y - this.Scr_y) - this.Scr_buttonheight);
            var _local3:* = (((this.Scr_height - this.Scr_buttonheight) - this.Scr_buttonheight) - this.Scr_thumbheight);
            this.Scr_position = ((this.Scr_size * _local2) / _local3);
            this.ChangeFunc();
        }
        function set position(_arg1:Number){
            this.Scr_position = _arg1;
            this.Update();
        }
        function set ssize(_arg1:Number){
            this.Scr_size = _arg1;
            this.Update();
        }
        public function RefreshColor(){
            this.mcScrollUp.RefreshColor();
            this.mcScrollDown.RefreshColor();
            this.mcThumb.RefreshColor();
            xatlib.McSetRGB(this.mcScrollUp.gfx, todo.ButColW);
            xatlib.McSetRGB(this.mcScrollDown.gfx, todo.ButColW);
        }
        function Update(){
            if (this.Scr_position < 0){
                this.Scr_position = 0;
            };
            this.mcThumb.y = ((this.Scr_y + this.Scr_buttonheight) + (((((this.Scr_height - this.Scr_buttonheight) - this.Scr_buttonheight) - this.Scr_thumbheight) * this.Scr_position) / this.Scr_size));
        }
        function onThumb(_arg1:Event){
            this.Scrolling = true;
            this.mcThumb.startDrag(false, new Rectangle(this.Scr_x, (this.Scr_y + this.Scr_buttonheight), 0, ((this.Scr_height - this.Scr_thumbheight) - (this.Scr_buttonheight * 2))));
            stage.addEventListener(MouseEvent.MOUSE_UP, this.onThumbRelease);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, this.onThumbMouseMove);
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class Metal extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class xdelete extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.media.*;
    import flash.net.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.geom.*;
    import flash.system.*;

    public class chat extends Sprite {

        public static const lv = 2;
        static const period = 120;
        static const times = 36;
        public static const sv = 10;
        public static const cVersion = "02072010";

        public static var dingdong:Sound;
        static var framec = 0;
        static var fpsa = 0;
        static var fpsc = 0;
        static var sot = null;
        public static var IM = new im();
        static var framet = 0;
        static var fpsstr = "";
        public static var beep:Sound;
        public static var connectuser = undefined;
        public static var receiving_lc:LocalConnection;
        public static var AppTimeout = undefined;
        static var force_xc = undefined;
        static var force_lang = undefined;
        static var Timeout = undefined;
        public static var debug = false;
        public static var fromxat = "fromxat";
        static var timesc = 0;
        public static var connectmsg = undefined;
        public static var toxat = "toxat";
        public static var connectchannel = undefined;
        public static var connectmessage = undefined;
        static var keybits:Array = new Array(0x0100);
        public static var mainDlg:main;
        static var afps = 12;
        static var fps = 12;
        public static var tab_sound:Sound;
        static var State = 0;
        static var gctrick = 0;
        public static var sending_lc:LocalConnection;

        public function chat(){
            addEventListener(Event.ADDED_TO_STAGE, this.init);
        }
        static function isKeyDown(_arg1:int):Boolean{
            return ((true == Boolean(keybits[_arg1])));
        }

        function init(_arg1:Event){
            var _local2:*;
            Security.allowDomain("cdn.gigya.com");
            Security.allowInsecureDomain("cdn.gigya.com");
            Security.allowDomain("xat.com");
            Security.allowInsecureDomain("xat.com");
            todo.StageWidth = stage.stageWidth;
            todo.StageHeight = stage.stageHeight;
            if (((parent) && (parent.parent))){
                _local2 = parent.parent.root.loaderInfo.parameters;
            } else {
                _local2 = root.loaderInfo.parameters;
            };
            if (_local2.id != undefined){
                todo.w_room = xatlib.xInt(_local2.id);
            };
            if (_local2.pass != undefined){
                todo.pass = (global.pass = xatlib.xInt(_local2.pass));
            };
            if (_local2.rf != undefined){
                global.rf = xatlib.xInt(_local2.rf);
            };
            if (_local2.gn != undefined){
                global.gn = _local2.gn;
            };
            if (_local2.um != undefined){
                global.um = xatlib.xInt(_local2.um);
            };
            if (_local2.lg != undefined){
                global.lg = _local2.lg;
            };
            if (_local2.rl != undefined){
                global.rl = _local2.rl;
            };
            if (((!((_local2.pw == undefined))) && (!((_local2.em == undefined))))){
                todo.w_password = xatlib.CleanText(_local2.pw, 1);
            };
            if (_local2.pw == "##"){
                todo.RefreshLogin = true;
            };
            if (_local2.em != undefined){
                todo.w_email = xatlib.CleanText(_local2.em, 0);
            };
            if (_local2.cn != undefined){
                global.cn = xatlib.xInt(_local2.cn);
            };
            if (_local2.xn != undefined){
                global.xn = _local2.xn;
            };
            if (_local2.xp != undefined){
                global.xp = _local2.xp;
            };
            if (_local2.xh != undefined){
                global.xh = _local2.xh;
            };
            if (_local2.xb != undefined){
                global.xb = _local2.xb;
            };
            if (_local2.xl != undefined){
                global.xl = _local2.xl;
            };
            if (_local2.xm != undefined){
                global.xm = _local2.xm;
            };
            if (_local2.xt != undefined){
                global.xt = _local2.xt;
            };
            if (_local2.xo != undefined){
                global.xo = _local2.xo;
            };
            if (_local2.xc != undefined){
                global.xc = xatlib.xInt(_local2.xc);
            };
            global.sv = sv;
            global.lv = lv;
            todo.w_useroom = todo.w_room;
            xconst.xconstInit();
            beep = new beepsnd();
            tab_sound = new beepsnd();
            dingdong = new dingdongsnd();
            this.SetState(0);
            if (xatlib.xInt(Capabilities.version.split(" ")[1]) < 10){
                gctrick = 60;
            };
            stage.addEventListener(KeyboardEvent.KEY_DOWN, this.onkeyDown);
            stage.addEventListener(KeyboardEvent.KEY_UP, this.onkeyUp);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, this.onmouseMove);
            addEventListener(Event.ENTER_FRAME, this.tick);
        }
        function onkeyDown(_arg1:KeyboardEvent):void{
            keybits[_arg1.keyCode] = true;
        }
        function onLang(_arg1:Event){
            var _local2:URLLoader = URLLoader(_arg1.target);
            todo.LangText = _local2.data;
        }
        function sending_lc_Status(_arg1:Event){
        }
        function AppComms(){
            if (force_xc != undefined){
                global.xc = force_xc;
            };
            if (global.cn != undefined){
                toxat = (toxat + global.cn);
                fromxat = (fromxat + global.cn);
            };
            if ((global.xc & 0x0800)){
                sending_lc = new LocalConnection();
                sending_lc.addEventListener(StatusEvent.STATUS, this.sending_lc_Status);
                receiving_lc = new LocalConnection();
                receiving_lc.client = this;
                try {
                    receiving_lc.connect(toxat);
                } catch(error:ArgumentError) {
                };
            };
        }
        function onmouseMove(_arg1:Event){
            if ((((todo.OnSuper == false)) && ((todo.lb == "t")))){
                network.NetworkSendMsg(1, "/K2", 0, 0, 1);
                todo.OnSuper = true;
            };
        }
        function CookieStuff(){
            var _local3:Date;
            var _local4:*;
            var _local5:*;
            var _local6:*;
            if (todo.w_lang == undefined){
                todo.w_lang = global.lg;
            };
            if (todo.w_langv == undefined){
                todo.w_langv = global.lv;
            };
            var _local1:* = SharedObject.getLocal(("chat" + String(todo.w_room)), "/");
            _local1.objectEncoding = ObjectEncoding.AMF0;
            if (_local1 != null){
                if (todo.pass != undefined){
                    _local1.data.pass = todo.pass;
                    _local1.flush();
                } else {
                    todo.pass = _local1.data.pass;
                    if (todo.pass != undefined){
                        todo.pass = xatlib.xInt(todo.pass);
                    };
                };
            };
            var _local2:* = SharedObject.getLocal("chat", "/");
            _local2.objectEncoding = ObjectEncoding.AMF0;
            if (((1) && (!((_local2 == null))))){
                _local3 = new Date();
                _local4 = _local3.getTime();
                _local5 = 0;
                _local6 = 0;
                if (_local2.data.w_lastroom != undefined){
                    _local6 = _local2.data.w_lastroom;
                };
                if (_local2.data.w_lastauto != undefined){
                    _local5 = _local2.data.w_lastauto;
                };
                _local2.data.w_lastroom = todo.w_room;
                _local2.data.w_lastauto = _local4;
                if (todo.w_lang != undefined){
                    if (xatlib.xInt(todo.w_lang) < 10000){
                        _local2.data.w_lang = todo.w_lang;
                    };
                } else {
                    if (_local2.data.w_lang != undefined){
                        todo.w_lang = _local2.data.w_lang;
                    };
                };
                _local2.flush();
                if (_local2.data.w_userno != undefined){
                    if (_local2.data.w_userno != undefined){
                        todo.w_userno = xatlib.xInt(_local2.data.w_userno);
                    };
                    if (_local2.data.w_userrev != undefined){
                        todo.w_userrev = xatlib.xInt(_local2.data.w_userrev);
                    };
                    if (_local2.data.w_k1b != undefined){
                        todo.w_k1 = xatlib.xInt(_local2.data.w_k1b);
                    };
                    if (_local2.data.w_k2 != undefined){
                        todo.w_k2 = xatlib.xInt(_local2.data.w_k2);
                    };
                    if (_local2.data.w_name != undefined){
                        todo.w_name = xatlib.CleanTextNoXat(_local2.data.w_name);
                    };
                    if (_local2.data.w_avatar != undefined){
                        todo.w_avatar = xatlib.CleanAv(_local2.data.w_avatar);
                    };
                    if (_local2.data.w_homepage != undefined){
                        todo.w_homepage = _local2.data.w_homepage;
                    };
                    if (((!((String(todo.w_avatar).indexOf("meez") == -1))) || (!((String(todo.w_homepage).indexOf("meez") == -1))))){
                        if ((global.xc & 0x2000)){
                            todo.w_useroom = (todo.w_room = 3602375);
                            global.gn = "Meez";
                        };
                        todo.Meezer = true;
                    };
                    if (_local2.data.w_d0 != undefined){
                        todo.w_d0 = xatlib.xInt(_local2.data.w_d0);
                    };
                    if (_local2.data.w_d1 != undefined){
                        todo.w_d1 = xatlib.xInt(_local2.data.w_d1);
                    };
                    todo.w_d2 = xatlib.xInt(_local2.data.w_d2);
                    todo.w_d3 = xatlib.xInt(_local2.data.w_d3);
                    todo.w_dt = xatlib.xInt(_local2.data.w_dt);
                    todo.w_Powers = _local2.data.w_Powers;
                    todo.w_Mask = _local2.data.w_Mask;
                    todo.w_bride = _local2.data.w_bride;
                    todo.w_xats = _local2.data.w_xats;
                    todo.w_PowerO = _local2.data.w_PowerO;
                    if (_local2.data.w_coins != undefined){
                        todo.w_coins = xatlib.xInt(_local2.data.w_coins);
                    };
                    if (_local2.data.w_k3 != undefined){
                        todo.w_k3 = xatlib.xInt(_local2.data.w_k3);
                    };
                    if (_local2.data.w_registered != undefined){
                        todo.w_registered = _local2.data.w_registered;
                    };
                    todo.w_autologin = _local2.data.w_autologin;
                    todo.w_news = xatlib.xInt(_local2.data.w_news);
                    todo.w_Vol[1] = _local2.data.w_Vol1;
                    todo.w_Vol[2] = _local2.data.w_Vol2;
                    if ((((todo.w_autologin == undefined)) || ((todo.w_autologin == true)))){
                        todo.w_autologin = 0xFFFF;
                    };
                    if (todo.w_autologin == false){
                        todo.w_autologin = 65534;
                    };
                    todo.autologin = todo.w_autologin;
                    if (!(global.xc & 32)){
                        if ((_local4 - _local5) < ((todo.w_room == _local6)) ? 10000 : 2000){
                            todo.w_autologin = (todo.w_autologin & ~(1));
                        };
                    };
                    if ((((todo.w_useroom > 100)) && ((((todo.StageWidth < 220)) || ((todo.StageHeight < 140)))))){
                        todo.w_autologin = (todo.w_autologin & ~(1));
                    } else {
                        if ((global.xc & 0x0200)){
                            todo.w_autologin = (todo.w_autologin & ~(1));
                        } else {
                            if ((((todo.w_useroom > 100)) && (!((global.pw == undefined))))){
                                todo.w_autologin = (todo.w_autologin | 1);
                            };
                        };
                    };
                    if (_local2.data.w_banlist != undefined){
                        todo.w_banlist = _local2.data.w_banlist;
                    };
                    if (_local2.data.w_friendlist != undefined){
                        todo.w_friendlist = _local2.data.w_friendlist;
                    };
                    if (_local2.data.w_friendlist2 != undefined){
                        todo.w_friendlist2 = _local2.data.w_friendlist2;
                    };
                    if (_local2.data.w_ignorelist2 != undefined){
                        todo.w_ignorelist2 = _local2.data.w_ignorelist2;
                    };
                    if (_local2.data.w_userrevlist != undefined){
                        todo.w_userrevlist = _local2.data.w_userrevlist;
                    };
                    if (_local2.data.w_namelist != undefined){
                        todo.w_namelist = _local2.data.w_namelist;
                    };
                    if (_local2.data.w_avatarlist != undefined){
                        todo.w_avatarlist = _local2.data.w_avatarlist;
                    };
                    if (_local2.data.w_homepagelist != undefined){
                        todo.w_homepagelist = _local2.data.w_homepagelist;
                    };
                    todo.w_Options = _local2.data.w_Options;
                    todo.Macros = _local2.data.Macros;
                };
            };
            if (todo.w_Vol[1] == undefined){
                todo.w_Vol[1] = 35;
            };
            if (todo.w_Vol[2] == undefined){
                todo.w_Vol[2] = 35;
            };
            if (((!((_local2 == null))) && (!((_local2.data.w_sound == undefined))))){
                todo.w_sound = _local2.data.w_sound;
            };
            network.TrimIgnoreList();
            if (global.xn != undefined){
                if ((((todo.w_name == "")) || (xatlib.IsDefaultName(todo.w_name)))){
                    todo.w_name = global.xn;
                };
            };
            if (global.xp != undefined){
                if (todo.w_avatar == ""){
                    todo.w_avatar = global.xp;
                };
            };
            if (global.xh != undefined){
                if (todo.w_homepage == ""){
                    todo.w_homepage = global.xh;
                };
            };
            if (global.xl != undefined){
                todo.MainFlagBits = (todo.MainFlagBits | xconst.f_Lobby);
            };
            if (network.OnFriendList(3)){
                network.UpdateFriendList(3, false);
            };
            todo.w_roomlang = global.rl;
            if (force_lang != undefined){
                todo.w_lang = force_lang;
            };
        }
        public function onMsg(_arg1, _arg2, _arg3){
            var _local4:*;
            var _local5:*;
            var _local6:*;
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local10:*;
            var _local11:*;
            var _local12:*;
            var _local13:*;
            if (_arg1 == 1){
                connectchannel = _arg1;
                connectuser = _arg2;
                connectmessage = _arg3;
                if (todo.lb != "n"){
                    sending_lc.send(fromxat, "onMsg", _arg1, _arg2, _arg3);
                };
                AppTimeout = 120;
            } else {
                if (_arg1 == 2){
                    _local4 = main.ctabsmc.TabUser();
                    sending_lc.send(fromxat, "onMsg", 2, ((_local4 == undefined)) ? 0 : _local4, "");
                } else {
                    if (_arg1 == 3){
                        if (_arg3 == 0){
                            _arg3 = todo.w_userno;
                        };
                        _local5 = xatlib.FindUser(_arg3);
                        if (_local5 != -1){
                            sending_lc.send(fromxat, "onMsg", _arg1, ((_arg3)==todo.w_userno) ? 0 : todo.Users[_local5].u, todo.Users[_local5].n);
                        };
                    } else {
                        if (_arg1 == 4){
                            todo.messageecho = _arg3;
                            if (todo.messageecho == "a"){
                                sending_lc.send(fromxat, "onMsg", 4, 0, "d");
                                _local6 = todo.Users.length;
                                _local7 = 0;
                                while (_local7 < _local6) {
                                    if (todo.Users[_local7].online == true){
                                        sending_lc.send(fromxat, "onMsg", 4, todo.Users[_local7].u, ("u" + todo.Users[_local7].a));
                                    };
                                    _local7++;
                                };
                            };
                        } else {
                            if ((((_arg1 >= 10000)) || ((_arg1 == 0)))){
                                if ((((_arg1 >= 40000)) && ((_arg1 <= 50000)))){
                                    if (_arg3 == "j"){
                                        network.NetworkSendExtMessage(_arg3);
                                    } else {
                                        network.NetworkSendxmlExtMessage(_arg3);
                                    };
                                } else {
                                    network.NetworkSendExtMessage(_arg1, _arg2, _arg3);
                                    if ((((_arg1 == 10001)) && ((_arg3.substr(0, 1) == "b")))){
                                        xatlib.UpdateDJ(todo.w_userno);
                                    };
                                };
                            } else {
                                if (_arg1 == 5){
                                    stage.focus = main.textfield2;
                                    main.textfield2.appendText(_arg3);
                                    main.textfield2.setSelection(main.textfield2.text.length, main.textfield2.text.length);
                                } else {
                                    if (_arg1 == 6){
                                        if (_arg3 == 0){
                                            _arg3 = todo.w_userno;
                                        };
                                        _local8 = xatlib.FindUser(_arg3);
                                        if (_local8 != -1){
                                            sending_lc.send(fromxat, "onMsg", _arg1, todo.Users[_local8].u, todo.Users[_local8]);
                                        };
                                    } else {
                                        if (_arg1 == 7){
                                            if (_arg3 == "x"){
                                                chat.mainDlg.GotoProfile(_arg2);
                                            } else {
                                                if (_arg3 == "p"){
                                                    viewprofile.CreateViewProfileDialog(_arg2);
                                                } else {
                                                    if (_arg3 == "b"){
                                                        xatlib.Register_onRelease(1);
                                                    };
                                                };
                                            };
                                        } else {
                                            if (_arg1 == 8){
                                                todo.w_avatar = _arg3;
                                                _local9 = SharedObject.getLocal("chat", "/");
                                                _local9.objectEncoding = ObjectEncoding.AMF0;
                                                if (((1) && (!((_local9 == null))))){
                                                    _local9.data.w_avatar = todo.w_avatar;
                                                    _local9.flush();
                                                };
                                                todo.lb = "n";
                                                todo.DoUpdate = true;
                                                network.NetworkClose();
                                                main.logoutbutonPress();
                                            } else {
                                                if (_arg1 == 9){
                                                    _local10 = "not set";
                                                    switch (_arg3){
                                                        case "sv":
                                                            _local10 = global.sv;
                                                            break;
                                                        case "smi":
                                                            _local10 = xconst.smi;
                                                            break;
                                                        case "w_xats":
                                                            _local10 = todo.w_xats;
                                                            break;
                                                        case "YC":
                                                            _local10 = network.YC;
                                                            break;
                                                        case "w_d1":
                                                            _local10 = todo.w_d1;
                                                            break;
                                                        case "w_Powers":
                                                            _local10 = todo.w_Powers;
                                                            break;
                                                        case "w_Mask":
                                                            _local10 = ((((todo.w_Mask == undefined)) || ((todo.w_Mask == 0)))) ? "0,0,0" : todo.w_Mask;
                                                            break;
                                                        case "w_langv":
                                                            _local10 = todo.w_langv;
                                                            break;
                                                        case "pssa":
                                                            _local10 = xconst.pssa;
                                                            break;
                                                        case "w_PowerO":
                                                            _local10 = todo.w_PowerO;
                                                            break;
                                                        case "w_lang":
                                                            _local10 = todo.w_lang;
                                                            break;
                                                        default:
                                                            if (1){
                                                            };
                                                    };
                                                    sending_lc.send(fromxat, "onMsg", _arg1, _arg3, _local10);
                                                } else {
                                                    if (_arg1 == 10){
                                                        _local11 = todo.Message.length;
                                                        _local12 = 0;
                                                        while (_local12 < _local11) {
                                                            if (todo.Message[_local12].i == xatlib.xInt(_arg2)){
                                                                if (_arg3 != ""){
                                                                    if (todo.Message[_local12].t.indexOf(" [") != -1){
                                                                        todo.Message[_local12].t = (((todo.Message[_local12].t.substr(0, todo.Message[_local12].t.indexOf(" [")) + " [") + _arg3) + "]");
                                                                    } else {
                                                                        todo.Message[_local12].t = (((todo.Message[_local12].t + " [") + _arg3) + "]");
                                                                    };
                                                                };
                                                                xmessage.DeleteOneMessageMc(_local12);
                                                                todo.DoUpdateMessages = true;
                                                                if ((xatlib.xInt(_arg2) & 1)){
                                                                    _local13 = todo.Message[_local12].t;
                                                                    todo.DoUpdateMessages = true;
                                                                    todo.ScrollDown = true;
                                                                    todo.LastScrollTime = undefined;
                                                                    if (todo.MessageCount > 0){
                                                                        todo.MessageCount = 25;
                                                                    };
                                                                    if (_local13 != todo.LastMessageToSend){
                                                                        if (todo.MessageToSend.length == 0){
                                                                            todo.MessageToSend = _local13;
                                                                        };
                                                                        todo.MessageToSend = todo.MessageToSend.substr(0, 0x0100);
                                                                    } else {
                                                                        todo.MessageCount = 25;
                                                                    };
                                                                };
                                                                break;
                                                            };
                                                            _local12++;
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }
        function onkeyUp(_arg1:KeyboardEvent):void{
            keybits[_arg1.keyCode] = false;
        }
        function tick(_arg1:Event){
            var flushret:* = undefined;
            var temp_comm:* = undefined;
            var t:* = undefined;
            var str:* = undefined;
            var event:* = _arg1;
            if (State == 0){
                sot = SharedObject.getLocal("chat", "/");
                sot.objectEncoding = ObjectEncoding.AMF0;
                sot = SharedObject.getLocal("chat", "/");
                sot.objectEncoding = ObjectEncoding.AMF0;
                sot.data.w_test = Math.random();
                this.SetState(1);
            };
            if (State == 1){
                flushret = sot.flush();
                if (flushret == SharedObjectFlushStatus.FLUSHED){
                    sot = null;
                    this.SetState(2);
                };
            };
            if (State == 2){
                this.CookieStuff();
                if (todo.w_lang == undefined){
                    if (todo.w_roomlang == undefined){
                        this.SetState(5);
                    } else {
                        todo.w_lang = todo.w_roomlang;
                        this.SetState(3);
                    };
                } else {
                    if (todo.w_lang == 0){
                        this.SetState(5);
                    } else {
                        this.SetState(3);
                    };
                };
            };
            if (State == 3){
                todo.LangText = undefined;
                temp_comm = (((helpdialog.GetLangDom() + todo.w_lang) + ".xml?") + todo.w_langv);
                xatlib.LoadVariables(temp_comm, this.onLang);
                this.SetState(4, 20);
            };
            if (State == 4){
                if (todo.LangText != undefined){
                    xconst.CreateST();
                    this.SetState(5);
                };
                if (Timeout != undefined){
                    Timeout--;
                };
                if (Timeout <= 0){
                    this.SetState(5);
                };
            };
            if (State == 5){
                mainDlg = new main();
                addChild(mainDlg);
                mainDlg.StartChat();
                network.NetworkInit();
                network.NetworkStartChat();
                this.AppComms();
                IM.IMComms();
                if (todo.w_room == 8){
                    xatlib.AddBackground(this, -10, -10, 240, 160, (((((128 << 10) | xatlib.c_tl) | xatlib.c_tr) | xatlib.c_bl) | xatlib.c_br));
                };
                if ((global.xc & 1)){
                    if (global.xp != undefined){
                        xatlib.GeneralMessage(" ", ("Set Picture: " + global.xp));
                        main.box_layer.GeneralMessageH.Dia.Ok.But.PressFunc = function (_arg1){
                            main.box_layer.GeneralMessageH.Delete();
                            todo.w_avatar = global.xp;
                            xatlib.MainSolWrite("w_avatar", todo.w_avatar);
                            xatlib.ReLogin();
                        };
                    };
                };
                this.SetState(6);
            };
            if (State == 6){
                if (AppTimeout != undefined){
                    AppTimeout--;
                    if (AppTimeout <= 0){
                        if (todo.messageecho == "m"){
                            todo.messageecho = undefined;
                        };
                        AppTimeout = undefined;
                    };
                };
                network.NetworkTick();
                tickcode.DoTick();
            };
            if (((!((gctrick == 0))) && (((todo.tick % gctrick) == 0)))){
                try {
                    new LocalConnection().connect("foo");
                    new LocalConnection().connect("foo");
                } catch(e:Error) {
                };
            };
            if (((debug) || ((((todo.useport == 10025)) && ((todo.sockdomain == "174.36.242.26")))))){
                framec++;
                if (framec >= period){
                    t = getTimer();
                    fps = (Math.round((((period * 1000) / (t - framet)) * 100)) / 100);
                    fpsa = (fpsa + fps);
                    fpsc++;
                    afps = (Math.round(((fpsa / fpsc) * 100)) / 100);
                    fpsstr = (fpsstr + (fps.toString() + ","));
                    timesc++;
                    if (timesc >= times){
                        str = (((((((((("lag=" + fpsstr) + Capabilities.version) + ",") + System.totalMemory) + ",") + mainDlg.stage.frameRate) + ",") + afps) + ",") + cVersion);
                        network.NetworkSendMsg(1, ("/KD " + str), 0, 0, 1);
                        fpsstr = "";
                        timesc = 0;
                    };
                    framet = t;
                    framec = 0;
                };
            };
        }
        function SetState(_arg1, _arg2=undefined){
            State = _arg1;
            Timeout = _arg2;
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.utils.*;
    import flash.geom.*;

    public class loadbitmap extends MovieClip {

        private static const doms = {
            imageshack:"us",
            hizliresim:"com",
            tinypic:"com",
            imagehost:"org",
            yollayap:"com"
        };
        private static const doms_cd = {
            xat:"com",
            xatech:"com",
            photobucket:"com"
        };

        private static var cdic = new Dictionary();
        private static var ccnt = 0;

        private var m_Loader;
        private var pass = 0;
        private var m_Handler;
        private var b;
        private var m_read = 0;
        private var dom2:String;
        private var m_width;
        private var dom1:String;
        private var m_height;
        private var m_data:ByteArray;
        private var m_urlStream;

        public function loadbitmap(_arg1, _arg2, _arg3=80, _arg4=80, _arg5=null){
            var _local6:Bitmap;
            var _local7:URLRequest;
            this.m_data = new ByteArray();
            super();
            if (_arg1){
                _arg1.addChild(this);
            };
            this.b = _arg2;
            if (this.b.toLowerCase().indexOf(".swf") >= 0){
                this.DoHandler();
                return;
            };
            this.m_width = _arg3;
            this.m_height = _arg4;
            ccnt++;
            this.m_Handler = _arg5;
            if ((((this.m_height == 80)) && (cdic[_arg2]))){
                _local6 = new Bitmap(cdic[_arg2].bmp.bitmapData.clone());
                cdic[_arg2].cnt = ccnt;
                cdic[_arg2].bmp = _local6;
                addChild(_local6);
                return;
            };
            this.SetDom();
            if (((this.dom1) && ((doms_cd[this.dom1] === this.dom2)))){
                _local7 = new URLRequest(_arg2);
                this.m_urlStream = new URLStream();
                this.m_urlStream.addEventListener(Event.COMPLETE, this.streamComplete, false, 0, true);
                this.m_urlStream.addEventListener(ProgressEvent.PROGRESS, this.streamProgress, false, 0, true);
                this.m_urlStream.addEventListener(IOErrorEvent.IO_ERROR, this.passevent, false, 0, true);
                this.m_urlStream.addEventListener(SecurityErrorEvent.SECURITY_ERROR, this.secErr, false, 0, true);
                this.m_urlStream.load(_local7);
            } else {
                this.secErr();
            };
        }
        private function passevent(_arg1:Event):void{
            dispatchEvent(_arg1);
        }
        private function streamProgress(_arg1:ProgressEvent):void{
            var _local2:*;
            this.pass++;
            if (this.m_urlStream.bytesAvailable >= 2){
                _local2 = this.m_urlStream.bytesAvailable;
                this.m_urlStream.readBytes(this.m_data, this.m_read, _local2);
                this.m_read = (this.m_read + _local2);
                if (((((((!((this.pass == 1))) || ((((this.m_data[0] == 0xFF)) && ((this.m_data[1] == 216)))))) || ((((this.m_data[0] == 71)) && ((this.m_data[1] == 73)))))) || ((((this.m_data[0] == 137)) && ((this.m_data[1] == 80)))))){
                } else {
                    this.m_urlStream.close();
                    this.m_urlStream = null;
                    this.DoHandler();
                };
            };
        }
        private function secErr(_arg1=0):void{
            var _local2:*;
            if (this.m_urlStream){
                this.m_urlStream.close();
                this.m_urlStream = null;
            };
            this.m_Loader = new Loader();
            if (((this.dom1) && ((doms[this.dom1] === this.dom2)))){
                _local2 = this.b;
            } else {
                _local2 = ((((("http://68.169.43.60/web_gear/chat/GetImage.php?W=" + this.m_width) + "&H=") + this.m_height) + "&U=") + this.b);
            };
            var _local3:URLRequest = new URLRequest(_local2);
            this.m_Loader.load(_local3);
            addChild(this.m_Loader);
            this.m_Loader.contentLoaderInfo.addEventListener(Event.COMPLETE, this.DoHandler);
            this.m_Loader.addEventListener(IOErrorEvent.IO_ERROR, this.passevent);
        }
        private function streamComplete(_arg1:Event):void{
            this.m_urlStream.readBytes(this.m_data, this.m_read, this.m_urlStream.bytesAvailable);
            this.m_urlStream.close();
            this.m_urlStream = null;
            this.m_Loader = new Loader();
            this.m_Loader.contentLoaderInfo.addEventListener(Event.COMPLETE, this.loaderComplete, false, 0, true);
            this.m_Loader.addEventListener(IOErrorEvent.IO_ERROR, this.passevent, false, 0, true);
            this.m_Loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, this.passevent, false, 0, true);
            this.m_Loader.loadBytes(this.m_data);
        }
        private function DoHandler(_arg1=null){
            if (this.m_Handler){
                this.m_Handler();
            };
            this.m_Handler = null;
        }
        private function SetDom():void{
            var _local1:* = this.b.split("/");
            _local1 = _local1[2].toLowerCase();
            _local1 = _local1.split(".");
            var _local2:* = _local1.length;
            this.dom1 = _local1[(_local2 - 2)];
            this.dom2 = _local1[(_local2 - 1)];
        }
        private function loaderComplete(_arg1:Event):void{
            var outputBitmapData:* = null;
            var old:* = undefined;
            var c:* = undefined;
            var key:* = undefined;
            var e:* = _arg1;
            var tt:* = this;
            var src:* = this.m_Loader.contentLoaderInfo.content;
            var srcRect:* = DisplayObject(src).getBounds(DisplayObject(src));
            var srcBitmapData:* = new BitmapData(srcRect.width, srcRect.height, true, 0);
            srcBitmapData.draw(src);
            var zwidth:* = srcRect.width;
            var zheight:* = srcRect.height;
            if ((((this.m_height == 80)) && (((srcBitmapData.width / srcBitmapData.height) >= 2)))){
                if (zheight > 80){
                    zheight = 80;
                };
                zwidth = int(((zheight * srcBitmapData.width) / srcBitmapData.height));
            } else {
                if (zheight > this.m_height){
                    zheight = this.m_height;
                };
                if (zwidth > this.m_width){
                    zwidth = this.m_width;
                };
            };
            var matrix:* = new Matrix();
            matrix.scale((zwidth / srcBitmapData.width), (zheight / srcBitmapData.height));
            try {
                outputBitmapData = new BitmapData(zwidth, zheight, true, 0);
            } catch(e:Error) {
                m_Loader = null;
                m_Loader.unloadAndStop(true);
                DoHandler();
                return;
            };
            var smoothing:* = true;
            if ((((zheight == srcRect.width)) && ((zwidth == srcRect.height)))){
                matrix = null;
                smoothing = false;
            };
            outputBitmapData.draw(srcBitmapData, matrix, null, null, null, smoothing);
            if ((src is DisplayObject)){
                srcBitmapData.dispose();
            };
            var bmp:* = new Bitmap(outputBitmapData);
            bmp.smoothing = true;
            addChild(bmp);
            if (this.m_height == 80){
                cdic[this.b] = new Object();
                cdic[this.b].cnt = ccnt;
                cdic[this.b].bmp = bmp;
                old = (ccnt - 20);
                c = 0;
                for (key in cdic) {
                    c = (c + 1);
                    if (cdic[key].cnt < old){
                        delete cdic[key];
                    };
                };
            };
            this.m_Loader.unloadAndStop(true);
            this.m_Loader = null;
            this.DoHandler();
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class smile extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class biggrin extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class coins extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class Ball2 extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.utils.*;
    import flash.geom.*;
    import flash.system.*;

    public class recycle extends MovieClip {

        var subd;
        var bin;
        public var total;
        var cput = 0;
        var cget = 0;
        var tc = 0;

        public function recycle(){
            this.bin = new Dictionary(true);
            this.subd = new Dictionary();
            super();
            addEventListener(Event.ENTER_FRAME, this.tick);
        }
        public function put(_arg1, _arg2){
            this.cput++;
            if ((this.bin[_arg1] is Dictionary)){
                this.bin[_arg1][_arg2] = true;
            } else {
                if (this.subd[_arg1]){
                    delete this.subd[_arg1];
                };
                this.subd[_arg1] = new Dictionary(true);
                this.subd[_arg1][_arg2] = true;
                this.bin[_arg1] = this.subd[_arg1];
            };
        }
        function dump(_arg1=undefined){
            var _local3:*;
            var _local4:*;
            var _local5:*;
            var _local2:* = "";
            this.total = 0;
            if (_arg1 == undefined){
                _arg1 = this.bin;
            };
            for (_local3 in _arg1) {
                if ((_arg1[_local3] is Dictionary)){
                    _local4 = 0;
                    for (_local5 in _arg1[_local3]) {
                        _local4++;
                    };
                    _local2 = (_local2 + (((("(" + _local4) + ") ") + _local3) + ", "));
                    this.total = (this.total + _local4);
                } else {
                    _local2 = (_local2 + (("(1) " + _local3) + ", "));
                    this.total++;
                };
            };
            _local4 = 0;
            for (_local3 in this.subd) {
                _local4++;
            };
            _local2 = (_local2 + ((" (subd=" + _local4) + ")"));
            _local2 = (_local2 + (((((" Recycle Size: " + this.total) + " cput=") + this.cput) + " cget=") + this.cget));
            this.cget = (this.cput = 0);
            if (this.total == 0){
                _local2 = "";
            };
            return (_local2);
        }
        function grab(_arg1){
            var _local2:*;
            var _local3:*;
            this.cget++;
            if (!this.bin[_arg1]){
                return (null);
            };
            if ((this.bin[_arg1] is Dictionary)){
                _local2 = null;
                for (_local3 in this.bin[_arg1]) {
                    if (_local2){
                        return (_local2);
                    };
                    _local2 = _local3;
                    delete this.bin[_arg1][_local3];
                };
                delete this.subd[_arg1];
                delete this.bin[_arg1];
                return (_local2);
            };
            return (null);
        }
        function tick(_arg1:Event){
            var _local2:*;
            var _local3:*;
            var _local4:*;
            this.tc++;
            if ((this.tc % 12) == 0){
                for (_local2 in this.subd) {
                    _local3 = 0;
                    for (_local4 in this.subd[_local2]) {
                        _local3 = 1;
                        break;
                    };
                    if (_local3 == 0){
                        delete this.subd[_local2];
                        delete this.bin[_local2];
                    };
                };
            };
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class notif extends MovieClip {

        public var back:MovieClip;

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class textWrapperClip3 extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class eek extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;

    public class profile extends Sprite {

        static var tf3b;
        static var tf5:TextField;
        static var tf3:TextField;
        static var tf4:TextField;
        public static var mcprofilebackground;
        static var Dia;
        static var tf4b;
        static var changed = false;
        static var tf5b;

        static function OK_onRelease(_arg1:MouseEvent=undefined){
            var _local2:*;
            if ((((todo.messageecho == "p")) && (!((todo.w_avatar == xatlib.CleanAv(tf4.text)))))){
                chat.sending_lc.send(chat.fromxat, "onMsg", 4, 0, "p");
            };
            if (((((((!((todo.w_name == tf3.text))) || (!((todo.w_avatar == xatlib.CleanAv(tf4.text)))))) || (!((todo.w_homepage == tf5.text))))) || (changed))){
                todo.w_name = xatlib.NameNoXat(xatlib.CleanText(tf3.text), 1);
                todo.w_avatar = xatlib.CleanAv(tf4.text);
                tf4.text = xatlib.UrlAv(todo.w_avatar);
                todo.w_homepage = tf5.text;
                todo.w_userrev++;
                xatlib.PurgeMessageFromUser(todo.w_userno);
                _local2 = xatlib.FindUser(todo.w_userno);
                if (_local2 != -1){
                    todo.Users[_local2].n = todo.w_name;
                    todo.Users[_local2].a = todo.w_avatar;
                    todo.Users[_local2].h = todo.w_homepage;
                    todo.Users[_local2].s = ((todo.Macros)!=undefined) ? todo.Macros["status"] : undefined;
                };
                network.UpdateFriendList(todo.w_userno, true);
                todo.w_friendlist2[todo.w_userno] = undefined;
                xatlib.ReLogin();
            };
            xatlib.MainSolWrite("w_name", todo.w_name);
            xatlib.MainSolWrite("w_avatar", todo.w_avatar);
            xatlib.MainSolWrite("w_homepage", todo.w_homepage);
            xatlib.MainSolWrite("w_userrev", todo.w_userrev);
            todo.DoUpdate = true;
            mcprofilebackground_close();
        }
        static function onUser(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            var _local3:* = ((todo.w_userrevlist[_local2.Num])!=undefined) ? todo.w_userrevlist[_local2.Num] : 0;
            var _local4:* = ((todo.w_namelist[_local2.Num])!=undefined) ? todo.w_namelist[_local2.Num] : " ";
            var _local5:* = ((todo.w_avatarlist[_local2.Num])!=undefined) ? todo.w_avatarlist[_local2.Num] : "";
            var _local6:* = ((todo.w_homepagelist[_local2.Num])!=undefined) ? todo.w_homepagelist[_local2.Num] : "";
            todo.w_userrevlist[_local2.Num] = todo.w_userrev;
            todo.w_namelist[_local2.Num] = xatlib.CleanTextNoXat(todo.w_name);
            todo.w_avatarlist[_local2.Num] = todo.w_avatar;
            todo.w_homepagelist[_local2.Num] = todo.w_homepage;
            todo.w_name = xatlib.CleanTextNoXat(_local4);
            todo.w_avatar = _local5;
            todo.w_homepage = _local6;
            xatlib.MainSolWrite("w_userrevlist", todo.w_userrevlist);
            xatlib.MainSolWrite("w_namelist", todo.w_namelist);
            xatlib.MainSolWrite("w_avatarlist", todo.w_avatarlist);
            xatlib.MainSolWrite("w_homepagelist", todo.w_homepagelist);
            mcprofilebackground_close();
            xatlib.ReLogin();
        }
        static function Delete(){
        }
        static function onPowers(_arg1:MouseEvent=undefined){
            changed = true;
            powers.PowersDialog(todo.w_userno, ((todo.w_registered == undefined)) ? (" " + todo.w_userno) : ((((" " + todo.w_registered) + " (") + todo.w_userno) + ")"));
        }
        static function mcprofilebackground_close(){
            main.hint.HintOff();
            if (mcprofilebackground){
                mcprofilebackground.Delete();
            };
            main.DialogOpen = 0;
        }
        static function Register_Link(_arg1){
            var _local2:*;
            _local2 = (xconst.usedomain + "/web_gear/chat/register.php");
            if (_arg1 != undefined){
                _local2 = (_local2 + ((((("?UserId=" + todo.w_userno) + "&k2=") + todo.w_k2) + "&mode=") + _arg1));
            };
            return (_local2);
        }
        static function OnCheck(_arg1:MouseEvent){
            _arg1.currentTarget.tick.visible = !(_arg1.currentTarget.tick.visible);
            if (_arg1.currentTarget.tick.visible){
                todo.autologin = (todo.autologin | _arg1.currentTarget.Bit);
            } else {
                todo.autologin = (todo.autologin & ~(_arg1.currentTarget.Bit));
            };
            xatlib.MainSolWrite("w_autologin", todo.autologin);
        }
        static function More_onRelease(_arg1:MouseEvent=undefined){
            var _local2:String;
            _local2 = ((xconst.chatdomain + "avatar.php?id=") + todo.w_userno);
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(63), _local2);
        }
        static function Effect_onRelease(_arg1:MouseEvent){
            var _local2:*;
            if ((global.xc & 0x0800)){
                main.mcLoad.OpenByN(20032);
            } else {
                _local2 = xatlib.xatlinks(xatlib.PageUrl(20032));
                xatlib.UrlPopup(xconst.ST(8), _local2, xconst.ST(17));
                xatlib.getURL(_local2, "_blank");
            };
        }
        static function ChangeProfileAvs(){
            var r:* = undefined;
            var mc2:* = null;
            Dia = mcprofilebackground.Dia;
            var YY:* = xatlib.NY(Dia.txt1.YY);
            DeleteProfileAvs();
            var Press:* = function (){
                chat.mainDlg.GotoProfile(todo.w_userno);
            };
            Dia.avc = new xAvatar(Dia, tf4.text, undefined, Press, todo.w_VIP, todo.w_d0, todo.Users[xatlib.FindUser(todo.w_userno)].Powers);
            var mc:* = Dia.avc.Av;
            mc.x = xatlib.NX((144 - 77));
            mc.y = YY;
            Dia.acnt = int((xatlib.NX(470) / 33));
            Dia.xmc = new Array();
            var e:* = 0;
            while (e < Dia.acnt) {
                r = xatlib.RandAv();
                Dia.xmc[e] = new xAvatar(Dia, r);
                mc2 = Dia.xmc[e].Av;
                mc2.x = (xatlib.NX(144) + (33 * e));
                mc2.y = YY;
                mc2.txt = r;
                mc2.addEventListener(MouseEvent.MOUSE_DOWN, AvPress);
                e = (e + 1);
            };
        }
        static function DeleteProfileAvs(){
            var _local1:MovieClip = mcprofilebackground.Dia;
            if (_local1.avc == undefined){
                return;
            };
            _local1.removeChild(_local1.avc);
            var _local2:* = 0;
            while (_local2 < _local1.acnt) {
                _local1.removeChild(_local1.xmc[_local2]);
                _local2++;
            };
        }
        static function CreateProfile(_arg1=0){
            var YY:* = undefined;
            var s:* = undefined;
            var vt:* = undefined;
            var e:int = _arg1;
            var AddCheck:* = function (_arg1, _arg2){
                xatlib.createTextNoWrap(Dia.txt1, xatlib.NX(62), xatlib.NY(YY), xatlib.NX(280), xatlib.NY(32), _arg1, 0x202020, 0, 100, 0, 20, "left", 1);
                var _local3:* = xatlib.AttachMovie(Dia.txt1, "checkbox");
                _local3.x = xatlib.NX(40);
                _local3.y = xatlib.NY((YY + 8));
                _local3.tick.visible = !(((todo.autologin & _arg2) == 0));
                _local3.Bit = _arg2;
                _local3.addEventListener(MouseEvent.MOUSE_DOWN, OnCheck);
                YY = (YY + 30);
            };
            changed = false;
            main.DialogClose();
            main.DialogOpen = 1;
            var Married:* = ((todo.w_registered) && (todo.w_d2));
            if (todo.w_userrev == undefined){
                todo.w_userrev = 0;
                if (todo.lb == "t"){
                    todo.lb = "n";
                    todo.DoUpdate = true;
                    network.NetworkClose();
                };
                if (todo.lb == "n"){
                    main.logoutbutonPress();
                };
                return;
            };
            YY = (407 + 5);
            if (Married){
                YY = (YY + 38);
            };
            var strUserNo:* = xatlib.xInt(todo.w_userno).toString();
            if (strUserNo.substr(-6, 6) == "000000"){
                strUserNo = (strUserNo.substr(0, (strUserNo.length - 6)) + "M");
            };
            mcprofilebackground = new xDialog(main.dialogs, xatlib.NX(20), xatlib.NY(((480 - YY) / 2)), xatlib.NX(600), xatlib.NY(YY), ((todo.w_registered == undefined)) ? (" " + todo.w_userno) : ((((" " + todo.w_registered) + " (") + strUserNo) + ")"), undefined, 0, mcprofilebackground_close);
            YY = ((480 - YY) / 2);
            YY = (YY + 4);
            Dia = mcprofilebackground.Dia;
            Dia.mcuser = new Array();
            var i:* = 0;
            while (i < 4) {
                Dia.mcuser[i] = new xBut(Dia, xatlib.NX((510 - (i * 85))), xatlib.NY(YY), xatlib.NX(80), xatlib.NY(22), ((todo.w_namelist[i])!=undefined) ? todo.w_namelist[i] : xconst.ST(59), onUser);
                Dia.mcuser[i].But.Num = i;
                if (todo.w_namelist[i] == undefined){
                    break;
                };
                i = (i + 1);
            };
            Dia.txt1 = Dia;
            YY = (YY + (((((385 - 200) - 24) - 37) + 6) - (130 - 37)));
            xatlib.createTextNoWrap(Dia.txt1, xatlib.NX((12 + 24)), xatlib.NY(YY), xatlib.NX(100), xatlib.NY(32), xconst.ST(60), 0x202020, 0, 100, 0, 24, "left", 1);
            tf3b = xatlib.AddBackground(Dia, xatlib.NX((120 + 24)), xatlib.NY(YY), xatlib.NX(460), xatlib.NY(32));
            tf3 = xatlib.AddTextField(Dia, xatlib.NX((120 + 24)), xatlib.NY(YY), xatlib.NX(460), xatlib.NY(32), "", main.fmt);
            tf3.type = TextFieldType.INPUT;
            YY = (YY + (429 - 385));
            Dia.txt1.YY = ((YY + 18) + 24);
            xatlib.createTextNoWrap(Dia.txt1, xatlib.NX((12 + 24)), xatlib.NY(YY), xatlib.NX(100), xatlib.NY(32), xconst.ST(61), 0x202020, 0, 100, 0, 24, "left", 1);
            tf4b = xatlib.AddBackground(Dia, xatlib.NX((120 + 24)), xatlib.NY(YY), xatlib.NX(460), xatlib.NY(32));
            tf4 = xatlib.AddTextField(Dia, xatlib.NX((120 + 24)), xatlib.NY(YY), xatlib.NX(460), xatlib.NY(32), "", main.fmt);
            tf4.type = TextFieldType.INPUT;
            YY = (YY + (42 + xatlib.NY(30)));
            Dia.mcmore = new xBut(Dia, xatlib.NX(445), xatlib.NY((YY + 10)), xatlib.NX(160), xatlib.NY(30), xconst.ST(64), More_onRelease);
            Dia.mcmore.SetHint(xconst.ST(63));
            Dia.mceffect = new xBut(Dia, xatlib.NX(240), xatlib.NY((YY + 10)), xatlib.NX(160), xatlib.NY(30), xconst.ST(190), Effect_onRelease);
            Dia.mceffect.SetHint(xconst.ST(191));
            YY = (YY + xatlib.NY(40));
            xatlib.createTextNoWrap(Dia.txt1, xatlib.NX((12 + 24)), (xatlib.NY(YY) + 15), xatlib.NX(100), xatlib.NY(32), xconst.ST(62), 0x202020, 0, 100, 0, 24, "left", 1);
            tf5b = xatlib.AddBackground(Dia, xatlib.NX((120 + 24)), (xatlib.NY(YY) + 15), xatlib.NX(460), xatlib.NY(32));
            tf5 = xatlib.AddTextField(Dia, xatlib.NX((120 + 24)), (xatlib.NY(YY) + 15), xatlib.NX(460), xatlib.NY(32), "", main.fmt);
            tf5.type = TextFieldType.INPUT;
            tf3.text = (todo.w_name = xatlib.CleanTextNoXat(todo.w_name));
            tf4.text = todo.w_avatar;
            tf5.text = todo.w_homepage;
            tf3.addEventListener(Event.CHANGE, xatlib.RemoveCR);
            tf4.addEventListener(Event.CHANGE, xatlib.RemoveCR);
            tf5.addEventListener(Event.CHANGE, xatlib.RemoveCR);
            YY = (YY + 58);
            if (Married){
                s = xconst.ST(152);
                if ((todo.w_d0 & 1)){
                    s = xconst.ST(153);
                };
                s = (s + ": ");
                if (todo.w_bride){
                    s = (s + (((todo.w_bride + " (") + todo.w_d2) + ")"));
                } else {
                    s = (s + todo.w_d2);
                };
                xatlib.createTextNoWrap(Dia.txt1, xatlib.NX((12 + 24)), xatlib.NY(YY), xatlib.NX(460), xatlib.NY(32), s, 0x202020, 0, 100, 0, 18, "left", 1);
                Dia.dv = new xBut(Dia, xatlib.NX(445), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), xconst.ST(150), onDivorce, 0);
                Dia.dv.But.UserNo = 1;
                Dia.dv.But.Mode = 2;
                YY = (YY + 38);
            };
            Dia.mcpowers = new xBut(Dia, xatlib.NX(445), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), xconst.ST(189), onPowers);
            xatlib.AttachBut(Dia.mcpowers, "pwr");
            AddCheck(xconst.ST(65), 1);
            AddCheck(xconst.ST(220), 2);
            YY = (YY + 5);
            if (todo.w_userno < (2000000000 - (100000 * 2))){
                Dia.mcregister = new xBut(Dia, xatlib.NX(35), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), xconst.ST(154), xatlib.Register_onRelease);
                Dia.mcregister.SetRoll(xconst.ST(155));
            };
            Dia.mclang = new xBut(Dia, xatlib.NX(445), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), "Language...", OK_onLang);
            if (global.xm != undefined){
                Dia.UseX = new xBut(Dia, xatlib.NX(240), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), global.xm, UseX_onRelease);
                Dia.UseX.But.Obj = Dia.UseX;
            } else {
                Dia.CoinB = new xBut(Dia, xatlib.NX(240), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), ("  " + xconst.ST(206)), xkiss.BuyRelease);
                xatlib.AttachBut(Dia.CoinB, "coins");
            };
            YY = (YY + 50);
            Dia.coins = xatlib.AttachMovie(Dia, "coins", {
                x:xatlib.NX(440),
                y:xatlib.NY((YY + 4)),
                scaleX:xatlib.SX(),
                scaleY:xatlib.SY()
            });
            xatlib.createTextNoWrap(Dia.coins, 30, -10, 130, 50, ((isNaN(todo.w_coins)) ? 0 : todo.w_coins + " xats"), 0x202020, 0, 100, 0, 26, "center", 1);
            Dia.coins.addEventListener(MouseEvent.MOUSE_DOWN, xkiss.CreateBuystuff);
            if (network.YC){
                vt = (xatlib.xInt(todo.w_d1) - network.YC);
                if (vt < 0){
                    vt = 0;
                };
                vt = xatlib.xInt(((vt / (24 * 3600)) + 0.3));
                xatlib.createTextNoWrap(Dia.txt1, xatlib.NX((12 + 24)), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(33), ((xconst.ST(203) + "\n") + xconst.ST(204, vt)), 0x202020, 0, 100, 0, 24, "left", 1);
            };
            Dia.mcok = new xBut(Dia, xatlib.NX(240), xatlib.NY(YY), xatlib.NX(160), xatlib.NY(30), xconst.ST(45), OK_onRelease);
            ChangeProfileAvs();
        }
        static function AvPress(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            var _local3:* = mcprofilebackground.Dia;
            tf4.text = _local2.txt;
            ChangeProfileAvs();
        }
        static function OK_onLang(_arg1:MouseEvent=undefined){
            var _local2:String = ((xconst.chatdomain + "changelanguage.php?id=") + todo.w_useroom);
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(8), (xconst.usedomain + "/language"));
        }
        static function Login_onRelease(){
            mcprofilebackground_close();
        }
        static function onDivorce(_arg1){
            xkiss.CreateBuystuff(todo.w_d2, 2);
        }
        static function UseX_onRelease(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            if (_local2.Done){
                mcprofilebackground_close();
                return;
            };
            if (global.xn != undefined){
                tf3.text = xatlib.CleanText(global.xn);
            };
            if (global.xh != undefined){
                tf5.text = xatlib.CleanText(global.xh);
            };
            if (global.xp != undefined){
                tf4.text = xatlib.CleanText(global.xp);
                ChangeProfileAvs();
            };
            _local2.Obj.SetText(xconst.ST(66));
            _local2.Done = true;
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;

    public class powers extends Sprite {

        static var powersinc;
        static var boutin;
        static var mcpowersback;
        static var bpowersscrollmc;
        static var mcpowersbackground;
        static var powersincc;
        static var bph;
        static var userid;
        static var mcpowersbackb;
        static var sM;
        static var mcpowersbackmask;

        static function AddPower(_arg1, _arg2, _arg3, _arg4){
            var _local5:MovieClip;
            if (_arg3){
                _local5 = xatlib.AttachMovie(mcpowersback, "checkbox");
                _local5.x = 10;
                _local5.y = (powersinc + 8);
                _local5.addEventListener(MouseEvent.MOUSE_DOWN, OnPowerCheck);
                _local5.Bit = _arg1;
                _local5.tick.visible = _arg2;
            };
            var _local6:* = new MovieClip();
            mcpowersback.addChild(_local6);
            _local6.x = 5;
            xmessage.SmB = true;
            var _local7:* = "";
            if (((((!((_arg1 == 0))) && (!((_arg4 == undefined))))) && (!((_arg4 == 0))))){
                _local7 = ((" [" + _arg4) + "]");
            };
            var _local8:* = (8 + xmessage.AddMessageToMc(_local6, 1, (((("(" + xconst.pssa[(_arg1 + 1)]) + ")  <b> ") + xconst.pssa[(_arg1 + 1)]) + _local7), 30, (mcpowersback.Width - 30), powersinc, userid));
            xmessage.SmB = undefined;
            if ((powersincc % 2) == 1){
                _local6.x = (_local6.x + (xatlib.NX(360) / 2));
                if (_local5){
                    _local5.x = (_local5.x + (xatlib.NX(360) / 2));
                };
                powersinc = (powersinc + _local8);
            };
            powersincc++;
        }
        static function PowDecode(_arg1){
            var _local5:*;
            var _local6:*;
            var _local2:* = new Array();
            if ((((_arg1 == undefined)) || ((_arg1.length == 0)))){
                return (_local2);
            };
            var _local3:* = _arg1.split("|");
            var _local4:* = 0;
            while (_local4 < _local3.length) {
                _local5 = _local3[_local4].split("=");
                _local6 = xatlib.xInt(_local5[1]);
                if (_local6 == 0){
                    _local6 = 1;
                };
                _local2[_local5[0]] = (_local6 + 1);
                _local4++;
            };
            return (_local2);
        }
        static function onPowersScrollChange(){
            var _local1:* = (((powersinc - bph) + 4) + (((powersincc % 2) == 1)) ? 30 : 0);
            if (_local1 < 0){
                _local1 = 0;
            };
            bpowersscrollmc.Scr_size = _local1;
            var _local2:* = bpowersscrollmc.Scr_position;
            mcpowersback.y = -(_local2);
        }
        static function Delete(){
            mcpowersbackground = null;
        }
        public static function PowersDialog(_arg1, _arg2){
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local10:*;
            var _local13:*;
            var _local14:*;
            var _local15:*;
            main.DialogClose();
            main.DialogOpen = 7;
            if (todo.w_Mask == undefined){
                todo.w_Mask = new Array(0, 0, 0);
            };
            sM = todo.w_Mask.slice();
            powersinc = 0;
            powersincc = 0;
            userid = _arg1;
            boutin = false;
            mcpowersbackground = new xDialog(main.dialogs, xatlib.NX(120), xatlib.NY(30), xatlib.NX(400), xatlib.NY(380), ((" " + _arg2) + " Powers"), undefined, 0, mcpowersbackground_close);
            var _local3:* = mcpowersbackground.Dia;
            _local3.mcclose = new xBut(_local3, xatlib.NX(240), xatlib.NY(370), xatlib.NX(160), xatlib.NY(30), xconst.ST(45), PowersClose);
            _local3.mcgetpowers = new xBut(_local3, xatlib.NX(345), xatlib.NY(320), xatlib.NX(160), xatlib.NY(30), "Get Powers", GetPowers);
            xatlib.AttachBut(_local3.mcgetpowers, "pwr");
            var _local4:* = xatlib.NX(380);
            bph = (xatlib.NY(240) - 40);
            var _local5:* = xatlib.NX(130);
            var _local6:* = (xatlib.NY(30) + 40);
            mcpowersbackb = xatlib.AddBackground(_local3, _local5, _local6, _local4, bph);
            mcpowersback = new MovieClip();
            mcpowersbackb.addChild(mcpowersback);
            mcpowersback.Width = _local4;
            mcpowersbackmask = xatlib.AddBackground(_local3, (_local5 + 1), (_local6 + 1), ((_local4 - 2) - xatlib.NX(16)), (bph - 2), 0);
            mcpowersback.mask = mcpowersbackmask;
            bpowersscrollmc = new xScroll(_local3, ((_local5 + _local4) - xatlib.NX(16)), _local6, xatlib.NX(16), bph, xatlib.NX(16), xatlib.NX(32), 30, (10 * 100), (0 * 100), onPowersScrollChange);
            if (todo.w_userno == userid){
                _local7 = true;
                _local8 = todo.w_Powers;
                _local9 = PowDecode(todo.w_PowerO);
                _local10 = ((todo.w_Mask[0])!=undefined) ? todo.w_Mask : undefined;
            } else {
                _local8 = todo.Users[xatlib.FindUser(userid)].UnmaskedPowers;
                _local9 = PowDecode(todo.Users[xatlib.FindUser(userid)].PowerO);
                _local10 = todo.Users[xatlib.FindUser(userid)].Powers;
            };
            if (_local8){
                _local13 = 0;
                while (_local13 < _local8.length) {
                    _local14 = 0;
                    while (_local14 < 32) {
                        if ((((((((((_local14 == 0)) && ((_local13 == 0)))) && (_local7))) && (todo.w_ALLP))) || (((((!((((_local14 == 0)) && ((_local13 == 0))))) && (((_local8[_local13] >> _local14) & 1)))) && ((_local14 < (xconst.pssa.length - 1))))))){
                            AddPower(((_local13 * 32) + _local14), ((~(_local10[_local13]) >> _local14) & 1), _local7, _local9[((_local13 * 32) + _local14)]);
                        };
                        _local14++;
                    };
                    _local13++;
                };
            };
            var _local11:* = xatlib.FindUser(userid);
            if (((!((todo.Users[_local11].coins == undefined))) && (!((todo.Users[_local11].days == undefined))))){
                _local3.days = xatlib.AttachMovie(_local3, "star", {
                    x:xatlib.NX(140),
                    y:xatlib.NY(280),
                    scaleX:xatlib.SX(),
                    scaleY:xatlib.SY()
                });
                xatlib.createTextNoWrap(_local3.days, 30, -10, 130, 50, xconst.ST(204, todo.Users[_local11].days), 0x202020, 0, 100, 0, 26, "center", 1);
                _local3.coins = xatlib.AttachMovie(_local3, "coins", {
                    x:xatlib.NX(340),
                    y:xatlib.NY(280),
                    scaleX:xatlib.SX(),
                    scaleY:xatlib.SY()
                });
                xatlib.createTextNoWrap(_local3.coins, 30, -10, 130, 50, (todo.Users[xatlib.FindUser(userid)].coins + " xats"), 0x202020, 0, 100, 0, 26, "center", 1);
            };
            var _local12:* = undefined;
            if (todo.w_userno == userid){
                if (network.YC){
                    _local15 = (xatlib.xInt(todo.w_d1) - network.YC);
                    if (_local15 < 0){
                        _local15 = 0;
                    };
                    _local15 = xatlib.xInt(((_local15 / (24 * 3600)) + 0.3));
                    if (_local15 == 0){
                        _local12 = "If you had powers they will return when you have days";
                    };
                };
            };
            if (todo.Users[_local11].debug != undefined){
                _local12 = todo.Users[_local11].debug;
            };
            if (_local12 != undefined){
                _local3.txt1 = new MovieClip();
                _local3.addChild(_local3.txt1);
                xatlib.createTextNoWrap(_local3.txt1, xatlib.NX(120), xatlib.NY(336), xatlib.NX(400), 50, _local12, 0x202020, 0, 100, 0, 26, "center", 1);
            };
        }
        public static function mcpowersbackground_close(){
            main.DialogOpen = 0;
            main.hint.HintOff();
            if (!mcpowersbackground){
                return;
            };
            mcpowersbackground.Delete();
            mcpowersbackb.removeChild(mcpowersback);
            mcpowersback = null;
            mcpowersbackground = null;
        }
        static function PowersClose(_arg1:MouseEvent=undefined){
            var _local2:*;
            if (boutin){
                _local2 = xatlib.FindUser(todo.w_userno);
                if (_local2 != -1){
                    todo.Users[_local2].n = todo.w_name;
                    todo.Users[_local2].a = todo.w_avatar;
                    todo.Users[_local2].h = todo.w_homepage;
                    todo.Users[_local2].s = ((todo.Macros)!=undefined) ? todo.Macros["status"] : undefined;
                };
                network.UpdateFriendList(todo.w_userno, true);
                todo.w_friendlist2[todo.w_userno] = undefined;
                xatlib.ReLogin();
            };
            mcpowersbackground_close();
            if (sM[0] != todo.w_Mask[0]){
                todo.w_friendlist2[todo.w_userno] = undefined;
            };
        }
        static function GetPowers(_arg1:MouseEvent=undefined){
            PowersClose();
            var _local2:* = (xconst.usedomain + "/getpowers");
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(8), _local2);
        }
        static function OnPowerCheck(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            boutin = true;
            _local2.tick.visible = !(_local2.tick.visible);
            if (todo.w_Mask[0] == undefined){
                todo.w_Mask = new Array(0, 0, 0);
            };
            var _local3:* = xatlib.xInt((_local2.Bit / 32));
            var _local4:* = (1 << (_local2.Bit % 32));
            if (_local2.tick.visible){
                todo.w_Mask[_local3] = (todo.w_Mask[_local3] & ~(_local4));
            } else {
                todo.w_Mask[_local3] = (todo.w_Mask[_local3] | _local4);
            };
            xatlib.MainSolWrite("w_Mask", todo.w_Mask);
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class sc_dr extends MovieClip {

    }
}//package 
﻿package {

    public class xconst {

        public static const sa = ":),:-),smile,M,:d,biggrin,M,;),;-),wink,M,:o,:-o,eek,M,:p,tongue,M,(h),cool,M,:@,mad,M,:s,confused,M,:$,redface,M,:(,:-(,frown,M,:'(,crying,M,|-),sleepy,M,8-),:|,:-|,rolleyes,M,(*),star,M,:-*,kiss,M,:[,:-[,vampire,M,p-),pirate,T";

        public static var f_NoSmilies:Number = 0x0800;
        public static var smia:Array;
        public static var n1 = "Baby,Booble,Bunker,Cuddle,Cutie,Doodle,Foofie,Gooble,Honey,Kissie,Lover,Lovey,Moofie,Mooglie,Moopie,Moopsie,Nookum,Poochie,Pookie,Schmoopie,Schnoogle,Schnookie,Schnookum,Smooch,Smoochie,Smoosh,Snoogle,Snoogy,Snookie,Snookum,Snuggy,Sweetie,Woogle,Woogy,Wookie,Wookum,Wuddle,Wuggy,Wunny,Bumble,Bump,Dip";
        public static var name2;
        public static var effects = {
            i:"invert",
            m:"mirror",
            y:"cycle",
            f:"fade"
        };
        public static var name1;
        public static var effectsR;
        public static var pssa:Array;
        public static var usedomain = "http://xat.com";
        public static var n2 = "Boo,Bunch,Bunny,Cake,Cakes,Cute,Darling,Dumpling,Dumplings,Face,Foof,Goo,Head,Kin,Kins,Lips,Love,Mush,Pie,Pook,Pums,Bumble,Bump,Dip";
        public static var pool1;
        public static var pool2;
        public static var pssh = new Object();
        public static var kss = "Confetti,Hearts,Champagne,Argue,Cry,Hippo,Hearts,Paint,Surprise,Magic8ball,Airplane,Parachute,Dynamite,Lips,Bomb,Fireworks,Pull,Shark,Blood,Globe,Bugs,Grumpy,Snow";
        public static var smArray:Array;
        public static var chatdomain = (xconst.usedomain + "/web_gear/chat/");
        public static var StringTable:Array;
        public static var f_Lobby:Number = 2;
        public static var kssa:Array;
        public static var kssh = new Object();
        public static var p1 = "funky,boogie,cool,groove,divine,glory,swell,nifty,crazy,freak,wacky,quirky,weird,wild,strange,style,radical,urban,wicked";
        public static var stab:String = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("Main£" + "Delete message£") + "Visitors£") + "Friends£") + "Send message£") + "Get a Chat Box£") + "Chat Groups£") + "View help£") + "Web Link£") + "More smilies£") + "Turn sound on£") + "Turn sound off£") + "Click on $1 to change your name£") + "Go to $1 Group£") + "Help£") + "Change your picture£") + "Interact with $1£") + "If not auto linked copy this to your browser:£") + "Change your name, picture and home page£") + "Sign In£") + "Private message£") + "Go to home page:£") + "Member£") + "Moderator£") + "Owner£") + "Banned£") + "Click to start chat£") + "Click to stop chat£") + "Change background, Add or change group. Add extra features.£") + "Put a Chat Box on your website£") + "To change your name or picture click on this: $1£") + "Sign Out£") + "Connecting...£") + "You haven't said anything for a while. Press Sign In to rejoin the chat.£") + "Edit Your Chat£") + "Press Sign In to start chatting. To be signed in automatically go to the profile page and select [Sign me in automatically].£") + "You have started the chat in another window. Press Sign In to restart in this window again.£") + "This is a $1 only chat, you can private chat an owner or moderator and ask to join.£") + "Enter a link, web page or search term£") + "Get Images£") + "Background:£") + "Enter Group name here -\nor select below:£") + "Chat Groups are shared chat rooms, like the lobby, but for a specific purpose. You can put them as a group tab on your chat box£") + "Create New Group£") + "Edit xat.com Chat Box£") + "OK£") + "Change Background£") + "Change Group£") + "Set any width and height. Promote your chat box. Get a Poll, Quiz and Slide Show£") + "Extra Features...£") + "Edit Your Chat Box£") + "Get Your Own Chat Box£") + "Loading images, please wait£") + "Preview Group£") + "Failed to find any images,\nplease try again.£") + "Sorry, chat edit is closed for maintenance.\nPlease try later£") + "Preview£") + "Click to use this image£") + "Profile£") + "New User...£") + "Name£") + "Picture£") + "Home Page£") + "Choose from 100s of Pictures on the web£") + "Use Your Own£") + "Sign me in automatically£") + "Cancel£") + "Go to home page:£") + "No home page£") + "Private Chat£") + "Start a private chat£") + "Private Message£") + "Send a private message£") + "Un-Friend£") + "Add as Friend£") + "Add/Remove as Friend£") + "Ignore£") + "Un-Ignore£") + "Ignore/Un-Ignore this user£") + "Kick£") + "Kick this user off as a warning.£") + "Ban£") + "Un-Ban£") + "Prevent this user from posting messages£") + "Make Member£") + "£") + "£") + "£") + "Make Moderator£") + "£") + "I have un-banned£") + "Go to friend's location:£") + "Get a Chat Box£") + "£") + "£") + "£") + "£") + "£") + "Connection Problem. You could try to start the chat again, Sorry.£") + "Please do not share your password with anyone. xat will never ask for your password.£") + "Network Problem!£") + "Report Unfair Ban£") + "Return to Chat Box£") + "Find Another Group£") + "Copy Link£") + "Link Copied to Clipboard£") + "Please go to your browser and press Ctrl-V in the address box.£") + "You are£") + "On xat£") + "Online£") + "Offline£") + "Friend£") + "Ignored£") + "Reason for Ban:£") + "Reason for Kick:£") + "Duration:£") + "Hours£") + "(0 = forever)£") + "(maximum 6)£") + "I have banned $1 forever for no reason£") + "I have banned $1 for $2 hours for no reason£") + "I have banned $1 forever. Reason: $2£") + "I have banned $1 for $2 hours. Reason: $3£") + "I have kicked $1 Reason: $2£") + "You can't kick someone without a reason.£") + "You have been Banned£") + "not added you as a friend£") + "$1 has Banned you£") + "I have made $1 a moderator£") + "on $1£") + "I have un-moderated $1£") + "Get£") + "I have made $1 a member£") + "I have un-membered $1£") + "Main Owner£") + "Make Guest£") + "Make Owner£") + "I have made $1 an owner£") + "I have made $1 a guest£") + "Get Stuff£") + "View xatspace£") + "Invite all your IM friends to this chat!£") + "Add IM friends. Start IM version of the chat.£") + "On App£") + "Start IM£") + "Start IM version of the chat£") + "Please sign into IM first£") + "$1 friends invited to chat£") + "Marry/Best Friend£") + "Transfer£") + "Divorce£") + "Give away xats and days£") + "Married to£") + "Best friends with£") + "Register...£") + "Register, Login, Logout etc.£") + "On MSN£") + "On AIM£") + "subscriber£") + "registered£") + "BFF£") + "married£") + "Transfer of $1 xats and $2 days\nfrom $3 to $4 complete\n£") + "£") + "User not found£") + "Bad password£") + "User not confirmed registration email£") + "Not enough xats£") + "You have to have a partner to get divorced!£") + "You are already have a partner!£") + "Partner not registered£") + "Partner already has a partner!£") + "Not enough days!£") + "Sorry: Can't transfer to free xats user£") + "System problem. Please try later.£") + "Error£") + "subscribers£") + "registered users£") + "members£") + "Turn radio off£") + "Turn radio on£") + "Enter message, your password and enter the amount to transfer.£") + "Enter message, your password and click your choice.£") + "Message£") + "Password£") + "Kiss£") + "Marry/BFF£") + "xats phishing protection: Transfer held for $1 daysÂ£") + "Gagged£") + "Powers£") + "Add Effects£") + "Add Special Effects to your Avatar (days required)£") + "Protect Deactivated!£") + "Protect Activated! - for the next $1 minutes new guests wont be able to talk for $2 minutes.£") + "I have booted $1 to $2. Reason: $3£") + "sinbin£") + "I have sinbinned $1£") + "Gag£") + "Mute£") + "I have $1 $2 for $3 hours for no reason£") + "I have $1 $2 for $3 hours. Reason: $4£") + "Muted£") + "Transfer to: $1£") + "Subscriber for:£") + "$1 days£") + "xats£") + "Get xats£") + "Click to buy£") + "days£") + "Marry:£") + "Best Friends Forever:£") + "Please wait...£") + "Get $1£") + "Make a Group£") + "WARNING! Do not share this link!£") + "You have been automatically logged out. Please login again at xat.com/login£") + "Open Live Panel£") + "Live Mode: Send questions and comments by typing here£") + "Invite all MSN/AIM friends£") + "Add MSN/AIM friends£") + "Hide inappropriate words£") + "Get Married£") + "Get Divorced£") + "Give to $1£") + "Send a kiss£") + "Updated£") + "Safe Trade£") + "Offer£") + "Done£") + "Accept trade£") + "Trade complete£") + "Failed£") + "Confirm trade£") + "WARNING: Trade may be unfair! Continue?£") + "xats reserve limit exceeded.£") + "(Reduce trade value by $1 xats)£") + "Banished£") + "Group Power£") + "Assign or Unassign $1 to this chat group.£") + "$1 unassigned ok£") + "$1 assigned ok£") + "$1 unassigned fail (you hadnt assigned one)£") + "$1 assigned fail (you dont have any free ones)£") + "Groups Powers that are assigned to groups cannot be traded");
        public static var badwords;
        public static var f_Group:Number = 64;
        public static var p2 = "town,zone,club,city,time,community,center,place,central,nation,state,district,jungle,land,realm,tribe,monkeys,junction,show,point";
        public static var f_MembersOnly2 = 0x100000;
        public static var smi;
        public static var pss = ((("powers" + ",allpowers,topman,subhide,mod8,zoom,nofollow,invert,mirror,noaudies,reghide,nopc,tempmod,hat,red,green,blue,light,heart,shuffle,animate,square,nameglow,cycle,hexagon,clear,boot,octogram,show,superkick,invisible,pink,31") + ",guestself,sinbin,diamond,purple,ttth,hands,hairm,hairf,fade,gag,costumes,six,dood,angel,mute,radio,fruit,sport,num,hush,halloween,anime,status,thanksgiving,snowy,christmas,count,stick,dx,tempmem,valentine,63") + ",blueman,party,irish,flashrank,easter,nopm,banish,circus,gkaoani,military,gline,bump,gkaliens,scifi,supporter,tempown,80,tickle,82,silly,84,flag,86,independence,88,89,90,91,92,93,94");
        public static var f_NoList = 0x0200;
        public static var bw = "cunt,fuck,wanker,nigger,bastard,prick,bollocks,asshole,paki,cyber,blowjob,blow job,clit,cock,wank,twat,vagina,pussy,whore,porn,penis,sperm,spunk,ejaculat,bitch";
        public static var tsmi = "";
        public static var f_Live = 0x200000;
        public static var colorc = {
            r:1,
            g:1,
            b:1
        };
        public static var Glitters = {
            test1:1,
            test2:2,
            bounce:2,
            led:1,
            beams:1,
            blood:1,
            equ:1,
            glitter:2,
            lips:2,
            up:2,
            down:2,
            walk:2,
            snow:2,
            xmas:1,
            snowy:1
        };
        public static var backsR;
        public static var f_DefNoSound = 131072;
        public static var topsh = {
            noface:40,
            loser:37,
            rockon:37,
            palms:37,
            thumbsup:37,
            thumbsdown:37,
            flip:37,
            shh:37,
            bye:37,
            hug:37,
            clap:37,
            backoff:37,
            hehe:37,
            hmm:37,
            crazy:37,
            ono:37,
            hairm2:38,
            hairm3:38,
            emo:38,
            nrd:38,
            punk:38,
            hairf2:39,
            hairf3:39,
            hairf4:39,
            g1:39,
            goth:39,
            ninja:42,
            cb:42,
            police:42,
            nurse:42,
            jester:42,
            sphinx:42,
            dhat:42,
            crown:42,
            partyhat:42,
            facemask:42,
            sherlock:42,
            prop:42,
            grad:42,
            dunce:42,
            straw:42,
            ribbon:42,
            halo:45,
            cloud:45,
            pray:45,
            apple:48,
            lemon:48,
            pear:48,
            orange:48,
            plum:48,
            banana:48,
            shirt:49,
            soccer:49,
            football:49,
            shirts:49,
            ball:49,
            bb:49,
            foam:49,
            weight:49,
            trophy:49,
            helmet:49,
            cupw:49,
            pkn:52,
            wh:52,
            frk:52,
            mmy:52,
            cdn:52,
            grim:52,
            tomb:52,
            bat:52,
            ghost:52,
            hypno:53,
            dizzy:53,
            rage:53,
            headband:53,
            fan:53,
            comeon:53,
            grin:53,
            grump:53,
            tear:53,
            awe:53,
            doh:53,
            pouty:53,
            maniac:53,
            squint:53,
            ahhh:53,
            quiver:53,
            haira1:53,
            haira2:53,
            haira3:53,
            haira4:53,
            haira5:53,
            astro:53,
            haira6:53,
            haira7:53,
            haira8:53,
            haira9:53,
            haira10:53,
            pilgrimm:55,
            pilgrimf:55,
            indian:55,
            indian2:55,
            indian3:55,
            chef:55,
            dining:55,
            feast:55,
            eatleg:55,
            snows:56,
            beard:57,
            bell:57,
            cane:57,
            ches:57,
            elf:57,
            give:57,
            pole:57,
            sack:57,
            sball:57,
            scarf:57,
            sdeer:57,
            sfeet:57,
            shiver:57,
            sledge:57,
            slist:57,
            smound:57,
            spull:57,
            stock:57,
            tree:57,
            wreath:57,
            xb1:57,
            xb4:57,
            skiss:57,
            bulb:57,
            sgift:57,
            beat:62,
            bheart:62,
            cupid:62,
            card:62,
            hug2:62,
            hug3:62,
            ilu:62,
            lhand:62,
            ring:62,
            rose:62,
            rose2:62,
            pce:31,
            cd:31,
            sleep:31,
            fs:31,
            balloon:65,
            bride:65,
            cake:65,
            phat:65,
            clink:65,
            dance:65,
            dance2:65,
            dance3:65,
            groom:65,
            photo:65,
            popper:65,
            toast:65,
            clover2:66,
            drink:66,
            igirl:66,
            iman:66,
            pot:66,
            rainbow:66,
            shi:66,
            tap:66,
            basket:68,
            bunny:68,
            bunny2:68,
            chick:68,
            egg2:68,
            eggb:68,
            paintegg:68,
            kbiggrin:72,
            kclap:72,
            kconfused:72,
            kcool:72,
            kcrying:72,
            kdizzy:72,
            keek:72,
            keyerub:72,
            kfit:72,
            kfrown:72,
            kglare:72,
            khehe:72,
            khello:72,
            khug:72,
            kkiss:72,
            klove:72,
            kmad:72,
            kmischief:72,
            knod:72,
            krant:72,
            kredface:72,
            ksad:72,
            ksleepy:72,
            ksmile:72,
            ksmirk:72,
            kstraight:72,
            kstruggle:72,
            ktongue:72,
            kun:72,
            kwink:72,
            acrobat:71,
            balloonart:71,
            cannon:71,
            clown:71,
            eleride:71,
            fireblow:71,
            firewand:71,
            highwire:71,
            uniwire:71,
            juggler:71,
            lion:71,
            splat:71,
            tamer:71,
            uni:71,
            unirope:71,
            wheel:71,
            camo:73,
            coastguard:73,
            drillserg:73,
            gasmask:73,
            m1h:73,
            marine:73,
            pilot:73,
            sailor:73,
            sailor2:73,
            salute:73,
            smoke:73,
            kachat:76,
            kacrazy:76,
            kafang:76,
            kafill:76,
            kagab:76,
            kagrin:76,
            kagsp:76,
            kalook:76,
            kao:76,
            kaoo:76,
            kapunch:76,
            kaswt:76,
            katalk:76,
            katear:76,
            katears:76,
            kaum:76,
            kaupset:76,
            kawink:76,
            alien2:77,
            alienb:77,
            beam:77,
            blob:77,
            borg:77,
            cylon:77,
            jetpack:77,
            laser:77,
            vial:77,
            vr:77,
            ufo:77,
            cheerleader:78,
            horn:78,
            pennant:78,
            corndog:78,
            vuvu:78,
            bonk:83,
            burp:83,
            crazy2:83,
            dopey:83,
            impact:83,
            irked:83,
            itchy:83,
            mischief2:83,
            nose:83,
            raspberry:83,
            rolleye:83,
            spit:83,
            string:83,
            abe:87,
            bbq:87,
            flagwave:87,
            fwlaunch:87,
            glowstick:87,
            liberty:87,
            sparkler:87,
            starbounce:87,
            starburst:87,
            starring:87,
            tiphat:87,
            usface:87,
            usss:87
        };
        public static var backs = {
            h:"heart",
            s:"square",
            x:"hexagon",
            c:"clear",
            o:"octogram",
            d:"diamond",
            b1:"apple",
            b2:"lemon",
            b3:"pear",
            b4:"fruit",
            b5:"orange",
            b6:"plum",
            b7:"banana",
            b8:"shirt",
            b9:"soccer",
            b10:"football",
            b11:"pkn",
            b12:"tomb",
            b13:"snowy",
            b14:"tree",
            b15:"stock",
            b16:"bulb",
            b17:"balloon",
            b18:"eggb",
            b19:"camo",
            b20:"blob",
            b21:"alienb",
            b22:"gkaoani",
            b23:"gkaliens",
            b24:"independence",
            b25:"usface"
        };
        public static var smih = new Object();
        public static var f_MembersOnly = 128;

        public static function xconstInit(){
            var _local1:*;
            var _local2:*;
            var _local3:*;
            var _local4:*;
            StringTable = stab.split("£");
            name1 = n1.split(",");
            name2 = n2.split(",");
            pool1 = p1.split(",");
            pool2 = p2.split(",");
            badwords = bw.split(",");
            if (global.mk != undefined){
                kss = (kss + global.mk);
            };
            kssa = kss.split(",");
            _local1 = 0;
            while (_local1 < kssa.length) {
                kssh[kssa[_local1]] = true;
                _local1++;
            };
            backsR = ReverseObj(backs);
            effectsR = ReverseObj(effects);
            colorc["-"] = 1;
            colorc["+"] = 1;
            topsh["6"] = 43;
            topsh["3d"] = 42;
            for (_local2 in global.mt) {
                topsh[_local2] = global.mt[_local2];
            };
            pssa = pss.split(",");
            for (_local2 in global.mp) {
                pssa[(xatlib.xInt(_local2) + 1)] = global.mp[_local2];
            };
            _local1 = 0;
            while (_local1 < pssa.length) {
                pssh[pssa[_local1]] = ((_local1 > 1)) ? (_local1 - 1) : (_local1 - 2);
                _local1++;
            };
            smi = "a,sry,crs,un,d,scn,nod,gagged,nme,swt,roll,rofl,chkl,love,blk,xp,eyes,smirk,ill,dead,hello,yum,think,mischief,zip,puke,yawn,swear,cry2,what,omg,o_o,goo,smirk2,beye,wary,shock,xd,cyc,wt,chew,contempt,fedup,horror,look,spin,tipsy,twitch,shifty,ashamed,pty";
            for (_local3 in topsh) {
                smi = (smi + ("," + _local3));
            };
            if (global.ms != undefined){
                smi = (smi + global.ms);
            };
            smi = (smi + ",x,chest,gst,alien,bby,bot,tox,8ball,eye,kirb,pm,pmg,inv,inv2,inv3,sonic,shadow,mario,luigi,mushroom,yoshi,countb,ness,smashball,mephiles,tri,lucario,nights,arbiter,link,mewtwo,xj9,hk,lolwut,kermit,beaker,beast,dv,homer,3tomoe,mangekyou,pikachu,pball,wwe,sm,a1,nko,x3,dog,cat,pig,mk,penguin,panda,bear,cc,ccc,cotton,pie,c,b,o,i,t,mo,so,sb,oo,p,ph,yt,dmd,bin,ush,ipod,ip,sun,rain,r,f,li,l,u,y,n,grl,boy,scb,bio,rad,pgm,mgp,ao,star,note,hex,yy,moon,rubik,cir,cdy,deer,snta,g,sman,xday,xtre,xstk,mtoe,hly,egg,ghat,clover,stickman,stickman2,stickman3,stickairguitar,stickkungfu,stickangry,stickymca,danny,turkey,ss,qbone,mc,lb,mario8,nop,okp,sad,rolling,no,jolly,mate,amy");
            smi = (smi + ((("," + kss.toLowerCase()) + ",") + pss));
            smArray = sa.split(",");
            _local1 = 0;
            while (_local1 < smArray.length) {
                if (smArray[_local1] == "M"){
                    smArray[_local1] = -1;
                };
                if (smArray[_local1] == "T"){
                    smArray[_local1] = -2;
                };
                if (smArray[_local1] < 0){
                    tsmi = (tsmi + (smArray[(_local1 - 1)] + ","));
                };
                _local1++;
            };
            smi = (tsmi + smi);
            smia = smi.split(",");
            _local1 = 0;
            while (_local1 < smia.length) {
                smih[smia[_local1]] = true;
                _local1++;
            };
            if (global.mg != undefined){
                for (_local4 in global.mg) {
                    Glitters[_local4] = global.mg[_local4];
                };
            };
        }
        public static function ReverseObj(_arg1){
            var _local3:*;
            var _local2:* = new Object();
            for (_local3 in _arg1) {
                _local2[_arg1[_local3]] = _local3;
            };
            return (_local2);
        }
        public static function ST(_arg1:Number, _arg2:String=undefined, _arg3:String=undefined, _arg4:String=undefined, _arg5:String=undefined):String{
            var _local6:String = StringTable[_arg1];
            if (_arg2 != undefined){
                _local6 = ((_local6.slice(0, _local6.indexOf("$1")) + _arg2) + _local6.slice((_local6.indexOf("$1") + 2)));
            };
            if (_arg3 != undefined){
                _local6 = ((_local6.slice(0, _local6.indexOf("$2")) + _arg3) + _local6.slice((_local6.indexOf("$2") + 2)));
            };
            if (_arg4 != undefined){
                _local6 = ((_local6.slice(0, _local6.indexOf("$3")) + _arg4) + _local6.slice((_local6.indexOf("$3") + 2)));
            };
            if (_arg5 != undefined){
                _local6 = ((_local6.slice(0, _local6.indexOf("$4")) + _arg5) + _local6.slice((_local6.indexOf("$4") + 2)));
            };
            return (_local6);
        }
        public static function CreateST(){
            var _local1:*;
            todo.LangText = todo.LangText.substr(1);
            var _local2:* = todo.LangText.indexOf(";=");
            todo.LangText = todo.LangText.substr((_local2 + 2));
            _local1 = 0;
            while (_local1 < StringTable.length) {
                StringTable[_local1] = xatlib.Replace(StringTable[_local1], ">", "");
                _local2 = todo.LangText.indexOf(";=");
                if (_local2 == -1){
                    break;
                };
                if (todo.LangText.substr(0, _local2) != ""){
                    StringTable[_local1] = todo.LangText.substr(0, _local2);
                };
                todo.LangText = todo.LangText.substr((_local2 + 2));
                StringTable[_local1] = StringTable[_local1].split("\\n").join("\n");
                _local1++;
            };
            var _local3:* = StringTable[163].split(",");
            _local1 = 0;
            while (_local1 < _local3.length) {
                if (_local3[_local1].length > 2){
                    badwords.push(_local3[_local1]);
                };
                _local1++;
            };
        }

    }
}//package 
﻿package {
    import flash.xml.*;
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.filters.*;
    import flash.geom.*;
    import flash.ui.*;

    public class xmessage extends Sprite {

        public static var SmB;
        static var useryc:Number = 0;
        static var SkipSmilies;
        public static var xPos;
        public static var McTot = 0;
        public static var useryc2 = 0;
        public static var useryc3 = 0;
        static var Ronce;
        public static var McCnt = 0;
        public static var poin = new Array();
        static var mspos = undefined;
        static var DeleteNumber:Number;
        static var yc2;
        public static var ImInit;

        public static function Smilie(_arg1, _arg2:String, _arg3:Number, _arg4:Number, _arg5, _arg6:String){
            var _local7:*;
            var _local8:*;
            var _local12:*;
            var _local13:Class;
            var _local14:*;
            var _local15:*;
            var _local16:*;
            var _local17:*;
            var _local18:*;
            var _local19:*;
            var _local20:*;
            var _local21:*;
            var _local22:*;
            var _local23:*;
            var _local9:* = xatlib.FindUser(_arg3);
            if (_local9 == -1){
                _local9 = 0;
            };
            if (_arg2.charAt(0) == "#"){
                _local7 = new Speaker();
                _local12 = _local7;
                _arg1.addChild(_local7);
                _local12.width = (_local12.height = 19);
                _local12.gotoAndStop(1);
                _local12.SoundIsOff.visible = false;
                _local8 = _arg2;
                _local7.addEventListener(MouseEvent.MOUSE_DOWN, DoSound);
                _local7.Snd = _arg2;
            };
            var _local10:* = 0;
            while (_local10 < xconst.smArray.length) {
                if (xconst.smArray[_local10] == _arg2){
                    while (!((xconst.smArray[_local10] < 0))) {
                        ++_local10;
                        if (_local10 >= xconst.smArray.length){
                            break;
                        };
                    };
                    _local8 = _arg2.toUpperCase();
                    if (xconst.smArray[_local10] < -1){
                        _arg2 = (("(" + xconst.smArray[(_local10 - 1)]) + ")");
                        break;
                    };
                    _local13 = (getDefinitionByName(xconst.smArray[(_local10 - 1)]) as Class);
                    _local7 = new (_local13);
                    _arg1.addChild(_local7);
                    _local7.UserNo = _arg3;
                    break;
                };
                while (!((xconst.smArray[_local10] < 0))) {
                    ++_local10;
                    if (_local10 >= xconst.smArray.length){
                        break;
                    };
                };
                _local10++;
            };
            if ((((((_local7 == undefined)) && ((_arg2.substr(0, 1) == "(")))) && ((_arg2.substr((_arg2.length - 1), 1) == ")")))){
                _local14 = new Array();
                _local15 = _arg2.substr(1, (_arg2.length - 2));
                _local16 = (_local15.charAt(0) == ">");
                if (_local16){
                    _local15 = xatlib.xInt(_local15.substr(1));
                } else {
                    if (xatlib.xInt(_local15) >= 10000){
                        _local15 = "";
                    };
                    _local14 = _local15.split("#");
                    _local15 = _local14[0];
                    if ((((SmB == undefined)) && (!(xatlib.SmOk(_local15, todo.Users[_local9].Powers))))){
                        _local15 = -1;
                    };
                };
                if ((((((_local14[0] == "hat")) && (!((_local14[1] == undefined))))) || ((_local14[0] == "glow")))){
                    _local15 = "none";
                };
                if (((!((_local15 == -1))) || (_local16))){
                    _local7 = new MovieClip();
                    _arg1.addChild(_local7);
                    _local17 = "";
                    if (todo.Users[_local9].registered != undefined){
                        _local7.SF = 1;
                    };
                    if (todo.Users[_local9].VIP){
                        _local17 = "&r=2";
                        _local7.SF = 2;
                    };
                    _local7.UserNo = _arg3;
                    if ((((xatlib.xInt(_local15) >= 10128)) && ((xatlib.xInt(_local15) < 20000)))){
                        _local13 = (getDefinitionByName(_local15) as Class);
                        _local18 = new (_local13);
                        _local7.addChild(_local18);
                    } else {
                        PowSm(_local7, _local14, 19, todo.Users[_local9].Powers);
                        _local7.x = (_local7.x + xatlib.xInt(_local7.xx));
                        _local7.SA = _arg6;
                        if (!SmB){
                            _local7.SP = (_local7.SP | smiley.b_glow);
                        };
                        _local7.u = _arg3;
                        _local7.ns = new smiley(_local7, _local15);
                    };
                    if (!_local8){
                        _local8 = _arg2.toUpperCase();
                    };
                    if (_local16){
                        _local8 = 0;
                        if (_local15 == 10200){
                            _local8 = " ";
                        } else {
                            _local8 = xconst.ST(143);
                            _local7.xNum = _local15;
                        };
                    };
                };
            };
            if (_arg2 == "<del>"){
                _local7 = new xdelete();
                _arg1.addChild(_local7);
                _local7.y = 6;
                _local7.DeleteNumber = DeleteNumber;
                _local7.addEventListener(MouseEvent.MOUSE_DOWN, DeleteMess);
                _local8 = xconst.ST(1);
            };
            if (_arg2 == "<o>"){
                _local7 = new chatter();
                _arg1.addChild(_local7);
                _local7.HatsOff();
                _local7.addEventListener(MouseEvent.MOUSE_DOWN, profile.CreateProfile);
            };
            if (_arg2 == "<priv>"){
                _local7 = new lock();
                _arg1.addChild(_local7);
                _local7.hint = {
                    Hint:xconst.ST(20),
                    mc:_local7
                };
                _local7.addEventListener(MouseEvent.ROLL_OVER, main.hint.EasyHint);
            };
            if (_arg2 == "<i>"){
                _local7 = new HelpIcon();
                _arg1.addChild(_local7);
                _local7.ques.visible = false;
            };
            if (_arg2 == "<inf8>"){
                _local7 = new HelpIcon();
                _arg1.addChild(_local7);
                _local7.ques.visible = false;
                xatlib.McSetRGB(_local7.infob, 0x9900);
            };
            if (_arg2 == "<home>"){
                if (todo.Users[_local9].h.length > 0){
                    _local7 = new Home();
                    _arg1.addChild(_local7);
                    _local7.y = 6;
                    _local8 = (_local7.HomePage = todo.Users[_local9].h);
                    _local7.addEventListener(MouseEvent.MOUSE_DOWN, OnHomePage);
                };
            };
            if (_arg2 == "<c>"){
                _local19 = -1;
                if (todo.Users[_arg4].member){
                    _local19 = 6645247;
                    _local8 = xconst.ST(22);
                    if (todo.HasPower(_arg4, 30)){
                        _local19 = 16716947;
                    };
                    if (todo.HasPower(_arg4, 64)){
                        _local19 = 128;
                    };
                };
                if (todo.Users[_arg4].moderator){
                    _local19 = 0xFFFFFF;
                    _local8 = xconst.ST(23);
                };
                if (todo.Users[_arg4].owner){
                    _local19 = 0xFF9900;
                    _local8 = xconst.ST(24);
                };
                if (todo.Users[_arg4].mainowner){
                    _local19 = 0xFF9900;
                    _local8 = xconst.ST(134);
                };
                if (todo.Users[_arg4].Stealth){
                    _local19 = -1;
                } else {
                    if (todo.Users[_arg4].u == 42){
                        _local19 = 0;
                        _local8 = "xat staff";
                    } else {
                        if (todo.HasPower(_arg4, 35)){
                            _local19 = 0x800080;
                        };
                    };
                };
                if (_local19 >= 0){
                    _local7 = new chatter();
                    _arg1.addChild(_local7);
                    _local7.HatsOff();
                    xatlib.McSetRGB(_local7.xBack, _local19);
                    _local7.scaleX = (_local7.scaleY = 0.75);
                    _local7.y = 4;
                };
            };
            var _local11:* = _local7;
            if (((_local8) && (_local7))){
                _local7.Hint = _local8;
                if (((_local7.ns) && (_local7.ns.Clicker))){
                    _local7.mouseEnabled = false;
                    _local11 = _local7.ns.Clicker;
                    _local11.Par = _local7;
                };
                _local11.addEventListener(MouseEvent.ROLL_OVER, smc_onRollOver);
                _local11.addEventListener(MouseEvent.ROLL_OUT, smc_onRollOut);
                if (_local8.substr(0, 14) == "(RADIO#HTTP://"){
                    _local22 = _local8.split("#");
                    _local22 = _local22[1].split(")");
                    _local7.Radio = _local22[0];
                    if (((((!(Ronce)) && ((_arg5 == 2)))) && ((_arg3 == todo.w_userno)))){
                        Ronce = 1;
                        if (todo.useRadio == undefined){
                            todo.useRadio = _local7.Radio;
                            chat.mainDlg.CreateSoundIcon("Radio", 2);
                        };
                        todo.useRadio = _local7.Radio;
                    };
                };
                _local20 = xconst.pssa.length;
                _local21 = 70;
                while (_local21 < _local20) {
                    _local23 = xconst.pssa[(_local21 + 1)].toUpperCase();
                    if (_local8.substr(0, (_local23.length + 1)) == ("(" + _local23)){
                        _local7.Power = _local21;
                    };
                    _local21 = (_local21 + 2);
                };
                _local11.addEventListener(MouseEvent.MOUSE_DOWN, smc_onPress);
            };
            if ((((_arg5 & 1)) && (!((_local7 == undefined))))){
                _local7.UserNo = undefined;
            };
            if (_local11){
                _local11.buttonMode = true;
            };
            return (_local7);
        }
        public static function DeleteUserList(_arg1=false){
            var _local4:*;
            useryc = 9;
            while (1) {
                _local4 = main.uMessLst.pop();
                if (!_local4){
                    break;
                };
                if (_local4.av1 != undefined){
                    _local4.removeChild(_local4.av1);
                };
                if (_local4.parent){
                    _local4.parent.removeChild(_local4);
                };
            };
            var _local2:* = todo.Users.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (_arg1){
                    DeleteOneUserMc(_local3);
                } else {
                    if (todo.Users[_local3] == undefined){
                    } else {
                        if (todo.Users[_local3].mc == undefined){
                        } else {
                            todo.Users[_local3].mc.visible = false;
                            if (todo.Users[_local3].mc.av1 == undefined){
                            } else {
                                todo.Users[_local3].mc.av1.visible = false;
                                if (todo.Users[_local3].mc.av1.Gag){
                                    todo.Users[_local3].mc.av1.HatsOff();
                                };
                            };
                        };
                    };
                };
                _local3++;
            };
        }
        private static function AssignRel(_arg1, _arg2){
            main.box_layer.GeneralMessageH.Delete();
            var _local3:* = new XMLDocument();
            var _local4:* = _local3.createElement("ap");
            _local4.attributes.p = xatlib.xInt(_arg2.Power).toString();
            _local4.attributes.a = _arg1;
            _local3.appendChild(_local4);
            var _local5:String = xatlib.XMLOrder(_local3, new Array("p", "a"));
            network.socket.send(_local5);
        }
        static function HatUnLoaded(_arg1){
            _arg1.currentTarget.unloadAndStop(true);
        }
        static function Av_onRollOver(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            main.hint.Hint(0, 0, _local2.h, true, 0, undefined, 0, _local2);
            if (!_local2.Zm){
                return;
            };
            _local2.scaleX = 2.67;
            _local2.scaleY = 2.67;
            _local2.y = -20;
            _local2.parent.parent.setChildIndex(_local2.parent, (_local2.parent.parent.numChildren - 1));
            if (_local2.g){
                _local2.g.visible = false;
            };
            _local2.addEventListener(MouseEvent.MOUSE_MOVE, Av_tick);
        }
        public static function AddMessageToList(_arg1, _arg2:String, _arg3:Number, _arg4:Number, _arg5:Number){
            var u:* = undefined;
            var h:* = null;
            var Press:* = undefined;
            var ar:* = undefined;
            var s:* = undefined;
            var Avatar:* = _arg1;
            var UserName:* = _arg2;
            var DeleteOk:* = _arg3;
            var v:* = _arg4;
            var userid:* = _arg5;
            var M:* = todo.Message[v].t;
            u = todo.Message[v].u;
            var yinc:* = 0;
            var Avw:* = new MovieClip();
            main.mctextbackground.addChild(Avw);
            Avw.x = 5;
            if (todo.w_userno == u){
                h = xconst.ST(140);
                Press = function (){
                    main.hint.HintOff();
                    chat.mainDlg.GotoProfile(todo.w_userno);
                };
            } else {
                if (u == 0){
                    h = xconst.ST(14);
                    Press = function (){
                        main.hint.HintOff();
                        helpdialog.HelpDialog();
                    };
                } else {
                    h = xconst.ST(140);
                    Press = function (){
                        if (chat.isKeyDown(Keyboard.SHIFT)){
                            PressUserName(u);
                        } else {
                            chat.mainDlg.GotoProfile(u);
                        };
                    };
                };
            };
            var uid:* = xatlib.FindUser(u);
            var a:* = Avw;
            a.x = 40;
            var glowc:* = undefined;
            if (todo.HasPower(uid, 21)){
                ar = UserName.split("(glow");
                if (ar[1] != undefined){
                    glowc = 0xFF00;
                    ar = ar[1].split(")");
                    s = ar[0].split("#");
                    if (ar[0] != ""){
                        glowc = xatlib.DecodeColor(s[(s.length - 1)], ((todo.Users[uid].Powers[0] & (1 << 13))) ? true : false, ((todo.Users[uid].Powers[0] & (1 << 14))) ? true : false, ((todo.Users[uid].Powers[0] & (1 << 15))) ? true : false, ((todo.Users[uid].Powers[0] & (1 << 16))) ? true : false);
                    };
                };
            };
            yinc = AddMessageToMc(a, 0, UserName, 0, main.textPaneWidth, 0, u, userid, undefined, glowc, todo.Message[v].pb);
            yinc = (yinc + AddMessageToMc(a, 1, M, 0, main.textPaneWidth, yinc, u));
            if (yinc < 35){
                yinc = 35;
            };
            if (uid >= 0){
                Avw.avc = new xAvatar(Avw, Avatar, h, Press, todo.Users[uid].VIP, todo.Users[uid].aFlags, todo.Users[uid].Powers);
            } else {
                Avw.avc = new xAvatar(Avw, Avatar, h, Press);
            };
            Avw.avc.Av.x = -35;
            Avw.avc.Av.y = 5;
            Avw.avc.Av.h = h;
            Avw.avc.Av.Zm = ((todo.HasPower(uid, 4)) || (todo.HasPowerA(todo.w_Powers, 4)));
            Avw.avc.Av.addEventListener(MouseEvent.ROLL_OVER, Av_onRollOver);
            Avw.avc.Av.addEventListener(MouseEvent.ROLL_OUT, Av_onRollOut);
            Avw.avc.Av.addEventListener(MouseEvent.MOUSE_UP, Av_onRollOut);
            todo.Message[v].mc = Avw;
            todo.Message[v].mc.mch = (yinc + 4);
            yc2 = (yc2 + (yinc + 4));
        }
        public static function ClearLists(_arg1:Boolean){
            var _local4:*;
            var _local5:*;
            var _local2:* = 0;
            var _local3:* = todo.Message.length;
            _local5 = 0;
            while (_local5 < _local3) {
                if ((todo.Message[_local2].s & 2)){
                    _local2++;
                } else {
                    xmessage.DeleteOneMessageMc(_local2);
                    todo.Message.splice(_local2, 1);
                };
                _local5++;
            };
            DeleteUserList(1);
            _local4 = 0;
            while (_local4 < todo.Users.length) {
                if (((((_arg1) || (!((todo.Users[_local4].u == todo.w_userno))))) && ((xatlib.xInt(todo.Users[_local4].Location) < 128)))){
                    todo.Users.splice(_local4, 1);
                } else {
                    _local4++;
                };
            };
        }
        public static function DoSound(_arg1:MouseEvent){
            main.ProcessSounds(_arg1.currentTarget.Snd, true);
        }
        public static function DeleteOneMessageMc(_arg1){
            var _local2:* = todo.Message[_arg1].mc;
            if (!_local2){
                return;
            };
            McCnt--;
            if (((_local2.avc) && (_local2.avc.parent))){
                _local2.avc.parent.removeChild(_local2.avc);
                _local2.avc = undefined;
            };
            if (_local2.parent){
                _local2.parent.removeChild(_local2);
            };
            todo.Message[_arg1].mc = undefined;
        }
        public static function OnHomePage(_arg1:MouseEvent){
            var _local2:String = _arg1.currentTarget.HomePage;
            if (_local2.substr(0, 7).toLowerCase() != "http://"){
                _local2 = ("http://" + _local2);
            };
            _local2 = xatlib.xatlinks(_local2);
            if (chat.isKeyDown(Keyboard.SHIFT)){
                _local2 = (_local2 + "&f=1");
            };
            xatlib.UrlPopup(xconst.ST(21), _local2);
            xatlib.getURL(_local2, "_blank");
        }
        public static function smc_onPress(_arg1:MouseEvent){
            var t:* = undefined;
            var self:* = undefined;
            var Dia:* = undefined;
            var w:* = undefined;
            var h:* = undefined;
            var x:* = undefined;
            var y:* = undefined;
            var f:* = undefined;
            var d:* = undefined;
            var w1:* = undefined;
            var w2:* = undefined;
            var buth:* = undefined;
            var e:* = _arg1;
            t = e.currentTarget;
            if (t.Par){
                t = t.Par;
            };
            main.hint.HintOff();
            if (t.t){
                t.t.Press();
            };
            if (t.Radio != undefined){
                if (todo.useRadio == undefined){
                    todo.useRadio = t.Radio;
                    chat.mainDlg.CreateSoundIcon("Radio", 2);
                };
                todo.useRadio = t.Radio;
                return;
            };
            if (t.xNum){
                if ((global.xc & 0x0800)){
                    main.mcLoad.OpenByN(t.xNum);
                } else {
                    xatlib.GotoXat(t.xNum);
                };
            } else {
                if (t.UserNo){
                    PressUserName(t.UserNo);
                } else {
                    if (t.Power != undefined){
                        self = xatlib.FindUser(todo.w_userno);
                        if (todo.HasPower(self, t.Power)){
                            xatlib.GeneralMessage(xconst.ST(237), xconst.ST(238, xconst.pssa[(t.Power + 1)]), 0);
                            Dia = main.box_layer.GeneralMessageH.Dia;
                            w = Dia.DiaBack.width;
                            h = Dia.DiaBack.height;
                            x = Dia.DiaBack.x;
                            y = Dia.DiaBack.y;
                            f = 8;
                            d = int((w / ((f * 2) + 3)));
                            w1 = int(((w * f) / ((f * 2) + 3)));
                            w2 = w1;
                            buth = 22;
                            new xBut(Dia, (((x + w) - d) - w1), (((y + h) - buth) - 20), w1, buth, "UnAssign", function (_arg1){
                                AssignRel(0, t);
                            });
                            new xBut(Dia, (x + d), (((y + h) - buth) - 20), w2, buth, "Assign", function (_arg1){
                                AssignRel(1, t);
                            });
                        };
                    };
                };
            };
        }
        public static function PowSm(_arg1, _arg2, _arg3, _arg4){
            var _local7:*;
            var _local9:*;
            var _local11:*;
            var _local12:*;
            var _local13:*;
            var _local15:*;
            var _local16:*;
            var _local17:*;
            var _local18:*;
            var _local19:*;
            var _local20:*;
            if (_arg2[1] == undefined){
                return;
            };
            if (!(_arg1.SF & 2)){
                return;
            };
            var _local5:* = _arg2.length;
            var _local6:* = true;
            var _local8:* = new Object();
            var _local10:* = "";
            var _local14:* = 0;
            _arg1.PwrCrc = 0;
            if (_arg4){
                _local15 = 0;
                while (_local15 < todo.MAX_PWR_INDEX) {
                    _arg1.PwrCrc = (_arg1.PwrCrc + xatlib.xInt(_arg4[_local15]));
                    _local15++;
                };
            };
            _local15 = 1;
            while (_local15 <= _local5) {
                _local16 = undefined;
                if (_arg2[_local15] != undefined){
                    _local16 = _arg2[_local15].toLowerCase();
                };
                _local7 = xconst.effectsR[_local16];
                if (_local7 != undefined){
                    _local8[_local7] = true;
                } else {
                    _local7 = xconst.effects[_local16];
                    if (_local7 != undefined){
                        _local8[_local16] = true;
                        //unresolved if
                    } else {
                        _local7 = xconst.backsR[_local16];
                        if (_local7 != undefined){
                            _local9 = _local7;
                        } else {
                            if (((!((_local16 == undefined))) && ((_local16.length == 1)))){
                                _local7 = xconst.backs[_local16];
                            };
                            if (_local7 != undefined){
                                _local9 = _local16;
                            } else {
                                if (((((((xconst.smih[_local16]) && (!((_local16.length == 1))))) || ((_local16 == "6")))) || ((_local16 == undefined)))){
                                    for (_local18 in _local8) {
                                        _local7 = xconst.effects[_local18];
                                        if (!GotPower(_local7, _arg4)){
                                            _local8[_local18] = false;
                                        };
                                    };
                                    if (_local6){
                                        _local13 = _local8;
                                        if (GotPower(xconst.backs[_local9], _arg4)){
                                            _arg1.ST = xconst.backs[_local9];
                                        };
                                        _arg1.SC = _local12;
                                        if (_local13["f"]){
                                            _arg1.SP = 4;
                                        };
                                        if (_local13["y"]){
                                            _arg1.SC = "y";
                                        };
                                    } else {
                                        _local10 = (_local10 + ",");
                                        _local7 = 1;
                                        if (_local8["f"]){
                                            _local7 = (_local7 | 4);
                                        };
                                        _local10 = (_local10 + _local7);
                                    };
                                    if ((((_local16 == "6")) && ((_arg1.SC == undefined)))){
                                        _arg1.SC = 0xF00000;
                                    };
                                    _local12 = undefined;
                                    _local8 = new Object();
                                    _local11 = false;
                                    ++_local14;
                                    if (_local14 >= 6){
                                        break;
                                    };
                                    if (((!(todo.HasPowerA(_arg4, 0))) || (!((_local16 == "allpowers"))))){
                                        if (!xatlib.SmOk(_local16, _arg4, true)){
                                            break;
                                        };
                                    };
                                    if (!_local6){
                                        _local10 = (_local10 + ",");
                                    };
                                    _local10 = (_local10 + (_local16 + ","));
                                    _local6 = false;
                                } else {
                                    _local17 = false;
                                    if (_local16.length == 6){
                                        _local7 = parseInt(_local16, 16);
                                        _local7 = _local7.toString(16);
                                        _local7 = ("000000" + _local7);
                                        _local7 = _local7.substr(-6, 6);
                                    } else {
                                        _local7 = "";
                                    };
                                    if (_local16 == "y"){
                                        if (!todo.HasPowerA(_arg4, 22)){
                                            _local16 = "";
                                            _local7 = _local16;
                                        };
                                        _local17 = true;
                                    };
                                    if (_local7 != _local16){
                                        _local19 = _local16.length;
                                        _local20 = 0;
                                        while (_local20 < _local19) {
                                            _local7 = _local16.charAt(_local20);
                                            if ((((xconst.effects[_local7] == undefined)) && (!(xconst.colorc[_local7])))){
                                                _local17 = true;
                                                break;
                                            };
                                            _local20++;
                                        };
                                        if (!_local17){
                                            _local20 = 0;
                                            while (_local20 < _local19) {
                                                _local7 = _local16.charAt(_local20);
                                                _local8[_local7] = true;
                                                _local20++;
                                            };
                                        };
                                    };
                                    if (!_local17){
                                        _local7 = xatlib.DecodeColor(_local16, todo.HasPowerA(_arg4, 13), todo.HasPowerA(_arg4, 14), todo.HasPowerA(_arg4, 15), todo.HasPowerA(_arg4, 16));
                                        if (_local7 != undefined){
                                            _local12 = _local7;
                                            if (!_local6){
                                                if (_local11){
                                                    _local10 = (_local10 + "#");
                                                };
                                                _local11 = true;
                                                _local10 = (_local10 + _local12);
                                            };
                                        };
                                    };
                                    if (((_local17) && (!(_local6)))){
                                        if (_local11){
                                            _local10 = (_local10 + "#");
                                        };
                                        _local11 = true;
                                        _local10 = (_local10 + _local16);
                                    };
                                };
                            };
                        };
                    };
                };
                _local15++;
            };
            if (_local10 != ""){
                _arg1.SE = _local10;
            };
            if (((_local13["i"]) && ((_arg4[0] & (1 << 6))))){
                _arg1.scaleY = -1;
                _arg1.y = (_arg1.y + _arg3);
            };
            if (((_local13["m"]) && ((_arg4[0] & (1 << 7))))){
                _arg1.scaleX = -1;
                _arg1.xx = _arg3;
            };
        }
        public static function AddImLink(){
            if (!main.utabsmc.tabs[1].Main){
                return;
            };
            var _local1:* = new MovieClip();
            main.mcuserbackground.addChild(_local1);
            main.uMessLst.push(_local1);
            _local1.y = useryc;
            var _local2:* = "<l>(>10200) ";
            if (ImInit){
                _local2 = (_local2 + xconst.ST(218));
            } else {
                _local2 = (_local2 + xconst.ST(219));
            };
            useryc = (useryc + (4 + AddMessageToMc(_local1, 0, _local2, 0, 1999, 0, 3)));
        }
        public static function PressUserName(_arg1){
            if (_arg1 == undefined){
                return;
            };
            main.hint.HintOff();
            if (_arg1 == 3){
                chat.IM.ImInviteAll();
                return;
            };
            if (_arg1 == todo.w_userno){
                profile.CreateProfile();
            } else {
                if (_arg1 == 4294967295){
                } else {
                    viewprofile.CreateViewProfileDialog(_arg1);
                };
            };
        }
        public static function ChatterOnPress(_arg1:MouseEvent){
            main.hint.HintOff();
            if ((((_arg1.currentTarget.UserNo == 0)) || ((_arg1.currentTarget.UserNo == todo.w_userno)))){
                profile.CreateProfile();
            } else {
                if (_arg1.currentTarget.UserNo == 4294967295){
                } else {
                    viewprofile.CreateViewProfileDialog(_arg1.currentTarget.UserNo);
                };
            };
        }
        public static function HintUserName(_arg1:MouseEvent){
            var _local4:*;
            var _local2:* = 0;
            var _local3:* = 8;
            if (_arg1.currentTarget.id == 2){
                _local2 = 1;
                _local3 = 3;
            };
            if (todo.w_userno == _arg1.currentTarget.UserNo){
                _local4 = xconst.ST(18);
            } else {
                if (_arg1.currentTarget.UserNo == 3){
                    if (ImInit){
                        _local4 = xconst.ST(141);
                    } else {
                        _local4 = xconst.ST(142);
                    };
                } else {
                    _local4 = xconst.ST(16, xatlib.FixLI(xatlib.GetUsername(_arg1.currentTarget.UserNo, 1, 1, _arg1.currentTarget.nh)));
                };
            };
            if (_local4){
                main.hint.Hint(0, _local3, _local4, true, _local2, 0, 0, _arg1.currentTarget);
            };
        }
        static function smc_onRollOver(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            if (_local2.Par){
                _local2 = _local2.Par;
            };
            main.hint.Hint(0, 0, _local2.Hint, true, 0, undefined, 0, _local2);
        }
        public static function PoolPressed(_arg1:MouseEvent){
            if (todo.Pools[_arg1.currentTarget.w] != todo.w_pool){
                network.NetworkSetPool(todo.Pools[_arg1.currentTarget.w]);
            };
        }
        static function Av_tick(_arg1){
            if ((((_arg1.stageX > 99)) || ((_arg1.stageX < 6)))){
                Av_onRollOut(_arg1);
            };
        }
        public static function DoHotLink(_arg1:MouseEvent){
            var _local3:*;
            var _local2:* = ((chat.isKeyDown(Keyboard.SHIFT)) || (((!(((todo.FlagBits & xconst.f_NoList) == 0))) && (!((global.xc & 0x0800))))));
            if (((!(_local2)) && (_arg1.currentTarget.LocFunc))){
                _arg1.currentTarget.LocFunc(_arg1);
            };
            if (((((_local2) || (!(_arg1.currentTarget.LocFunc)))) || (!((global.xc & 0x0800))))){
                _local3 = _arg1.currentTarget.Url;
                if (((_local2) && (_arg1.currentTarget.Url2))){
                    _local3 = _arg1.currentTarget.Url2;
                };
                _local3 = xatlib.xatlinks(_local3);
                if (chat.isKeyDown(Keyboard.SHIFT)){
                    _local3 = (_local3 + "&f=1");
                };
                xatlib.UrlPopup(xconst.ST(8), _local3, xconst.ST(17));
                xatlib.getURL(_local3, "_blank");
            };
        }
        public static function AddUserToList(_arg1:Number){
            var _local8:*;
            var _local9:*;
            var _local10:*;
            var _local11:*;
            var _local12:*;
            var _local13:*;
            var _local14:*;
            var _local15:*;
            var _local16:*;
            var _local17:*;
            var _local18:*;
            var _local19:*;
            var _local20:*;
            if (_arg1 < 0){
                return;
            };
            var _local2:Number = todo.Users[_arg1].u;
            var _local3:String = todo.Users[_arg1].n;
            var _local4:* = 0;
            var _local5:* = ((((((todo.Users[_arg1].s) && (todo.HasPower(_arg1, 54)))) && ((((todo.Macros == undefined)) || ((todo.Macros["SetStatus"] == undefined)))))) && (!(todo.Users[_arg1].banned)));
            if (!_local5){
                delete todo.Users[_arg1].s;
            };
            var _local6:* = undefined;
            if (((main.utabsmc.tabs[2]) && (main.utabsmc.tabs[2].Main))){
                _local6 = "tickle";
            };
            if (((((((((((((((((main.utabsmc.tabs[0].Main) && ((xconst.f_Live & todo.FlagBits)))) && (!(todo.Users[_arg1].mainowner)))) && (!(todo.Users[_arg1].owner)))) && (!(todo.Users[_arg1].moderator)))) && (!(todo.Users[_arg1].member)))) && (!((todo.Users[_arg1].u == 4294967295))))) && (!((todo.Users[_arg1].u == todo.w_userno))))) && (!((todo.Users[_arg1].u == 0))))){
                return;
            };
            _local3 = ("<l>" + _local3);
            var _local7:* = (((useryc < ((main.uph + main.uscrollmc.Scr_position) + 16))) && ((useryc > (main.uscrollmc.Scr_position - 16))));
            if (((!(_local7)) && (!((todo.Users[_arg1].mc == undefined))))){
                DeleteOneUserMc(_arg1);
            };
            if ((((todo.Users[_arg1].mc == undefined)) && (_local7))){
                if (_local6){
                    _local8 = new xSprite();
                    new smiley(_local8, _local6);
                } else {
                    _local8 = new chatter();
                    _local8.HatsOff();
                    if ((((_local2 == todo.w_userno)) && ((todo.Users[_arg1].flag0 & 0x0400)))){
                        _local8.alpha = 0.2;
                    };
                    if ((todo.Users[_arg1].flag0 & 0x0800)){
                        _local8.Shine.visible = false;
                        _local8.xBack.visible = false;
                        _local8.MBack.visible = true;
                        _local8.Mob.visible = true;
                        _local8.IsMob = true;
                        _local12 = _local8.MBack;
                    } else {
                        _local12 = _local8.xBack;
                    };
                    _local13 = (todo.HasPower(_arg1, 30)) ? 16738740 : 0xC000;
                    if (todo.HasPower(_arg1, 64)){
                        _local13 = 128;
                    };
                    if (main.utabsmc.tabs[0].Main == true){
                        if (todo.Users[_arg1].online){
                            if (!todo.Users[_arg1].Stealth){
                                if (todo.Users[_arg1].member){
                                    _local13 = (todo.HasPower(_arg1, 30)) ? 16716947 : 6645247;
                                    if (todo.HasPower(_arg1, 64)){
                                        _local13 = 128;
                                    };
                                };
                                if (todo.Users[_arg1].moderator){
                                    _local13 = 0xFFFFFF;
                                };
                                if (((todo.Users[_arg1].owner) || (todo.Users[_arg1].mainowner))){
                                    _local13 = 0xFF9900;
                                };
                                if (todo.HasPower(_arg1, 35)){
                                    _local13 = 0x800080;
                                };
                                if (todo.Users[_arg1].u == 42){
                                    _local13 = 0;
                                };
                            };
                        } else {
                            if (((!(main.ctabsmc.TabIsPrivate())) || (!((todo.Users[_arg1].onsuper == true))))){
                                _local13 = 0xFF0000;
                            };
                        };
                        if (_local13 != 0xFF0000){
                            if (todo.Users[_arg1].ignored){
                                _local13 = 0x606060;
                            };
                            if (todo.Users[_arg1].banned){
                                _local13 = 0x964B00;
                            };
                        };
                    } else {
                        if (todo.Users[_arg1].ignored){
                            _local13 = 0x606060;
                        };
                        if (todo.Users[_arg1].onsuper != true){
                            _local13 = 0xFF0000;
                        };
                    };
                    xatlib.McSetRGB(_local12, _local13);
                };
                _local8.UserNo = _local2;
                main.mcuserbackground.addChild(_local8);
                _local8.x = 5;
                _local8.addEventListener(MouseEvent.ROLL_OVER, ChatterRollover);
                _local8.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                _local8.addEventListener(MouseEvent.MOUSE_DOWN, ChatterOnPress);
                _local8.buttonMode = true;
                _local9 = new MovieClip();
                main.mcuserbackground.addChild(_local9);
                _local9.x = _local8.x;
                todo.Users[_arg1].mc = _local9;
                todo.Users[_arg1].mc.av1 = _local8;
                _local10 = undefined;
                if (todo.HasPower(_arg1, 21)){
                    _local14 = todo.Users[_arg1].n.split("(glow");
                    if (_local14[1] != undefined){
                        _local10 = 0xFF00;
                        _local14 = _local14[1].split(")");
                        _local15 = _local14[0].split("#");
                        if (_local14[0] != ""){
                            _local10 = xatlib.DecodeColor(_local15[(_local15.length - 1)], ((todo.Users[_arg1].Powers[0] & (1 << 13))) ? true : false, ((todo.Users[_arg1].Powers[0] & (1 << 14))) ? true : false, ((todo.Users[_arg1].Powers[0] & (1 << 15))) ? true : false, ((todo.Users[_arg1].Powers[0] & (1 << 16))) ? true : false);
                        };
                    };
                };
                if ((((_local2 == todo.w_userno)) || (todo.Users[_arg1].friend))){
                    _local3 = (("<b> " + _local3) + " <b>");
                };
                _local11 = xatlib.xInt(todo.Users[_arg1].xNum);
                if (xatlib.xInt(todo.Users[_arg1].Location) >= 128){
                    _local11 = (10000 + todo.Users[_arg1].Location);
                };
                if (_local11){
                    _local3 = (((((((_local10 == undefined)) ? " " : "" + "(>") + _local11) + ((((_local11 == 10001)) && (todo.Users[_arg1].DJ))) ? "dj" : "") + ") ") + _local3);
                };
                if (((((todo.Users[_arg1].banned) && (!(todo.Users[_arg1].friend)))) || (todo.Users[_arg1].forever))){
                    if ((todo.Users[_arg1].flag0 & 0x1000)){
                        _local3 = ("<l>" + xconst.ST(236));
                    } else {
                        _local3 = ("<l>" + xconst.ST(25));
                    };
                };
                _local4 = AddMessageToMc(_local9, 2, _local3, ((0 + 17) - 5), 1999, (_local5) ? -10 : -5, _local2, undefined, undefined, _local10);
                if (((todo.HasPower(_arg1, 12)) && (todo.Users[_arg1].mc.av1.Gag))){
                    _local14 = todo.Users[_arg1].n.split("(hat");
                    if (_local14[1] != undefined){
                        _local14 = _local14[1].split(")");
                        _local16 = _local14[0].split("#");
                        _local17 = todo.Users[_arg1].mc.av1;
                        _local20 = xatlib.LoadMovie(_local17, xatlib.SmilieUrl("hat", "sm2"), HatLoaded);
                        _local20.addEventListener(Event.REMOVED_FROM_STAGE, HatUnLoaded, false, 0, true);
                        _local20.scaleX = (_local20.scaleY = 0.4);
                        _local20.x = 2;
                        _local17.HAT = (((((10 | ((todo.Users[_arg1].Powers[0] & 1) * 16)) + ";") + xatlib.DecodeColor(_local16[2])) + ";") + _local16[1]);
                    };
                };
                if (_local5){
                    _local18 = new TextField();
                    _local18.x = (4 + 12);
                    _local18.y = (16 - 10);
                    _local18.width = 200;
                    _local18.height = 20;
                    _local9.addChild(_local18);
                    main.fmts.color = 0x202020;
                    _local18.defaultTextFormat = main.fmts;
                    _local18.text = todo.Users[_arg1].s;
                };
            };
            if (((!((todo.Users[_arg1].mc == undefined))) && (!((todo.Users[_arg1].mc.av1 == undefined))))){
                if (todo.Users[_arg1].mc.av1.Gag){
                    todo.Users[_arg1].mc.av1.Gag.visible = (todo.Users[_arg1].gagged == true);
                    todo.Users[_arg1].mc.av1.sinbin.visible = ((todo.Users[_arg1].flag0 & 0x0200)) ? true : false;
                };
                todo.Users[_arg1].mc.visible = true;
                todo.Users[_arg1].mc.av1.visible = true;
                _local19 = (useryc + 5);
                if (_local5){
                    _local19 = (_local19 + 6);
                };
                todo.Users[_arg1].mc.av1.y = _local19;
                todo.Users[_arg1].mc.y = (_local19 + 1);
                if ((((todo.Users[_arg1].M_St & 128)) && (todo.Users[_arg1].mc.av1.Gag))){
                    todo.Users[_arg1].M_St = (todo.Users[_arg1].M_St & ~(128));
                    _local20 = todo.Users[_arg1].mc.av1;
                    _local20.BFF2.visible = false;
                    _local20.Married2.visible = false;
                    if ((todo.Users[_arg1].M_St & 4)){
                        _local20 = _local20.BFF2;
                    } else {
                        if ((todo.Users[_arg1].M_St & 2)){
                            _local20 = _local20.Married2;
                        } else {
                            if ((todo.Users[_arg1].M_St & 1)){
                                _local20 = _local20.Star;
                            };
                        };
                    };
                    _local20.visible = true;
                    if ((todo.Users[_arg1].M_St & 8)){
                        xatlib.McSetRGB(_local20, 0);
                    };
                    if ((todo.Users[_arg1].M_St & 16)){
                        todo.Users[_arg1].mc.av1.BFF.visible = true;
                        xatlib.McSetRGB(todo.Users[_arg1].mc.av1.BFF.plus3, 0x800000);
                        xatlib.McSetRGB(todo.Users[_arg1].mc.av1.BFF.plus2, 0xFF0000);
                    };
                    if ((todo.Users[_arg1].M_St & 32)){
                        todo.Users[_arg1].mc.av1.Married.visible = true;
                    };
                };
            };
            if (_local4 < 16){
                _local4 = 16;
            };
            if (_local5){
                _local4 = 22;
            };
            useryc = (useryc + (_local4 + 4));
        }
        static function Av_onRollOut(_arg1){
            var _local2:* = _arg1.currentTarget;
            _local2.scaleX = 1;
            _local2.scaleY = 1;
            _local2.y = 5;
            if (_local2.g){
                _local2.g.visible = true;
            };
            main.hint.HintOff();
            _local2.removeEventListener(MouseEvent.MOUSE_MOVE, Av_tick);
        }
        static function smc_onRollOut(_arg1:MouseEvent){
            main.hint.HintOff();
        }
        public static function UpdateMessages(_arg1:Boolean, _arg2:Boolean){
            var Avatar:* = undefined;
            var UserName:* = null;
            var DeleteOk:* = NaN;
            var NoOfM:* = NaN;
            var p:* = null;
            var MessageLength:* = undefined;
            var TabIsPrivate:* = undefined;
            var TabUser:* = undefined;
            var v:* = undefined;
            var MaxInView:* = undefined;
            var t:* = undefined;
            var Bot:* = undefined;
            var BotMargF:* = undefined;
            var Bot2:* = undefined;
            var Cnt:* = undefined;
            var HitTop:* = undefined;
            var n:* = undefined;
            var M:* = undefined;
            var V:* = undefined;
            var v2:* = undefined;
            var userid:* = undefined;
            var s:* = undefined;
            var yinc:* = undefined;
            var yc3:* = undefined;
            var All:* = _arg1;
            var Scrolling:* = _arg2;
            try {
                if (Scrolling == undefined){
                    Scrolling = false;
                };
                NoOfM = 0;
                p = new Array();
                MessageLength = todo.Message.length;
                TabIsPrivate = main.ctabsmc.TabIsPrivate();
                TabUser = main.ctabsmc.TabUser();
                v = 0;
                while (v < MessageLength) {
                    M = todo.Message[v];
                    if (Scrolling == false){
                        M.New = false;
                    };
                    if ((((((((M.New == false)) && (!((M.ignored == true))))) && (M.t))) && ((M.t.length > 0)))){
                        if (TabIsPrivate){
                            if ((((((((TabUser == M.u)) || ((todo.w_userno == M.u)))) && ((M.d == TabUser)))) || ((M.u == 0)))){
                                NoOfM = (NoOfM + 1);
                                p.push(v);
                            };
                        } else {
                            if (xatlib.xInt((M.s & 2)) == 0){
                                NoOfM = (NoOfM + 1);
                                p.push(v);
                            };
                        };
                    };
                    if (M.mc){
                        M.mc.visible = false;
                    };
                    v = (v + 1);
                };
                MaxInView = (Math.round((todo.tph / 35)) - 2);
                if (MaxInView < 0){
                    MaxInView = 0;
                };
                t = ((NoOfM - MaxInView) * 100);
                if (t <= 0){
                    t = 100;
                };
                main.mscrollmc.Scr_size = t;
                if (((todo.ScrollDown) && ((Scrolling == false)))){
                    main.mscrollmc.position = main.mscrollmc.Scr_size;
                    todo.ScrollDown = false;
                };
                if ((((mspos == undefined)) || (!(Scrolling)))){
                    mspos = main.mscrollmc.Scr_position;
                    todo.DoUpdateMessages = false;
                } else {
                    mspos = ((mspos + main.mscrollmc.Scr_position) / 2);
                    V = Math.abs((mspos - main.mscrollmc.Scr_position));
                    if (V < 10){
                        mspos = main.mscrollmc.Scr_position;
                        todo.DoUpdateMessages = false;
                    };
                    SkipSmilies = Scrolling;
                };
                Bot = ((MaxInView - 0.001) + ((NoOfM - MaxInView) * (mspos / main.mscrollmc.Scr_size)));
                if (Bot < 0){
                    Bot = 0;
                };
                if (Bot >= (NoOfM - 0.001)){
                    Bot = (NoOfM - 0.001);
                };
                BotMargF = (Bot - int(Bot));
                Bot2 = int(Bot);
                v = Bot2;
                yc2 = 0;
                Cnt = NoOfM;
                HitTop = 99;
                while (Cnt > 0) {
                    Cnt = (Cnt - 1);
                    v2 = v;
                    v = (v - 1);
                    if (v2 < 0){
                        v2 = (int(Bot) - v2);
                    };
                    DeleteNumber = xatlib.xInt(todo.Message[p[v2]].n);
                    userid = xatlib.FindUser(todo.Message[p[v2]].u);
                    if (userid == -1){
                        userid = 0;
                    };
                    if (todo.Message[p[v2]].u == 0){
                        Avatar = -1;
                        UserName = xconst.ST(14);
                        DeleteOk = 0;
                    } else {
                        Avatar = xatlib.CleanAv(todo.Users[userid].a);
                        UserName = todo.Users[userid].n;
                        if (UserName.substr(0, 1) == "$"){
                            UserName = UserName.substr(1);
                        };
                        s = "";
                        if (todo.Users[userid].u != 0){
                            s = "<l>";
                        };
                        UserName = (((s + "<c> ") + s) + UserName);
                        if (((todo.Users[userid].h) && ((todo.Users[userid].h.length > 6)))){
                            UserName = (UserName + " <home>");
                        };
                        if (((((((((todo.w_owner) || (todo.w_moderator))) && (!((todo.Message[p[v2]].n == 0))))) && (!((todo.Message[p[v2]].n == 1))))) && (!(todo.Message[p[v2]].p)))){
                            UserName = (UserName + " <del>");
                        };
                        DeleteOk = 0;
                    };
                    if (v < -1){
                        Bot2 = (Bot2 + 1);
                    };
                    if (todo.Message[p[v2]].mc != undefined){
                        yinc = todo.Message[p[v2]].mc.mch;
                        yc2 = (yc2 + yinc);
                    } else {
                        AddMessageToList(Avatar, UserName, DeleteOk, p[v2], userid);
                        todo.Message[p[v2]].mc.visible = false;
                    };
                    if ((yc2 - (todo.Message[p[Bot2]].mc.mch * (1 - BotMargF))) > todo.tph){
                        HitTop = 0;
                        break;
                    };
                };
                if (yc2 >= todo.tph){
                    yc3 = (todo.tph - ((BotMargF - 1) * todo.Message[p[int(Bot)]].mc.mch));
                    yc3 = (yc3 - 4);
                    n = int(Bot);
                    while (n >= 0) {
                        M = todo.Message[p[n]];
                        if (M.mc){
                            if (M.mc.mch != undefined){
                                yc3 = (yc3 - M.mc.mch);
                            };
                            if ((((M.mc.mch == undefined)) || ((yc3 < -(M.mc.mch))))){
                                if (p[n] < (MessageLength - MaxInView)){
                                    DeleteOneMessageMc(p[n]);
                                };
                                break;
                            };
                            M.mc.y = yc3;
                            M.mc.visible = true;
                        };
                        n = (n - 1);
                    };
                } else {
                    yc3 = 0;
                    n = 0;
                    while (n < NoOfM) {
                        if ((((yc3 > todo.tph)) || ((yc3 == undefined)))){
                            break;
                        };
                        todo.Message[p[n]].mc.y = yc3;
                        todo.Message[p[n]].mc.visible = true;
                        yc3 = (yc3 + todo.Message[p[n]].mc.mch);
                        n = (n + 1);
                    };
                };
                n = 0;
                while (n < MessageLength) {
                    if (((!((todo.Message[n].mc == undefined))) && ((todo.Message[n].mc.visible == false)))){
                        DeleteOneMessageMc(n);
                    };
                    n = (n + 1);
                };
                SkipSmilies = false;
            } catch(e:Error) {
            };
        }
        public static function AddPoolToList(_arg1:Number){
            if (main.utabsmc.tabs[0].Main == false){
                return;
            };
            var _local2:* = xatlib.xInt(((xatlib.xInt(todo.w_useroom) + xatlib.xInt(todo.Pools[_arg1])) % xconst.pool1.length));
            var _local3:* = xatlib.xInt((xatlib.xInt(todo.w_useroom) - xatlib.xInt(todo.Pools[_arg1])));
            if (_local3 < 0){
                _local3 = (2147483647 - _local3);
            };
            _local3 = (_local3 % xconst.pool2.length);
            var _local4:* = new xBut(main.mcuserbackground, 4, (useryc + 3), (main.upw - xatlib.NX(24)), 20, ((xconst.pool1[_local2] + " ") + xconst.pool2[_local3]), PoolPressed, 0, 5);
            _local4.But.w = _arg1;
            main.uMessLst.push(_local4);
            useryc = (useryc + 23);
        }
        public static function AddMessageToMc(_arg1, _arg2:Number, _arg3:String, _arg4:Number, _arg5:Number, _arg6:Number, _arg7:Number=NaN, _arg8=undefined, _arg9=undefined, _arg10=undefined, _arg11=undefined):Number{
            var SwearWord:* = undefined;
            var mcFmt:* = null;
            var mc:* = null;
            var Chatter:* = null;
            var LocData:* = undefined;
            var LocFunc:* = undefined;
            var HotLink:* = undefined;
            var HotLink2:* = undefined;
            var s:* = null;
            var Sm:* = undefined;
            var ts:* = undefined;
            var mcTxt:* = undefined;
            var t:* = undefined;
            var WordWidth:* = undefined;
            var hm:* = undefined;
            var HomeDel:* = undefined;
            var f:* = NaN;
            var mc2:* = undefined;
            var mcTxt2:* = undefined;
            var schrs:* = undefined;
            var n2:* = undefined;
            var m2:* = undefined;
            var mcin:* = _arg1;
            var id:* = _arg2;
            var str:* = _arg3;
            var Left:* = _arg4;
            var Right:* = _arg5;
            var yOfst:* = _arg6;
            var UserNo:Number = _arg7;
            var userid:* = _arg8;
            var color:* = _arg9;
            var glowc:* = _arg10;
            var NameHint:* = _arg11;
            if (color == undefined){
                color = 0;
            };
            var Width:* = (Right - Left);
            xPos = Left;
            var yPos:* = 0;
            var LineH:* = 16;
            var LinkNextWord:* = false;
            var sLinkNextWord:* = false;
            mcFmt = new TextFormat();
            mcFmt.align = "left";
            mcFmt.bold = !(((id & 1) == 0));
            if (id == 4){
                id = 1;
            };
            if ((((id == 1)) && ((UserNo == 0)))){
                mcFmt.italic = true;
            };
            mcFmt.font = "_sans";
            var mcFmtSize:* = 14;
            mcFmt.size = mcFmtSize;
            var Space:* = int((mcFmtSize * 0.4));
            var SCnt:* = 0;
            var Words:* = new Array();
            Words = str.split(" ");
            if (xconst.ST(85) == "RTL"){
                Words.reverse();
            };
            mcin.mouseEnabled = false;
            if (glowc != undefined){
                mcin.glowa = new Array();
                mcin.glowf = new GlowFilter(glowc, 0.7, 3, 3, 3, 3, false, false);
                mcin.glowa.push(mcin.glowf);
            };
            var n:* = 0;
            for (;n < Words.length;(n = (n + 1))) {
                if ((((Right == 1999)) && ((xPos > (main.upw - 20))))){
                    break;
                };
                LocData = undefined;
                LocFunc = undefined;
                HotLink = undefined;
                HotLink2 = undefined;
                mcFmt.color = color;
                mc = mcin;
                mcFmt.url = "";
                if (!(id & 2)){
                    mcFmt.underline = false;
                };
                if (Words[n].substr(0, 3) == "<l>"){
                    sLinkNextWord = true;
                    Words[n] = Words[n].substr(3);
                };
                LinkNextWord = sLinkNextWord;
                SwearWord = false;
                if (Words[n].substr(0, 3) == "<s>"){
                    SwearWord = true;
                    Words[n] = Words[n].substr(3);
                };
                s = Words[n].toLowerCase();
                if ((((s == "<b>")) || ((s == "</b>")))){
                    mcFmt.bold = true;
                } else {
                    if ((((xPos < Right)) || (!((Words[n].substr(0, 1) == "("))))){
                        Sm = Smilie(mc, s, UserNo, userid, id, Words[n]);
                    };
                    if (s.charAt(0) == "_"){
                        Words[n] = Words[n].substr(1);
                    };
                    if (Sm != undefined){
                        SCnt = (SCnt + 1);
                        Chatter = undefined;
                        var _local13 = (String(Sm).indexOf("home") >= 0);
                        hm = _local13;
                        HomeDel = ((_local13) || ((String(Sm).indexOf("delete") >= 0)));
                        if (((((!(HomeDel)) && ((SCnt > 10)))) && ((UserNo > 101)))){
                            mc.removeChild(Sm);
                            continue;
                        };
                        Sm.x = (xPos + xatlib.xInt(Sm.x));
                        Sm.y = (Sm.y + ((yPos + yOfst) + 3));
                        xPos = (xPos + 20);
                        if (HomeDel){
                            xPos = (xPos - 5);
                            if (xPos > (Right - 10)){
                                Sm.x = (Sm.x - (xPos - Right));
                                if (hm){
                                    Sm.x = (Sm.x - 14);
                                };
                            };
                        };
                        if (String(Sm).indexOf("chatter") >= 0){
                            Chatter = Sm;
                            xPos = (xPos - 8);
                        };
                        if (String(Sm).indexOf("lock") >= 0){
                            xPos = (xPos - 10);
                            Sm.y = (Sm.y + 3);
                        };
                        if (String(Sm).indexOf("man") >= 0){
                            xPos = (xPos - 12);
                        };
                    } else {
                        if (s == "<c>"){
                        } else {
                            ts = xatlib.WordIsLink(Words[n]);
                            if (ts){
                                if ((((((((((((((s.indexOf("youtube.com") >= 0)) || ((s.indexOf("photobucket.com") >= 0)))) || ((s.indexOf("veoh.com") >= 0)))) || ((s.indexOf("vids.myspace.com") >= 0)))) || ((s.indexOf("mogulus.com") >= 0)))) || ((s.indexOf("video.google.") >= 0)))) || ((s.indexOf("live.yahoo.com") >= 0)))){
                                    LocData = xatlib.urlencode(ts.substr(7));
                                    HotLink = ((xatlib.PageUrl(4) + "&m=") + LocData);
                                    LocFunc = function (_arg1){
                                        return (main.mcLoad.OpenMedia(_arg1.currentTarget.LocData));
                                    };
                                    HotLink2 = ts;
                                } else {
                                    s = ts;
                                    HotLink = 1;
                                };
                            };
                            if (s == "doodle"){
                                HotLink = xatlib.PageUrl(2);
                                LocFunc = function (_arg1){
                                    return (main.mcLoad.OpenDoodle());
                                };
                            };
                            if (s == "trade"){
                                HotLink = xatlib.PageUrl(30008);
                                LocFunc = function (_arg1){
                                    return (main.mcLoad.OpenByN(30008));
                                };
                            };
                            if (s.substr(0, 4) == "wiki"){
                                HotLink = "http://xat.com/wiki";
                            };
                            if (s.substr(0, 7) == "twitter"){
                                HotLink = "http://xat.com/twitter";
                            };
                            if (s.substr(0, 6) == "search"){
                                HotLink = "http://xat.com/search";
                            };
                            if (s.substr(0, 5) == "power"){
                                HotLink = "http://xat.com/GetPowers";
                            };
                            if (s == "myspace"){
                                HotLink = "http://myspace.com/xatcom";
                            };
                            if (s.substr(0, 4) == "smil"){
                                HotLink = xatlib.PageUrl(5);
                                LocFunc = function (_arg1){
                                    return (main.mcLoad.OpenSmilies());
                                };
                            };
                            if (((!(ImInit)) && ((((((s == "msn")) || ((s == "aim")))) || ((s == "messenger")))))){
                                HotLink = xatlib.PageUrl(6);
                            };
                            if (s.substr(0, 8) == "register"){
                                HotLink = xatlib.Register_Link(1);
                                LocFunc = 2;
                            };
                            if (s == "login"){
                                HotLink = xatlib.Register_Link(0);
                                LocFunc = 2;
                            };
                            if ((((((((s == "buy")) || ((s.substr(0, 4) == "coin")))) || ((s == "xats")))) || ((s.substr(0, 5) == "subsc")))){
                                HotLink = (xatlib.Register_Link(0) + "&b=1");
                            };
                            if (LocFunc == 2){
                                LocFunc = function (_arg1){
                                    return (main.mcLoad.StartMedia(("L" + this.Url)));
                                };
                            };
                            if (s == "login"){
                                t = 0;
                                t = (t + 1);
                            };
                            if (((HotLink) && ((id & 1)))){
                                if (HotLink == 1){
                                    HotLink = s;
                                };
                                mcFmt.underline = true;
                                mc = new MovieClip();
                                mcin.addChild(mc);
                                mc.Url = HotLink;
                                mc.Url2 = HotLink2;
                                mc.LocFunc = LocFunc;
                                mc.LocData = LocData;
                                mc.useHandCursor = true;
                                mc.buttonMode = true;
                                mc.mouseChildren = false;
                                mc.addEventListener(MouseEvent.MOUSE_DOWN, DoHotLink);
                            };
                            if (LinkNextWord){
                                mc = new MovieClip();
                                mcin.addChild(mc);
                                mc.UserNo = xatlib.xInt(UserNo);
                                if (UserNo == 0){
                                    mc.UserNo = todo.w_userno;
                                };
                                mc.addEventListener(MouseEvent.MOUSE_DOWN, PressUserNameEvent);
                                mc.nh = NameHint;
                                mc.id = id;
                                mc.addEventListener(MouseEvent.ROLL_OVER, HintUserName);
                                mc.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                                mc.buttonMode = true;
                                mc.mouseChildren = false;
                                if (id != 0){
                                    LinkNextWord = false;
                                };
                            };
                            mcTxt = new TextField();
                            mcTxt.x = xPos;
                            mcTxt.y = ((yPos + yOfst) + 3);
                            mcTxt.width = Width;
                            mcTxt.height = (LineH * 1.3);
                            mcTxt.selectable = true;
                            mcTxt.defaultTextFormat = mcFmt;
                            mcTxt.text = Words[n];
                            t = mc.addChild(mcTxt);
                            if (glowc != undefined){
                                mc.filters = mcin.glowa;
                            };
                            WordWidth = mcTxt.textWidth;
                            mcTxt.width = (WordWidth + 5);
                            if ((((((((xPos > 0)) && ((WordWidth > (Width - xPos))))) && ((userid == undefined)))) && (!(((id & 2) == 2))))){
                                f = 0;
                                if (Chatter != undefined){
                                    Chatter.x = Left;
                                    Chatter.y = (Chatter.y + LineH);
                                    f = 12;
                                };
                                mcTxt.x = (Left + f);
                                mcTxt.y = (mcTxt.y + LineH);
                                yPos = (yPos + LineH);
                                xPos = (((Left + Space) + WordWidth) + f);
                            } else {
                                Chatter = undefined;
                                xPos = (xPos + (Space + WordWidth));
                            };
                            if (SwearWord){
                                mc2 = new MovieClip();
                                mcin.addChild(mc2);
                                mcTxt2 = new TextField();
                                mcTxt2.x = mcTxt.x;
                                mcTxt2.y = mcTxt.y;
                                mcTxt2.width = Width;
                                mcTxt2.height = (LineH * 1.3);
                                t = mc2.addChild(mcTxt2);
                                schrs = "!#%£!@?*";
                                m2 = 0;
                                mcTxt2.defaultTextFormat = mcFmt;
                                mcTxt2.text = "";
                                n2 = 0;
                                while (n2 < s.length) {
                                    m2 = (m2 + 1);
                                    mcTxt2.text = (mcTxt2.text + schrs.charAt(m2));
                                    if (m2 >= schrs.length){
                                        m2 = 0;
                                    };
                                    n2 = (n2 + 1);
                                };
                                mcTxt2.width = (WordWidth + 5);
                                mcTxt2.backgroundColor = 0x909090;
                                mcTxt2.background = true;
                                mc2.addEventListener(MouseEvent.MOUSE_DOWN, RemoveMe);
                            };
                        };
                    };
                };
            };
            return ((yPos + LineH));
        }
        public static function DeleteOneUserMc(_arg1:Number){
            if (_arg1 < 0){
                return;
            };
            var _local2:* = todo.Users[_arg1];
            if (!_local2){
                return;
            };
            if (!_local2.mc){
                return;
            };
            if (((_local2.mc.av1) && (_local2.mc.parent))){
                _local2.mc.parent.removeChild(_local2.mc.av1);
            };
            _local2.mc.av1 = undefined;
            if (_local2.mc.parent){
                _local2.mc.parent.removeChild(_local2.mc);
            };
            _local2.mc = undefined;
            todo.DoBuildUserList = true;
        }
        static function HatLoaded(_arg1){
            var _local2:* = _arg1.currentTarget.loader.contentLoaderInfo.content;
            _local2.Go(_local2.parent.parent.HAT);
        }
        public static function PressUserNameEvent(_arg1:MouseEvent){
            PressUserName(_arg1.currentTarget.UserNo);
        }
        public static function DeleteMess(_arg1:MouseEvent){
            main.hint.HintOff();
            var _local2:* = todo.Message.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.Message[_local3].n == _arg1.currentTarget.DeleteNumber){
                    todo.Message[_local3].ignored = true;
                };
                _local3++;
            };
            network.RemoveUsersWithNoMessages();
            network.NetworkDeleteMessage(_arg1.currentTarget.DeleteNumber);
            todo.DoUpdateMessages = true;
            todo.DoBuildUserList = true;
        }
        public static function RemoveMe(_arg1:MouseEvent){
            _arg1.currentTarget.parent.removeChild(_arg1.currentTarget);
        }
        public static function DoBride(_arg1, _arg2=0){
            if (todo.Users[_arg1].registered == undefined){
                return;
            };
            if (todo.HasPower(_arg1, 9)){
                return;
            };
            if (((todo.Users[_arg1].Bride) && (!(_arg2)))){
                if ((todo.Users[_arg1].aFlags & 1)){
                    todo.Users[_arg1].M_St = 4;
                } else {
                    todo.Users[_arg1].M_St = 2;
                };
            } else {
                todo.Users[_arg1].M_St = 1;
            };
            if (((!(todo.Users[_arg1].VIP)) || (todo.HasPower(_arg1, 2)))){
                todo.Users[_arg1].M_St = (todo.Users[_arg1].M_St | 8);
            };
            todo.Users[_arg1].M_St = (todo.Users[_arg1].M_St | 128);
        }
        public static function GotPower(_arg1, _arg2){
            return (xatlib.SmOk(_arg1, _arg2, true));
        }
        public static function ChatterRollover(_arg1:MouseEvent){
            main.hint.Hint(0, 0, xatlib.GetUserStatus(xatlib.FindUser(_arg1.currentTarget.UserNo)), true, 1, undefined, 0, _arg1.currentTarget);
        }
        public static function BuildUserList(){
            var _local7:*;
            var _local8:*;
            var _local12:*;
            var _local13:*;
            var _local14:*;
            var _local15:*;
            var _local16:*;
            var _local17:*;
            var _local18:Boolean;
            var _local19:*;
            var _local20:*;
            var _local21:*;
            var _local1:* = getTimer();
            var _local2:* = -1;
            var _local3:Boolean = ((((!(main.ctabsmc.TabIsPrivate())) && ((todo.Pools.length > 1)))) && (main.utabsmc.tabs[0].Main));
            DeleteUserList();
            var _local4:* = getTimer();
            var _local5:* = new Object();
            var _local6:* = todo.Users.length;
            poin = new Array();
            if (((main.utabsmc.tabs[0].Main) || (main.utabsmc.tabs[1].Main))){
                _local7 = 0;
                while (_local7 < _local6) {
                    _local12 = 0;
                    if (todo.Users[_local7].u == todo.w_userno){
                        _local12 = 40000;
                    };
                    if (todo.Users[_local7].online == true){
                        _local12 = (_local12 + 20000);
                    } else {
                        if ((((main.utabsmc.tabs[1].Main == true)) && ((todo.Users[_local7].onsuper == true)))){
                            _local12 = (_local12 + 20000);
                        };
                    };
                    if (!todo.Users[_local7].banned){
                        _local12 = (_local12 + 10000);
                    };
                    if (!todo.Users[_local7].Stealth){
                        if (todo.Users[_local7].mainowner){
                            _local12 = (_local12 + 4800);
                        };
                        if (todo.Users[_local7].owner){
                            _local12 = (_local12 + 3600);
                        };
                        if (todo.Users[_local7].moderator){
                            _local12 = (_local12 + 2400);
                        };
                        if (todo.Users[_local7].member){
                            _local12 = (_local12 + 1200);
                        };
                    };
                    if (todo.Users[_local7].friend){
                        _local12 = (_local12 + 600);
                    };
                    if (todo.HasPower(_local7, 35)){
                        _local12 = (_local12 + 400);
                    } else {
                        if (todo.HasPower(_local7, 1)){
                            _local12 = (_local12 + 300);
                        };
                    };
                    if (todo.Users[_local7].registered != undefined){
                        _local14 = todo.Users[_local7].registered.length;
                        if (_local14 <= 9){
                            _local12 = (_local12 + (150 - _local14));
                        };
                    };
                    if (todo.Users[_local7].OnXat){
                        _local12 = (_local12 + 75);
                    };
                    _local13 = todo.HasPower(_local7, 9);
                    if (!_local13){
                        if (todo.Users[_local7].registered){
                            _local12 = (_local12 + 38);
                        };
                    };
                    _local12 = (_local12 + 16);
                    _local12 = (_local12 * 50000000000);
                    _local12 = (_local12 - (todo.Users[_local7].u * 2));
                    _local12 = (_local12 * 2);
                    poin.push({
                        points:_local12,
                        index:_local7
                    });
                    if (todo.Users[_local7].Bride){
                        _local5[todo.Users[_local7].u] = {
                            b:todo.Users[_local7].Bride,
                            index:(poin.length - 1)
                        };
                    };
                    _local7++;
                };
                for (_local7 in _local5) {
                    _local8 = _local5[_local7].b;
                    if (((_local5[_local8]) && ((_local7 == _local5[_local8].b)))){
                        _local15 = poin[_local5[_local7].index].points;
                        _local16 = poin[_local5[_local8].index].points;
                        if (_local15 > _local16){
                            poin[_local5[_local8].index].points = (_local15 - 1);
                        } else {
                            poin[_local5[_local7].index].points = (_local16 - 1);
                        };
                    };
                };
            } else {
                _local7 = 0;
                while (_local7 < _local6) {
                    poin.push({
                        points:todo.Users[_local7].TickCnt,
                        index:_local7
                    });
                    _local7++;
                };
            };
            poin.sortOn("points", (Array.DESCENDING | Array.NUMERIC));
            if (todo.DoBuildUserListScrollUp){
                if (main.uscrollmc.Scrolling != true){
                    main.uscrollmc.position = 0;
                    main.onUserScrollChange();
                };
            };
            var _local9:* = 0;
            if (_local3){
                _local9 = main.LookupPool(todo.w_pool);
                AddPoolToList(_local9);
            };
            AddImLink();
            useryc2 = useryc;
            var _local10:* = todo.Users.length;
            var _local11:* = 0;
            while (_local11 < _local10) {
                _local17 = poin[_local11].index;
                todo.Users[_local17].Vis = false;
                todo.Users[_local17].ignored = network.OnIgnoreList(todo.Users[_local17].u);
                if (todo.Users[_local17].u != -1){
                    _local18 = false;
                    if (main.utabsmc.tabs[1].Main){
                        _local18 = ((todo.Users[_local17].friend) || ((xatlib.xInt(todo.Users[_local17].Location) >= 128)));
                        if (todo.Users[_local17].u == todo.w_userno){
                            _local18 = false;
                        };
                    } else {
                        if (main.utabsmc.tabs[0].Main){
                            if (main.ctabsmc.TabIsPrivate()){
                                if (main.ctabsmc.TabUser() == todo.Users[_local17].u){
                                    _local18 = true;
                                };
                            } else {
                                _local18 = !((todo.Users[_local17].online == undefined));
                                _local19 = todo.Message.length;
                                if ((((todo.Users[_local17].online == false)) && ((_local19 < 40)))){
                                    _local18 = false;
                                    _local20 = 0;
                                    while (_local20 < _local19) {
                                        if ((todo.Message[_local20].u == todo.Users[_local17].u)){
                                            _local18 = true;
                                            break;
                                        };
                                        _local20++;
                                    };
                                };
                            };
                            if (todo.w_userno == todo.Users[_local17].u){
                                _local18 = true;
                            };
                        } else {
                            _local18 = todo.Users[_local17].TickCnt;
                        };
                    };
                    if (_local18){
                        todo.Users[_local17].Vis = true;
                        DoBride(_local17);
                        if ((((((_local2 >= 0)) && ((todo.Users[_local17].Bride == todo.Users[_local2].u)))) && ((todo.Users[_local2].Bride == todo.Users[_local17].u)))){
                            DoBride(_local17, 1);
                            DoBride(_local2, 1);
                            if ((todo.Users[_local17].aFlags & 1)){
                                todo.Users[_local2].M_St = (todo.Users[_local2].M_St | 16);
                            } else {
                                todo.Users[_local2].M_St = (todo.Users[_local2].M_St | 32);
                            };
                        };
                        AddUserToList(_local2);
                        _local2 = _local17;
                    };
                };
                _local11++;
            };
            AddUserToList(_local2);
            if (_local3){
                _local21 = 0;
                while (_local21 < todo.Pools.length) {
                    if (_local21 != _local9){
                        AddPoolToList(_local21);
                    };
                    _local21++;
                };
            };
            useryc3 = useryc;
        }
        public static function SmilieLoad(_arg1:Event){
            _arg1.currentTarget.del--;
            if (_arg1.currentTarget.del < 0){
                _arg1.currentTarget.ns = new smiley(_arg1.currentTarget, _arg1.currentTarget.t);
                _arg1.currentTarget.removeEventListener(Event.ENTER_FRAME, SmilieLoad);
            };
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class confused extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class vampire extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class frown extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.media.*;
    import flash.net.*;
    import flash.utils.*;

    public class tickcode extends Sprite {

        public static var BB;
        static var radio_load = undefined;
        static var channel = new Array(undefined, undefined);
        public static var GlowFlag:Boolean;
        static var fade = 6;
        static var radio_state = undefined;
        public static var effect:Array = new Array(0.2, 0.4, 0.6, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.8, 0.6, 0.4, 0.2);
        public static var boverrun = false;
        public static var crank:Array = new Array(0xC000, 6645247, 0xFFFFFF, 0xFF9900);
        public static var UserScroll:Boolean = false;
        public static var cpow:Array = new Array(0x800080, 16716947, 128, 0, 16738740, 0xC000);
        public static var overrunt = 0;
        public static var s1;
        public static var s2 = 0;
        public static var s3;
        static var media = undefined;
        static var ff = true;
        public static var BB2;
        public static var fpdata:Object = new Object();
        static var radio = new Array(undefined, undefined);

        static function DoRadio(_arg1=false){
            var _local4:*;
            var _local2:* = false;
            if (media == undefined){
                media = todo.useRadio;
            } else {
                if (media != todo.useRadio){
                    media = todo.useRadio;
                    _local2 = true;
                };
            };
            if (radio_state == undefined){
                if ((todo.w_sound & 2)){
                    radio_state = 0;
                } else {
                    radio_state = -1;
                };
            };
            if (todo.useRadio == undefined){
                return;
            };
            if (radio_state == -1){
                return;
            };
            if (todo.w_sound == undefined){
                return;
            };
            var _local3:* = "/;";
            if (todo.useRadio.substr((todo.useRadio.length - 4), 4) == ".mp3"){
                _local3 = "";
            };
            switch (radio_state){
                case 0:
                    ff = !(ff);
                    radio[(ff) ? 0 : 1] = new Sound();
                    channel[(ff) ? 0 : 1] = new SoundChannel();
                    radio[(ff) ? 0 : 1].load(new URLRequest((todo.useRadio + _local3)), new SoundLoaderContext(3000));
                    radio_state = 1;
                    break;
                case 1:
                    if (!radio[(ff) ? 0 : 1].isBuffering){
                        radio_load = getTimer();
                        channel[(ff) ? 0 : 1] = radio[(ff) ? 0 : 1].play(0, 0, new SoundTransform(0));
                        radio_state = 2;
                    };
                    break;
                case 2:
                    _local4 = (todo.w_Vol[2] / 100);
                    if (channel[(ff) ? 0 : 1] != undefined){
                        channel[(ff) ? 0 : 1].soundTransform = new SoundTransform((_local4 / fade));
                    };
                    if (channel[(ff) ? 1 : 0] != undefined){
                        channel[(ff) ? 1 : 0].soundTransform = new SoundTransform((_local4 - (_local4 / fade)));
                    };
                    fade--;
                    if (fade == 0){
                        fade = 6;
                        if (channel[(ff) ? 1 : 0] != undefined){
                            channel[(ff) ? 1 : 0].stop();
                        };
                        if (radio[(ff) ? 1 : 0] != undefined){
                            radio[(ff) ? 1 : 0].close();
                        };
                        radio[(ff) ? 1 : 0] = undefined;
                        channel[(ff) ? 1 : 0] = undefined;
                        radio_state = 3;
                    };
                    break;
                case 3:
                    if ((getTimer() - radio_load) > (60 * 1000)){
                        radio_state = 0;
                    };
                    if (_arg1){
                        _local4 = (todo.w_Vol[2] / 100);
                        if (channel[(ff) ? 0 : 1] != undefined){
                            channel[(ff) ? 0 : 1].soundTransform = new SoundTransform((todo.w_Vol[2] / 100));
                        };
                    };
                    break;
            };
            if (_local2){
                radio_state = 0;
                _local2 = false;
            };
        }
        public static function SetRadio(){
            var _local1:* = (todo.w_sound & 2);
            if (_local1 != 0){
                if (radio_state == -1){
                    radio_load = undefined;
                    radio_state = 0;
                };
            } else {
                fade = 6;
                if (channel[0] != undefined){
                    channel[0].stop();
                };
                if (radio[0] != undefined){
                    radio[0].close();
                };
                radio[0] = undefined;
                channel[0] = undefined;
                if (channel[1] != undefined){
                    channel[1].stop();
                };
                if (radio[1] != undefined){
                    radio[1].close();
                };
                radio[1] = undefined;
                channel[1] = undefined;
                radio_state = -1;
            };
        }
        public static function DoTick(){
            var t:* = undefined;
            var UsersLength:* = undefined;
            var w:* = undefined;
            var scr:* = undefined;
            var ww:* = undefined;
            var ou:* = undefined;
            var r:* = undefined;
            var cp:* = undefined;
            var cr:* = undefined;
            var c0:* = undefined;
            var c1:* = undefined;
            var v:* = undefined;
            var a:* = undefined;
            var emi:* = undefined;
            var rr:* = undefined;
            var Wave:* = null;
            var Amplitude:* = NaN;
            var A:* = NaN;
            var sfx_sound:* = undefined;
            var channel:* = undefined;
            var sfx_sound_complete_nudge:* = null;
            var sfx_sound_complete:* = null;
            var n:* = undefined;
            t = getTimer();
            var doverrunt:* = (t - overrunt);
            overrunt = t;
            boverrun = false;
            if (doverrunt > 130){
                if (boverrun){
                    boverrun = false;
                } else {
                    boverrun = true;
                };
            };
            todo.tick++;
            swfsmiley.MasterTick();
            smiley.MasterTick();
            if ((todo.tick % 12) == 0){
                cachedSprite.Tidy();
            };
            if (!boverrun){
                if (((todo.DoUpdateMessages) || (todo.ScrollDown))){
                    if ((((main.mscrollmc.Scrolling == true)) || ((main.mscrollmc.ScrollPressed == true)))){
                        todo.LastScrollTime = getTimer();
                        main.mscrollmc.ScrollPressed = false;
                        xmessage.UpdateMessages(true, true);
                    } else {
                        if (main.mscrollmc.Scr_position == main.mscrollmc.Scr_size){
                            todo.LastScrollTime = undefined;
                        };
                        scr = false;
                        if (todo.LastScrollTime != undefined){
                            if ((getTimer() - todo.LastScrollTime) < 10000){
                                scr = true;
                            } else {
                                todo.LastScrollTime = undefined;
                            };
                        };
                        if (todo.LastScrollTime == undefined){
                            xmessage.UpdateMessages(true, scr);
                        };
                    };
                };
            };
            if (!boverrun){
                if ((((todo.DoBuildUserList == true)) || ((todo.DoBuildUserListScrollUp == true)))){
                    xmessage.BuildUserList();
                    todo.DoBuildUserList = false;
                    todo.DoBuildUserListScrollUp = false;
                } else {
                    if (UserScroll){
                        xmessage.useryc = xmessage.useryc2;
                        UsersLength = todo.Users.length;
                        ww = 0;
                        while (ww < UsersLength) {
                            if (todo.Users[xmessage.poin[ww].index].Vis){
                                xmessage.AddUserToList(xmessage.poin[ww].index);
                            };
                            ww = (ww + 1);
                        };
                    };
                };
            };
            UserScroll = false;
            if ((todo.tick % 16) == 0){
                ou = 0;
                UsersLength = todo.Users.length;
                r = 0;
                while (r < UsersLength) {
                    if (todo.Users[r].online){
                        ou = (ou + 1);
                    };
                    if (ou >= 2){
                        break;
                    };
                    r = (r + 1);
                };
                if (ou == 1){
                    main.GrpIc.filters = [todo.TextGlow];
                    main.GrpIc.glowc = 6;
                };
            };
            if (main.GrpIc.glowc > 1){
                main.GrpIc.glowc--;
            } else {
                main.GrpIc.filters = null;
            };
            if (GlowFlag){
                GlowFlag = false;
                UsersLength = todo.Users.length;
                w = 0;
                while (w < UsersLength) {
                    if (todo.Users[w].mc != null){
                        if (todo.Users[w].mc.av1.filters != null){
                            if (todo.Users[w].glowc > 0){
                                todo.Users[w].glowc--;
                                GlowFlag = true;
                            } else {
                                todo.Users[w].mc.av1.filters = null;
                            };
                        };
                    };
                    w = (w + 1);
                };
            };
            UsersLength = todo.Users.length;
            w = 0;
            while (w < UsersLength) {
                if (todo.HasPower(w, 67)){
                    if (todo.Users[w].mc != null){
                        if (((((!(todo.Users[w].online)) || (todo.Users[w].banned))) || (todo.Users[w].ignored))){
                        } else {
                            cp = -1;
                            if (todo.Users[w].u == 42){
                                cp = 3;
                            } else {
                                if (todo.HasPower(w, 35)){
                                    cp = 0;
                                } else {
                                    if (todo.HasPower(w, 64)){
                                        cp = 2;
                                    } else {
                                        if (todo.HasPower(w, 30)){
                                            cp = ((((todo.Users[w].member | todo.Users[w].moderator) | todo.Users[w].owner) | todo.Users[w].mainowner)) ? 1 : 4;
                                        };
                                    };
                                };
                            };
                            if ((((((cp == -1)) && (todo.Users[w].Stealth))) && (((todo.Users[w].owner) || (todo.Users[w].mainowner))))){
                                cp = 5;
                            };
                            if (cp == -1){
                            } else {
                                cr = -1;
                                if (((todo.Users[w].owner) || (todo.Users[w].mainowner))){
                                    cr = 3;
                                } else {
                                    if (todo.Users[w].moderator){
                                        cr = 2;
                                    } else {
                                        if (todo.Users[w].member){
                                            cr = 1;
                                        } else {
                                            cr = 0;
                                        };
                                    };
                                };
                                if (cr == -1){
                                } else {
                                    if ((((cp == 5)) && ((cr == 0)))){
                                    } else {
                                        if (fpdata[(cp + (cr << 8))] == undefined){
                                            c0 = cpow[cp];
                                            c1 = crank[cr];
                                            fpdata[(cp + (cr << 8))] = new Array();
                                            v = 0;
                                            while (v < 48) {
                                                if (v < 18){
                                                    a = effect[v];
                                                    fpdata[(cp + (cr << 8))][v] = Math.floor(((a)==1) ? c1 : (((((((c0 >> 16) & 0xFF) * (1 - a)) + (((c1 >> 16) & 0xFF) * a)) << 16) + (((((c0 >> 8) & 0xFF) * (1 - a)) + (((c1 >> 8) & 0xFF) * a)) << 8)) + (((c0 & 0xFF) * (1 - a)) + ((c1 & 0xFF) * a))));
                                                } else {
                                                    fpdata[(cp + (cr << 8))][v] = c0;
                                                };
                                                v = (v + 1);
                                            };
                                        };
                                        if (todo.Users[w].mc.av1.xBack){
                                            xatlib.McSetRGB(todo.Users[w].mc.av1.xBack, fpdata[(cp + (cr << 8))][(todo.tick % 48)]);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                w = (w + 1);
            };
            if (todo.TabGlowFlag){
                todo.TabGlowFlag = false;
                w = -1;
                while (w < main.ctabsmc.tabs.length) {
                    t = main.ctabsmc.tabs[w];
                    if (w == -1){
                        t = main.utabsmc.tabs[2];
                    };
                    if (((((t) && (t.mc))) && (t.mc.bub))){
                        if (t.glowc > 0){
                            t.glowc--;
                            todo.TabGlowFlag = true;
                        } else {
                            t.mc.bub.filters = null;
                        };
                    };
                    w = (w + 1);
                };
            };
            if (main.D_edityourchat){
                if ((todo.tick % 10) == 0){
                    main.D_edityourchat.ImagePaneTick();
                };
            };
            if ((((xconst.f_NoSmilies & todo.FlagBits)) && ((todo.SmilieUpdate >= 0)))){
                if (todo.SmilieUpdate > todo.heartbeatduration){
                    todo.SmilieUpdate = (todo.SmilieUpdate - todo.heartbeatduration);
                } else {
                    todo.SmilieUpdate = 0;
                };
                if (todo.SmilieUpdate == 0){
                    emi = 1;
                    while (emi < todo.emmax) {
                        if (main.em[emi] != null){
                            main.em[emi].visible = false;
                        };
                        emi = (emi + 1);
                    };
                    todo.SmilieUpdate = -1;
                };
            };
            if ((((((todo.lb == "n")) && (((todo.tick % 64) == 63)))) || (todo.ResetSmilies))){
                rr = 0;
                while (rr < main.em.length) {
                    if (main.em[rr] != null){
                        main.em[rr].scaleX = (main.em[rr].scaleY = main.em[rr].starts);
                        main.em[rr].x = main.em[rr].startx;
                        main.em[rr].y = main.em[rr].starty;
                    };
                    rr = (rr + 1);
                };
                todo.ResetSmilies = false;
            } else {
                if (((((todo.w_attract) && ((todo.lb == "n")))) && (((todo.tick % 64) > 47)))){
                    Wave = new Array(1, 2, 1);
                    Amplitude = ((todo.StageHeight * 12) / 480);
                    rr = 0;
                    while (rr < main.em.length) {
                        A = ((-(rr) - Wave.length) + (todo.tick % 16));
                        if ((((A < 0)) || ((A >= Wave.length)))){
                            A = 0;
                        } else {
                            A = Wave[A];
                        };
                        if (main.em[rr] != null){
                            main.em[rr].scaleX = (main.em[rr].scaleY = (main.em[rr].starts * (1 + (A / 19))));
                            main.em[rr].x = main.em[rr].startx;
                            main.em[rr].y = (main.em[rr].starty - (A * Amplitude));
                        };
                        rr = (rr + 1);
                    };
                };
            };
            if (((todo.DoAudieSnd) && ((todo.CustomSound == "laserfire3")))){
                var sfx_sound_loaded_nudge:* = function (_arg1:Event):void{
                    main.nudge = 20;
                    channel = sfx_sound.play(0, 0, new SoundTransform((todo.w_Vol[1] / 100)));
                    channel.addEventListener(Event.SOUND_COMPLETE, sfx_sound_complete_nudge);
                };
                sfx_sound_complete_nudge = function (_arg1:Event):void{
                };
                todo.DoAudieSnd = false;
                sfx_sound = new Sound();
                channel = new SoundChannel();
                sfx_sound.load(new URLRequest((((todo.chatdomain + "snd/") + todo.CustomSound) + ".mp3")));
                sfx_sound.addEventListener(Event.COMPLETE, sfx_sound_loaded_nudge);
            };
            if ((todo.w_sound & 1)){
                if (todo.DoMessageSnd){
                    todo.DoMessageSnd = false;
                    chat.beep.play(0, 0, new SoundTransform((todo.w_Vol[1] / 100)));
                };
                if (todo.DoUserSnd){
                    todo.DoUserSnd = false;
                    chat.dingdong.play(0, 0, new SoundTransform((todo.w_Vol[1] / 100)));
                };
                if (todo.DoTabSnd){
                    todo.DoTabSnd = false;
                    chat.tab_sound.play(0, 0, new SoundTransform((todo.w_Vol[1] / 100)));
                };
                if (todo.DoAudieSnd){
                    var sfx_sound_loaded:* = function (_arg1:Event):void{
                        channel = sfx_sound.play(0, 0, new SoundTransform((todo.w_Vol[1] / 100)));
                        channel.addEventListener(Event.SOUND_COMPLETE, sfx_sound_complete);
                    };
                    sfx_sound_complete = function (_arg1:Event):void{
                    };
                    todo.DoAudieSnd = false;
                    sfx_sound = new Sound();
                    channel = new SoundChannel();
                    sfx_sound.load(new URLRequest((((todo.chatdomain + "snd/") + todo.CustomSound) + ".mp3")));
                    sfx_sound.addEventListener(Event.COMPLETE, sfx_sound_loaded);
                };
            };
            DoRadio();
            todo.HelpUpdate = (todo.HelpUpdate - todo.heartbeatduration);
            if (todo.HelpUpdate < 0){
                todo.HelpUpdate = 0;
            };
            if (((!((todo.helpstr == ""))) && ((todo.HelpUpdate <= 0)))){
                if (todo.w_help){
                    todo.DoMessageSnd = true;
                    todo.Message.push({
                        n:0,
                        t:todo.helpstr,
                        u:0
                    });
                    todo.DoUpdateMessages = true;
                    todo.ScrollDown = true;
                };
                todo.helpstr = "";
            };
            if (main.mcscrollertext.text != ""){
                if (main.mcscrollertext.textWidth > xatlib.NX(430)){
                    main.mcscrollertext.x = (main.mcscrollertext.x - 1);
                    if (main.mcscrollertext.x < (xatlib.NX(10) - main.mcscrollertext.textWidth)){
                        main.mcscrollertext.x = xatlib.NX(430);
                    };
                } else {
                    if (main.mcscrollertext.x > ((xatlib.NX(430) - main.mcscrollertext.textWidth) / 2)){
                        main.mcscrollertext.x = (main.mcscrollertext.x - 1);
                    };
                };
            };
            if (BB != undefined){
                n = 1;
                while (n < 5) {
                    BB[n] = Number(BB[n]);
                    if (isNaN(BB[n])){
                        BB = undefined;
                    };
                    n = (n + 1);
                };
                if (BB2 == undefined){
                    BB2 = new Array();
                };
                BB[1] = (BB[1] - (1 / 12));
                if ((((((((BB == undefined)) || ((BB[1] > 3600)))) || ((BB[1] <= 0)))) || ((BB[2] > 50)))){
                    BB = undefined;
                } else {
                    BB[3] = (BB[3] + (BB[2] / 12));
                    if ((((BB[3] > 1)) && ((BB[3] > (BB[2] / 12))))){
                        BB[3] = (BB[2] / 12);
                    };
                    n = 0;
                    while (BB[3] >= 1) {
                        BB[3] = (BB[3] - 1);
                        if (BB[BB[4]] == undefined){
                            BB[4] = 5;
                        };
                        BB2[n] = xatlib.LoadVariables(((("http://" + xatlib.CleanText(BB[BB[4]], 1)) + "/?") + Math.random()));
                        var _local2 = BB;
                        var _local3 = 4;
                        var _local4 = (_local2[_local3] + 1);
                        _local2[_local3] = _local4;
                    };
                };
            };
        }

    }
}//package 
﻿package {
    import flash.xml.*;
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;
    import flash.system.*;

    public class edityourchat extends Sprite {

        static var ldr:Loader = null;
        static var mcWF:MovieClip = null;

        const ud;

        var eip_busy;
        var ImagePaneVars;
        var EIPrunning;
        var mcgetbackground;
        var eip_h:Array;
        var urltextbox_text;
        var mcmakeagroup;
        var eip_w:Array;
        var eip_i:Array;
        var NewLobbySet;
        var mcbackbackgroundb;
        var mcgetchat;
        var Dia;
        var mcbackbackground;
        var mcgetgroup;
        var bscrollmc;
        var group;
        var ImagePaneData = null;
        var eip_oldback;
        var eip_xml;
        var xurltextbox;
        var sMode;
        var mcgetagroup;
        var mceditbackground;
        var mcbackbackgroundmask;
        var eip_pw;
        var bph;
        var bpw;
        var bpx;
        var bpy;
        var eip_id;
        var gnode;
        var backgroup;
        var eip_back;

        public function edityourchat(_arg1){
            var _local2:*;
            this.eip_i = new Array();
            this.eip_w = new Array();
            this.eip_h = new Array();
            this.ImagePaneVars = new Object();
            super();
            this.sMode = _arg1;
            if (_arg1){
                this.Dia = (this.mceditbackground = new xDialog(this, xatlib.NX(20), xatlib.NY(20), xatlib.NX(600), xatlib.NY(440), (" " + xconst.ST(44)), undefined, 0, this.mceditbackground_close));
                this.Dia.mcreturn2 = new xBut(this.Dia, xatlib.NX(220), xatlib.NY(420), xatlib.NX(200), xatlib.NY(30), xconst.ST(45), this.EditClose);
                this.Dia.ChangeBack = new xBut(this.Dia, xatlib.NX(30), xatlib.NY(60), xatlib.NX(185), xatlib.NY(30), xconst.ST(46), this.SwitchToBackMode);
                this.Dia.ChangeGroups = new xBut(this.Dia, xatlib.NX(227), xatlib.NY(60), xatlib.NX(185), xatlib.NY(30), xconst.ST(47), this.SwitchToGroupMode);
                this.Dia.mcadvanced = new xBut(this.Dia, xatlib.NX(424), xatlib.NY(60), xatlib.NX(185), xatlib.NY(30), xconst.ST(49), this.mcadvanced_onRelease);
                this.Dia.mcadvanced.hint = {
                    mc:this.Dia.mcadvanced,
                    Hint:xconst.ST(48)
                };
                this.Dia.mcadvanced.addEventListener(MouseEvent.ROLL_OVER, main.hint.EasyHint);
                this.Dia = new MovieClip();
                this.mceditbackground.addChild(this.Dia);
                this.NewLobbySet = undefined;
                this.CreateChangeGroup();
                this.eip(8);
            } else {
                if ((global.xc & 64)){
                    _local2 = "http://www.facebook.com/apps/application.php?id=3218220471";
                    xatlib.getURL(_local2, "_blank");
                    xatlib.UrlPopup(xconst.ST(92), _local2);
                } else {
                    this.mcgetbackground = new xDialog(this, xatlib.NX(20), xatlib.NY(20), xatlib.NX(600), xatlib.NY(440), (" " + xconst.ST(92)), undefined, 0, this.mcgetbackground_close);
                    this.Dia = this.mcgetbackground.Dia;
                    this.mcgetbackground.Dia.mcreturn = new xBut(this.Dia, xatlib.NX(240), xatlib.NY(420), xatlib.NX(160), xatlib.NY(30), xconst.ST(45), this.mcreturn_onRelease);
                    this.mcgetchat = new xBut(this.Dia, xatlib.NX((0 + 22)), xatlib.NY(24), xatlib.NX(160), xatlib.NY(24), xconst.ST(5), this.mcgetchat_onRelease);
                    if (((!((global.gn == undefined))) && (!((global.gn == xconst.ST(0)))))){
                        this.mcgetgroup = new xBut(this.Dia, xatlib.NX((160 + 42)), xatlib.NY(24), xatlib.NX(160), xatlib.NY(24), xconst.ST(212, global.gn), this.mcgetgroup_onRelease);
                    } else {
                        this.mcgetchat.TextCol = ~(todo.ButCol);
                    };
                    this.mcmakeagroup = new xBut(this.Dia, xatlib.NX((320 + 62)), xatlib.NY(24), xatlib.NX(160), xatlib.NY(24), xconst.ST(213), this.mcmakeagroup_onRelease);
                    this.eip(2);
                };
            };
        }
        function mcgetchat_onRelease(_arg1:MouseEvent){
            this.mcgetchat.TextCol = 0xFF0000;
            if (this.mcgetgroup){
                this.mcgetgroup.TextCol = 0;
            };
            this.eip(2);
        }
        function JoinBackground():String{
            var _local1:String;
            _local1 = todo.BackVars[0];
            var _local2:* = 1;
            while (_local2 < 12) {
                if (todo.BackVars[_local2] == undefined){
                    break;
                };
                _local1 = (_local1 + (";=" + todo.BackVars[_local2]));
                _local2++;
            };
            return (_local1);
        }
        function OnFocus(_arg1){
            if (this.xurltextbox.text == ((" <" + xconst.ST(38)) + ">")){
                this.xurltextbox.text = "";
            };
        }
        function eip_busy_box(_arg1:String){
            if (this.eip_busy){
                main.box_layer.removeChild(this.eip_busy);
            };
            this.eip_busy = new MovieClip();
            main.box_layer.addChild(this.eip_busy);
            xatlib.createTextNoWrap(this.eip_busy, (this.mcbackbackgroundb.x + (this.mcbackbackgroundb.width * 0.15)), this.mcbackbackgroundb.y, (this.mcbackbackgroundb.width * 0.7), this.mcbackbackgroundb.height, _arg1, 0xF00000, 0, 100, 0, 24, "left", 1);
        }
        function CreateBackPane(){
            this.ClearBackPane(1);
            this.bpw = xatlib.NX(580);
            this.bph = xatlib.NY((300 - 50));
            this.bpx = xatlib.NX(30);
            this.bpy = xatlib.NY((100 + 50));
            this.mcbackbackgroundb = xatlib.AddBackground(this.Dia, this.bpx, this.bpy, this.bpw, this.bph);
            this.mcbackbackground = new MovieClip();
            this.mcbackbackgroundb.addChild(this.mcbackbackground);
            this.mcbackbackground.Width = this.bpw;
            this.mcbackbackgroundmask = xatlib.AddBackground(this.Dia, (this.bpx + 1), (this.bpy + 1), ((this.bpw - 2) - xatlib.NX(16)), (this.bph - 2), 0);
            this.mcbackbackground.mask = this.mcbackbackgroundmask;
            this.bscrollmc = new xScroll(this.Dia, ((this.bpx + this.bpw) - xatlib.NX(16)), this.bpy, xatlib.NX(16), this.bph, xatlib.NX(16), xatlib.NX(32), 30, (10 * 100), (0 * 100), this.onBackScrollChange2);
        }
        function onBackScrollChange2(){
            var _local1:* = (this.ImagePaneVars.Height - this.bph);
            if (_local1 < 0){
                _local1 = 0;
            };
            this.bscrollmc.Scr_size = _local1;
            var _local2:* = this.bscrollmc.Scr_position;
            this.mcbackbackground.y = -(_local2);
        }
        function SwitchToBackMode(_arg1){
            this.CloseStuff();
            this.CreateChangeBackground();
            this.eip(2);
        }
        public function CreateChangeBackground(){
            this.Dia.mcget = new xBut(this.Dia, xatlib.NX(486), xatlib.NY((60 + 50)), xatlib.NX(120), xatlib.NY(30), xconst.ST(39), this.mclget_onRelease);
            this.Dia.mcget.SetHint(xconst.ST(38));
            this.Dia.bkgtext = this.Dia;
            xatlib.createTextNoWrap(this.Dia.bkgtext, xatlib.NX(24), xatlib.NY((60 + 50)), xatlib.NX(120), xatlib.NY(30), xconst.ST(40), 0x202020, 0, 100, 0, 24, "left", 1);
            var _local1:* = xatlib.AddBackground(this.Dia, xatlib.NX(140), xatlib.NY((60 + 50)), xatlib.NX(338), xatlib.NY(30));
            this.xurltextbox = xatlib.AddTextField(this.Dia, xatlib.NX(140), xatlib.NY((60 + 50)), xatlib.NX(338), xatlib.NY(30));
            this.xurltextbox.type = TextFieldType.INPUT;
            this.xurltextbox.defaultTextFormat = main.fmt;
            this.xurltextbox.multiline = true;
            this.xurltextbox.addEventListener(FocusEvent.FOCUS_IN, this.OnFocus);
            this.xurltextbox.addEventListener(Event.CHANGE, this.OnCR);
            this.CreateBackPane();
        }
        function ClearBackPane(_arg1=undefined){
            var _local2:*;
            if (this.eip_busy){
                main.box_layer.removeChild(this.eip_busy);
            };
            this.eip_busy = null;
            if (this.ImagePaneData){
                _local2 = 0;
                while (_local2 < this.ImagePaneData.length) {
                    this.mcbackbackground.removeChild(this.ImagePaneData[_local2]);
                    _local2++;
                };
            };
            this.ImagePaneData = new Array();
            this.eip_w = new Array();
            this.eip_h = new Array();
            this.eip_i = new Array();
            if (((((!((_arg1 == undefined))) && (this.mcbackbackground))) && (this.mcbackbackgroundb))){
                this.mcbackbackgroundb.removeChild(this.mcbackbackground);
                this.mcbackbackground = null;
            };
        }
        function mceditbackground_close(){
            if (this.sMode == 0){
                this.mcgetbackground_close();
                return;
            };
            this.CloseStuff();
            if (this.mceditbackground){
                this.mceditbackground.Delete();
                this.Dia = (this.mceditbackground = null);
            };
            this.ImagePaneData = null;
            main.DialogOpen = 0;
            todo.DoUpdate = true;
        }
        function OnCheck(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget.z;
            var _local3:* = (this.gnode[_local2].sel == true);
            var _local4:* = 0;
            while (_local4 < this.gnode.length) {
                this.gnode[_local4].sel = false;
                _local4++;
            };
            this.gnode[_local2].sel = !(_local3);
            this.SetGrpChks();
            this.NewLobbySet = true;
        }
        function SetEmbedCode(_arg1:Number, _arg2:String=null, _arg3:Boolean=false){
            var _local8:*;
            var _local9:String;
            var _local10:URLRequest;
            if (_arg3 != true){
                _local8 = (((("http://xat.com/web_gear/chat.php?id=" + this.eip_id) + "&pw=") + this.eip_pw) + "&f=1");
            } else {
                _local8 = ((("http://xat.com/web_gear/chat/embed.php?id=" + _arg1) + "&GroupName=") + _arg2);
            };
            var _local4 = ((("<embed src=\"http://www.xatech.com/web_gear/chat/chat.swf\" quality=\"high\" bgcolor=\"#000000\" width=\"540\" height=\"405\" name=\"chat\" FlashVars=\"id=" + _arg1) + ((_arg3 == true)) ? ("&gn=" + _arg2) : "") + "\" align=\"middle\" allowScriptAccess=\"sameDomain\" type=\"application/x-shockwave-flash\" pluginspage=\"http://xat.com/update_flash.shtml\" /><br><small><a target=\"_BLANK\" href=\"http://xat.com/web_gear/");
            if (_arg3){
                _local4 = (_local4 + (((((((((("chat/embed.php?id=" + _arg1) + "&GroupName=") + _arg2) + "\">Get ") + _arg2) + " chat group</a> | <a target=\"_BLANK\" href=\"http://xat.com/") + _arg2) + "\"> Goto ") + _arg2) + " website</a></small><br>"));
            } else {
                _local4 = (_local4 + (("?cb\">Get your own Chat Box!</a> <a target=\"_BLANK\" href=\"http://xat.com/web_gear/chat/go_large.php?id=" + _arg1) + "\">Go Large!</a></small><br>"));
            };
            var _local5:* = false;
            if (mcWF == null){
                mcWF = new MovieClip();
                this.Dia.addChild(mcWF);
                mcWF.name = "mcWF";
                mcWF.x = xatlib.NX(28);
                mcWF.y = xatlib.NY(54);
                _local5 = true;
            };
            var _local6 = "PostModule1";
            var _local7:Object = {};
            _local7["width"] = xatlib.NX(584);
            _local7["height"] = xatlib.NY(362);
            _local7["partner"] = "53151";
            _local7["contentIsLayout"] = null;
            _local7["UIConfig"] = "<config><body background-color=\"Transparent\" size=\"14\"><background frame-color=\"Transparent\" background-color=\"Transparent\" /><controls background-color=\"#E5E5E5\" corner-roundness=\"8\"><textboxes frame-color=\"#ECECEC\"><codeboxes color=\"#000000\" /></textboxes><buttons frame-color=\"#CACACA\" gradient-color-begin=\"#F4F4F4\" gradient-color-end=\"#959595\" frame-thickness=\"0\" bold=\"true\"><post-buttons gradient-color-begin=\"#F4F4F4\" gradient-color-end=\"#959595\" /></buttons><snbuttons frame-color=\"#CACACA\" corner-roundness=\"3\" gradient-color-begin=\"#F4F4F4\" gradient-color-end=\"#959595\" size=\"11\" /></controls><texts bold=\"true\" /></body></config>";
            _local7["defaultContent"] = _local4;
            if (_local5){
                ldr = new Loader();
                _local9 = ((("http://cdn.gigya.com/Wildfire/swf/WildfireInAS3.swf?ModuleID=" + _local6) + "&xat=") + mcWF.name);
                _local10 = new URLRequest(_local9);
                mcWF[_local6] = _local7;
                ldr.load(_local10);
                mcWF.addChild(ldr);
            } else {
                this.Dia.addChild(mcWF);
                mcWF[_local6] = _local7;
                var _local11 = ldr.content;
                _local11["INIT"]();
            };
        }
        public function eip(_arg1:Number){
            if (this.EIPrunning){
                return;
            };
            this.EIPrunning = true;
            this.ClearBackPane();
            if (this.eip_back == undefined){
                this.eip_back = "";
                if (((todo.pass) && (todo.w_mainowner))){
                    this.eip_back = todo.BackVars[0];
                };
            };
            if ((((((this.eip_pw == undefined)) && (todo.w_mainowner))) && (todo.pass))){
                this.eip_pw = todo.pass;
            };
            if (this.eip_id == undefined){
                this.eip_id = 0;
                if (((todo.pass) && (todo.w_mainowner))){
                    this.eip_id = todo.w_room;
                };
            };
            todo.BackVars[0] = this.eip_back;
            var _local2:* = this.JoinBackground();
            var _local3:String = (((((((((((xconst.chatdomain + "eip.php?id=") + this.eip_id) + "&pw=") + this.eip_pw) + "&md=") + _arg1) + "&back=") + _local2) + "&fg=") + todo.MainFlagBits) + xatlib.TimeStamp());
            if ((_arg1 & 32)){
                _local3 = (_local3 + ("&s=" + this.xurltextbox.text));
            };
            _local3 = xatlib.searchreplace("#", "%23", _local3);
            var _local4:* = xatlib.LoadVariables(_local3, this.eip_xml_onLoad);
            this.ShowBusyMessage();
        }
        function eip_xml_onLoad(_arg1:Event){
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local10:*;
            var _local11:*;
            var _local12:*;
            var _local13:*;
            var _local14:MovieClip;
            var _local15:*;
            var _local16:*;
            this.EIPrunning = false;
            if (this.eip_busy){
                main.box_layer.removeChild(this.eip_busy);
            };
            this.eip_busy = null;
            this.eip_xml = new XMLDocument();
            this.eip_xml.ignoreWhite = true;
            this.eip_xml.parseXML(_arg1.currentTarget.data);
            if (!this.eip_xml.firstChild){
                this.eip_busy_box(xconst.ST(54));
                return;
            };
            var _local2:* = new XMLDocument();
            var _local3:* = _local2.createElement("r");
            _local2.appendChild(_local3);
            network.socket.send(_local2);
            this.ClearBackPane();
            var _local4:* = this.eip_xml.firstChild.childNodes;
            this.gnode = undefined;
            var _local5:* = 0;
            while (_local5 < _local4.length) {
                if (_local4[_local5].nodeName == "sdown"){
                    this.eip_busy_box(xconst.ST(55));
                    return;
                };
                if (_local4[_local5].nodeName == "group"){
                    this.gnode = new Array();
                    _local7 = _local4[_local5].childNodes.length;
                    _local8 = 0;
                    while (_local8 < _local7) {
                        this.gnode[_local8] = new Object();
                        _local9 = _local4[_local5].childNodes[_local8].attributes;
                        for (_local10 in _local9) {
                            this.gnode[_local8][_local10] = _local9[_local10];
                        };
                        _local8++;
                    };
                };
                if (_local4[_local5].nodeName == "oldback"){
                    this.eip_oldback = xatlib.xInt(_local4[_local5].attributes.v);
                };
                if (_local4[_local5].nodeName == "back"){
                    xatlib.SplitBackground(_local4[_local5].attributes.v);
                    this.eip_back = todo.BackVars[0];
                } else {
                    if (_local4[_local5].nodeName == "pw"){
                        this.eip_pw = xatlib.xInt(_local4[_local5].attributes.v);
                    } else {
                        if (_local4[_local5].nodeName == "id"){
                            this.eip_id = xatlib.xInt(_local4[_local5].attributes.v);
                        } else {
                            if (_local4[_local5].nodeName.charAt(0) == "i"){
                                this.eip_i[xatlib.xInt(_local4[_local5].nodeName.substr(1))] = _local4[_local5].attributes.v;
                            } else {
                                if (_local4[_local5].nodeName.charAt(0) == "w"){
                                    this.eip_w[xatlib.xInt(_local4[_local5].nodeName.substr(1))] = _local4[_local5].attributes.v;
                                } else {
                                    if (_local4[_local5].nodeName.charAt(0) == "h"){
                                        this.eip_h[xatlib.xInt(_local4[_local5].nodeName.substr(1))] = _local4[_local5].attributes.v;
                                    };
                                };
                            };
                        };
                    };
                };
                _local5++;
            };
            if (this.gnode){
                if (this.gnode[0].nodeName != "g0"){
                    this.gnode.unshift(new Object());
                    this.gnode[0] = new Object();
                    this.gnode[0].n = todo.BackVars[1];
                    this.gnode[0].r = todo.BackVars[2];
                    this.gnode[0].d = "";
                    _local8 = 1;
                    while (_local8 < this.gnode.length) {
                        if (xatlib.xInt(this.gnode[_local8].r) == todo.BackVars[2]){
                            this.gnode[0].d = this.gnode[_local8].d;
                        };
                        _local8++;
                    };
                } else {
                    this.NewLobbySet = true;
                };
                _local11 = 0;
                _local8 = 0;
                while (_local8 < this.gnode.length) {
                    _local12 = (xatlib.xInt(this.gnode[_local8].r) == todo.BackVars[2]);
                    if (((((!((_local8 == 0))) && (_local12))) && (!(this.NewLobbySet)))){
                    } else {
                        if (((!((todo.MainFlagBits & xconst.f_Lobby))) || (this.NewLobbySet))){
                            _local12 = false;
                        };
                        if (((this.NewLobbySet) && ((_local8 == 0)))){
                            _local12 = true;
                        };
                        _local13 = new MovieClip();
                        this.backgroup.addChild(_local13);
                        var _temp1 = _local11;
                        _local11 = (_local11 + 1);
                        _local13.y = (_temp1 * 20);
                        _local14 = (this.gnode[_local8].chk = xatlib.AttachMovie(_local13, "checkbox"));
                        _local14.x = 5;
                        _local14.y = 3;
                        _local14.tick.visible = (this.gnode[_local8].sel = _local12);
                        _local14.z = _local8;
                        _local14.addEventListener(MouseEvent.MOUSE_DOWN, this.OnCheck);
                        this.ImagePaneVars.Height = (_local13.y + 20);
                        _local15 = new MovieClip();
                        _local13.addChild(_local15);
                        xatlib.createTextNoWrap(_local15, 20, 1, 100, 20, this.gnode[_local8].n, 0x101010, 0, 100, 0, 16, "left", 1);
                        xatlib.createTextNoWrap(_local15, (20 + 101), 1, ((xatlib.NX((480 - 1)) - 101) - 20), 20, this.gnode[_local8].d, 0x404040, 0, 100, 0, 14, "left", 1);
                        _local15.hint = {
                            Hint:((this.gnode[_local8].n + ": ") + this.gnode[_local8].d),
                            mc:_local15
                        };
                        _local15.addEventListener(MouseEvent.ROLL_OVER, main.hint.EasyHint);
                        _local15.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                        _local16 = new xBut(_local13, xatlib.NX(480), 2, xatlib.NX(80), 18, xconst.ST(56), this.PreviewF);
                        _local16.But.u = ((xconst.usedomain + "/") + this.gnode[_local8].n);
                    };
                    _local8++;
                };
                this.SetGrpChks();
                return;
            };
            if (global.xb != undefined){
                this.eip_i.unshift(global.xb);
                this.eip_h.unshift(todo.StageHeight);
                this.eip_w.unshift(todo.StageWidth);
            };
            if (this.xurltextbox){
                if (this.urltextbox_text == undefined){
                    this.urltextbox_text = 1;
                    this.xurltextbox.text = ((" <" + xconst.ST(38)) + ">");
                };
                if (this.xurltextbox.text.indexOf("web_gear/background") >= 0){
                    this.xurltextbox.text = "";
                };
            };
            var _local6:* = ("id=" + this.eip_id);
            if (this.eip_id != todo.w_useroom){
                this.SetEmbedCode(this.eip_id);
            };
            this.CreateImagePane(this.mcbackbackground, this.eip_i, 100, 75);
            this.SaveEipInCookie();
        }
        function mcadvanced_onRelease(_arg1){
            var _local4:String;
            var _local2 = (xconst.usedomain + "/web_gear/chat.php");
            var _local3:String = _local2;
            if (this.eip_id != undefined){
                _local2 = (_local2 + ((("?id=" + this.eip_id) + "&pw=") + this.eip_pw));
                if (global.xb != undefined){
                    _local2 = (_local2 + ("&xb=" + global.xb));
                };
                _local3 = _local2;
                _local4 = ((" " + xconst.ST(50)) + " ");
            } else {
                _local3 = " xat.com/c ";
                _local4 = ((" " + xconst.ST(51)) + " ");
            };
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(_local4, _local3);
        }
        function mcgetgroup_onRelease(_arg1:MouseEvent){
            this.mcgetchat.TextCol = 0;
            this.mcgetgroup.TextCol = 0xFF0000;
            this.SetEmbedCode(todo.w_room, global.gn, true);
        }
        function mcreturn_onRelease(_arg1:MouseEvent){
            this.eip_i.length = 0;
            todo.DoUpdate = true;
            this.mcgetbackground_close();
        }
        function SetGrpChks(){
            var _local1:* = 0;
            while (_local1 < this.gnode.length) {
                if (this.gnode[_local1].chk){
                    this.gnode[_local1].chk.tick.visible = (this.gnode[_local1].sel == true);
                };
                _local1++;
            };
        }
        function ShowBusyMessage(){
            if (!this.mcbackbackgroundb){
                return;
            };
            if (this.eip_busy){
                main.box_layer.removeChild(this.eip_busy);
            };
            this.eip_busy = new MovieClip();
            main.box_layer.addChild(this.eip_busy);
            xatlib.createTextNoWrap(this.eip_busy, (this.mcbackbackgroundb.x + (this.mcbackbackgroundb.width * 0.15)), this.mcbackbackgroundb.y, (this.mcbackbackgroundb.width * 0.7), this.mcbackbackgroundb.height, xconst.ST(52), 0x202020, 0, 100, 0, 24, "left", 1);
        }
        function onBackScrollChange(){
            var _local1:* = (this.ImagePaneVars.Height - this.bph);
            if (_local1 < 0){
                _local1 = 0;
            };
            this.bscrollmc.Scr_size = _local1;
            var _local2:* = this.bscrollmc.Scr_position;
            this.backgroup.y = -(_local2);
        }
        function SaveEipInCookie(){
            if (this.eip_id == undefined){
                return;
            };
            if (this.eip_id < 1){
                return;
            };
            if (this.eip_pw == undefined){
                return;
            };
            var _local1:* = SharedObject.getLocal(("chat" + String(this.eip_id)), "/");
            _local1.objectEncoding = ObjectEncoding.AMF0;
            if (_local1 != null){
                _local1.data.pass = this.eip_pw;
                _local1.flush();
            };
        }
        function ImagePaneTick(){
            var _local1:Number;
            var _local3:*;
            var _local4:*;
            var _local5:Number;
            var _local6:Number;
            var _local7:*;
            if (!this.ImagePaneData){
                return;
            };
            var _local2:Boolean;
            _local1 = 0;
            while (_local1 < this.ImagePaneData.length) {
                _local3 = this.ImagePaneData[_local1];
                _local4 = _local3.pic;
                if (((!(_local3.Done)) && ((_local4.width > 0)))){
                    _local3.Done = true;
                    _local2 = true;
                    _local4.width = this.ImagePaneVars.tw;
                    _local4.height = this.ImagePaneVars.th;
                    if (_local3.Aspect != undefined){
                        _local4.width = int((this.ImagePaneVars.th * _local3.Aspect));
                        if (_local4.width > (this.ImagePaneVars.tw * 2)){
                            _local4.width = (this.ImagePaneVars.tw * 2);
                        };
                    };
                    _local3.visible = true;
                    _local3.addEventListener(MouseEvent.MOUSE_DOWN, this.PicPress);
                    _local3.hint = {
                        mc:_local3,
                        Hint:xconst.ST(57)
                    };
                    _local3.addEventListener(MouseEvent.ROLL_OVER, main.hint.EasyHint);
                    _local3.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                };
                _local1++;
            };
            if (_local2){
                _local5 = this.ImagePaneVars.xofst;
                _local6 = 0;
                _local1 = 0;
                while (_local1 < this.ImagePaneData.length) {
                    _local3 = this.ImagePaneData[_local1];
                    if (_local3.Done){
                        if ((_local5 + _local3.pic.width) > this.ImagePaneVars.pWidth){
                            _local5 = this.ImagePaneVars.xofst;
                            _local6 = (_local6 + (this.ImagePaneVars.th + this.ImagePaneVars.gap));
                        };
                        _local3.y = _local6;
                        _local3.x = _local5;
                        _local5 = (_local5 + (_local3.pic.width + this.ImagePaneVars.gap));
                    };
                    _local1++;
                };
                this.ImagePaneVars.Height = _local6;
                _local7 = (this.ImagePaneVars.Height - this.bph);
                if (_local7 < 0){
                    _local7 = 0;
                };
                this.bscrollmc.ssize = _local7;
            };
        }
        function mcmakeagroup_onRelease(_arg1:MouseEvent){
            this.mcreturn_onRelease(_arg1);
            var _local2:* = "http://www.xat.com/web_gear/chat/creategroup.php";
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(92), _local2);
        }
        function SwitchToGroupMode(_arg1){
            this.CloseStuff();
            this.CreateChangeGroup();
            this.eip(8);
        }
        function PreviewF(_arg1){
            xatlib.getURL(_arg1.currentTarget.u, "_blank");
            xatlib.UrlPopup(xconst.ST(53), _arg1.currentTarget.u);
        }
        function mclget_onRelease(_arg1){
            this.eip_back = this.xurltextbox.text;
            this.eip(2);
        }
        function CreateImagePane(_arg1, _arg2:Array, _arg3:Number, _arg4:Number){
            var _local6:String;
            var _local7:String;
            var _local10:*;
            var _local11:*;
            if (!_arg1){
                return;
            };
            var _local5 = (xconst.usedomain + "/web_gear/background/");
            this.ImagePaneVars.gap = 5;
            this.ImagePaneVars.pWidth = (_arg1.Width - 19);
            var _local8:* = int(((this.ImagePaneVars.pWidth / (_arg3 + this.ImagePaneVars.gap)) + 0.5));
            this.ImagePaneVars.tw = int(((this.ImagePaneVars.pWidth - (this.ImagePaneVars.gap * (_local8 - 1))) / _local8));
            _arg4 = int(((this.ImagePaneVars.tw * _arg4) / _arg3));
            this.ImagePaneVars.th = _arg4;
            _arg3 = this.ImagePaneVars.tw;
            this.ImagePaneVars.xofst = int((((this.ImagePaneVars.pWidth - (_local8 * _arg3)) - ((_local8 - 1) * this.ImagePaneVars.gap)) / 2));
            this.ImagePaneVars.mcPane = _arg1;
            this.ImagePaneData = new Array();
            var _local9:* = 0;
            while (_local9 < _arg2.length) {
                _local10 = new MovieClip();
                _arg1.addChild(_local10);
                if (_arg2[_local9].substr(0, 7) == "http://"){
                    _local6 = _arg2[_local9];
                    _local7 = _local6;
                } else {
                    _local6 = (((_local5 + "xat_") + _arg2[_local9]) + ".jpg");
                    _local7 = (((_local5 + "jdothumb/xat_") + _arg2[_local9]) + ".jpg");
                };
                _local10.back = _local6;
                if ((((this.eip_w[_local9] > 0)) && ((this.eip_h[_local9] > 0)))){
                    _local10.Aspect = (this.eip_w[_local9] / this.eip_h[_local9]);
                };
                this.ImagePaneData[_local9] = _local10;
                _local11 = new MovieClip();
                _local10.addChild(_local11);
                _local10.pic = _local10;
                xatlib.LoadMovie(_local11, _local7);
                _local10.visible = false;
                _local9++;
            };
        }
        function CreateGrpRel(_arg1){
            var _local2:* = (xconst.chatdomain + "creategroup.php");
            xatlib.getURL(_local2, "_blank");
            xatlib.UrlPopup(xconst.ST(43), _local2);
        }
        function GetTextGroup(_arg1){
            this.eip((32 + 8));
            this.CloseStuff();
            this.CreateChangeGroup();
        }
        function mcgetbackground_close(){
            main.DialogOpen = 0;
            main.hint.HintOff();
            this.mcgetbackground.Delete();
        }
        function OnCR(_arg1:Event){
            var _local2:*;
            _local2 = 0;
            while (_local2 < this.xurltextbox.text.length) {
                if (this.xurltextbox.text.charAt(_local2) == "\r"){
                    this.xurltextbox.text = this.xurltextbox.text.substr(0, _local2);
                    if (_local2 != 0){
                        this.mclget_onRelease(undefined);
                    };
                    break;
                };
                _local2++;
            };
        }
        function CreateChangeGroup(){
            this.Dia.bkgtext = this.Dia;
            xatlib.createTextNoWrap(this.Dia.bkgtext, xatlib.NX(28), xatlib.NY((60 + 50)), xatlib.NX(215), xatlib.NY(30), xconst.ST(41), 0, 0, 100, 0, 18, "left", 1);
            xatlib.createTextNoWrap(this.Dia.bkgtext, xatlib.NX(28), xatlib.NY(360), xatlib.NX(315), xatlib.NY(60), xconst.ST(42), 0, 0, 100, 0, xatlib.NY(12), "left", 2);
            var _local1:* = xatlib.AddBackground(this.Dia, xatlib.NX(250), xatlib.NY((60 + 50)), xatlib.NX(270), xatlib.NY(30));
            this.xurltextbox = xatlib.AddTextField(this.Dia, xatlib.NX(250), xatlib.NY(((60 + 50) + 5)), xatlib.NX(270), xatlib.NY(30));
            this.xurltextbox.type = TextFieldType.INPUT;
            this.xurltextbox.defaultTextFormat = main.fmt;
            this.Dia.getgroup = new xBut(this.Dia, xatlib.NX(((640 - 30) - 80)), xatlib.NY((60 + 50)), xatlib.NX(80), xatlib.NY(30), xconst.ST(131), this.GetTextGroup);
            this.bpw = xatlib.NX(580);
            this.bph = xatlib.NY(((300 - 50) - 50));
            this.bpx = xatlib.NX(30);
            this.bpy = xatlib.NY((100 + 50));
            var _local2:* = xatlib.AddBackground(this.Dia, this.bpx, this.bpy, this.bpw, this.bph);
            this.backgroup = new MovieClip();
            _local2.addChild(this.backgroup);
            this.backgroup.Width = this.bpw;
            var _local3:* = xatlib.AddBackground(this.Dia, (this.bpx + 1), (this.bpy + 1), ((this.bpw - 2) - xatlib.NX(16)), (this.bph - 2), 0);
            this.backgroup.mask = _local3;
            this.bscrollmc = new xScroll(this.Dia, ((this.bpx + this.bpw) - xatlib.NX(16)), this.bpy, xatlib.NX(16), this.bph, xatlib.NX(16), xatlib.NX(32), 30, (10 * 100), (0 * 100), this.onBackScrollChange);
            this.Dia.makegroup = new xBut(this.Dia, (xatlib.NX(((640 - 30) - 80)) - 100), xatlib.NY(359), (xatlib.NX(80) + 100), xatlib.NY(30), xconst.ST(43), this.CreateGrpRel);
        }
        function EditClose(_arg1){
            var _local2:*;
            if (this.NewLobbySet != undefined){
                todo.MainFlagBits = (todo.MainFlagBits & ~(xconst.f_Lobby));
                _local2 = 0;
                while (_local2 < this.gnode.length) {
                    if (this.gnode[_local2].sel){
                        todo.MainFlagBits = (todo.MainFlagBits | xconst.f_Lobby);
                        todo.BackVars[1] = this.gnode[_local2].n;
                        todo.BackVars[2] = xatlib.xInt(this.gnode[_local2].r);
                        break;
                    };
                    _local2++;
                };
                this.eip(16);
                main.ctabsmc.tabs[1].t = todo.BackVars[1];
                main.ctabsmc.tabs[1].h = (main.ctabsmc.tabs[1].t + " ");
                this.group = todo.BackVars[2];
                if ((xconst.f_Lobby & todo.MainFlagBits)){
                    main.ctabsmc.tabs[0].Skip = undefined;
                    main.ctabsmc.tabs[1].Skip = undefined;
                } else {
                    main.ctabsmc.tabs[0].Skip = true;
                    main.ctabsmc.tabs[1].Skip = true;
                };
                main.ctabsmc.UpdateTabs(0);
            };
            main.DialogClose();
        }
        function PicPress(_arg1){
            this.eip_back = _arg1.currentTarget.back;
            chat.mainDlg.UpdateBackground(this.eip_back);
            this.eip(4);
            this.ClearBackPane();
            this.mceditbackground_close();
        }
        function CloseStuff(){
            if (this.mcbackbackgroundb){
                this.Dia.removeChild(this.mcbackbackgroundb);
            };
            this.mcbackbackgroundb = null;
            if (this.mcbackbackgroundmask){
                this.Dia.removeChild(this.mcbackbackgroundmask);
            };
            this.mcbackbackgroundmask = null;
            if (this.bscrollmc){
                this.bscrollmc.Delete();
            };
            this.bscrollmc = null;
            if (this.Dia){
                this.mceditbackground.removeChild(this.Dia);
            };
            this.Dia = new MovieClip();
            this.mceditbackground.addChild(this.Dia);
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.text.*;
    import flash.geom.*;

    public class hints extends Sprite {

        var HintDisplayed:Boolean = false;
        var HintMaxWidth:Number;
        var HintBoxx:Number;
        var HintBoxy:Number;
        var heartbeatduration:Number = 83;
        var Hintvis:Boolean = false;
        var HintMc;
        var HintUpdate:Number = -1;
        var Hinttxt:String;
        var HintPos:Number;
        var HintHldMc:MovieClip;
        var Hintsize:Number;

        public function hints(){
            addEventListener(Event.ENTER_FRAME, this.tick);
        }
        public function HintOff(_arg1=0){
            this.Hint(0, 0, "", false);
        }
        public function AddEasyHint(_arg1, _arg2, _arg3=undefined){
            if (!_arg3){
                _arg3 = {};
            };
            _arg3.Hint = _arg2;
            _arg3.mc = _arg1;
            _arg1.hint = _arg3;
            _arg1.addEventListener(MouseEvent.ROLL_OVER, this.EasyHint);
            _arg1.addEventListener(MouseEvent.ROLL_OUT, this.HintOff);
            _arg1.buttonMode = true;
        }
        public function EasyHint(_arg1:MouseEvent){
            var _local2:* = _arg1.currentTarget;
            this.Hint(xatlib.xInt(_local2.hint["Boxx"]), xatlib.xInt(_local2.hint["Boxy"]), _local2.hint["Hint"], true, xatlib.xInt(_local2.hint["Pos"]), xatlib.xInt(_local2.hint["size"]), xatlib.xInt(_local2.hint["MaxWidth"]), _local2.hint["mc"]);
        }
        public function tick(_arg1:Event){
            if (this.HintUpdate >= 0){
                if (this.HintUpdate > this.heartbeatduration){
                    this.HintUpdate = (this.HintUpdate - this.heartbeatduration);
                } else {
                    this.HintUpdate = 0;
                };
                if (this.HintUpdate == 0){
                    this.HintDisplayed = this.Hintvis;
                    if (todo.w_hints){
                        this.DoHint(this.HintBoxx, this.HintBoxy, this.Hinttxt, this.Hintvis, this.HintPos, this.Hintsize, this.HintMaxWidth, this.HintMc);
                        this.HintUpdate = -1;
                    };
                };
            };
        }
        public function Hint(_arg1:Number, _arg2:Number, _arg3:String, _arg4:Boolean=true, _arg5:Number=0, _arg6:Number=0, _arg7:Number=0, _arg8=undefined){
            if (this.HintDisplayed == true){
                if (_arg4 == true){
                    this.HintUpdate = 0;
                } else {
                    this.HintUpdate = 500;
                };
            } else {
                this.HintUpdate = 1000;
            };
            this.HintBoxx = _arg1;
            this.HintBoxy = _arg2;
            this.Hinttxt = _arg3;
            this.Hintvis = _arg4;
            this.HintPos = _arg5;
            this.Hintsize = _arg6;
            this.HintMaxWidth = _arg7;
            this.HintMc = _arg8;
        }
        public function DoHint(_arg1:Number, _arg2:Number, _arg3:String, _arg4:Boolean, _arg5:Number, _arg6:Number, _arg7:Number, _arg8){
            var _local10:TextFormat;
            var _local16:Point;
            var _local9 = (_arg7 > 0);
            if ((((_arg7 < 2)) || ((_arg7 == undefined)))){
                _arg7 = 200;
            };
            if (this.HintHldMc != undefined){
                this.HintHldMc.parent.removeChild(this.HintHldMc);
                this.HintHldMc = undefined;
            };
            _local10 = new TextFormat();
            _local10.align = "left";
            _local10.color = todo.ButColW;
            _local10.font = "_sans";
            _local10.size = _arg6;
            if ((((_local10.size == undefined)) || ((_local10.size <= 1)))){
                _local10.size = 12;
            };
            var _local11:* = new TextField();
            _local11.text = _arg3;
            if (_local9){
                _local11.autoSize = "left";
                _local11.multiline = true;
                _local11.wordWrap = true;
            };
            _local11.setTextFormat(_local10);
            var _local12:* = (_local11.textWidth + 4);
            _local11.width = _local12;
            var _local13:* = (_local11.textHeight + 2);
            if (_local9){
                _local13 = _local11.height;
            };
            _local11.height = _local13;
            if (!_local9){
                _local11.height = (_local11.height + 2);
            };
            if (_arg8 != undefined){
                _local16 = new Point();
                _local16 = _arg8.localToGlobal(_local16);
                _arg1 = (_arg1 + _local16.x);
                _arg2 = (_arg2 + _local16.y);
            };
            this.HintHldMc = new MovieClip();
            this.HintHldMc.x = _arg1;
            this.HintHldMc.y = ((_arg2 - _local13) - 6);
            if (_arg5 == 1){
                this.HintHldMc.y = _arg2;
                this.HintHldMc.x = ((_arg1 - _local12) - 4);
            };
            if (_arg5 == 2){
                this.HintHldMc.y = _arg2;
                this.HintHldMc.x = _arg1;
            };
            if (_arg5 == 3){
                this.HintHldMc.x = ((_arg1 - _local12) - 4);
            };
            var _local14:* = 0;
            var _local15:* = 2;
            this.HintHldMc.graphics.beginFill(todo.ButCol, 90);
            this.HintHldMc.graphics.lineStyle(1, todo.ButColW, 100);
            this.HintHldMc.graphics.drawRect(_local14, _local15, _local12, _local13);
            this.HintHldMc.graphics.endFill();
            this.HintHldMc.addChild(_local11);
            addChild(this.HintHldMc);
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class sc_up extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class GetStuff extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class checkbox extends MovieClip {

        public var tick:MovieClip;

    }
}//package 
﻿package {
    import flash.media.*;

    public dynamic class beepsnd extends Sound {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class coins2 extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class returnicon extends MovieClip {

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;

    public class im extends Sprite {

        var ImCount;
        var ImHash;
        public var ImInit = false;
        var sending_lc3:LocalConnection;
        var ImInfo;
        var receiving_lc3:LocalConnection;

        function sending_lc3_Status(_arg1:Event){
        }
        public function onMsg(_arg1){
            this.doxatMsg(_arg1);
        }
        public function ImPostMessage(_arg1, _arg2, _arg3=undefined){
            var Text:* = _arg1;
            var IMtype:* = _arg2;
            var d:* = _arg3;
            if (!d){
                d = main.ctabsmc.TabUser();
            };
            var uid:* = xatlib.FindUser(d);
            todo.Message.push({
                n:0,
                t:Text,
                u:todo.w_userno,
                s:2,
                d:d
            });
            if (IMtype == undefined){
                IMtype = todo.Users[uid].Location;
            };
            if (IMtype == 128){
                try {
                    main.mcLoad.IMxatsendMsg(Text, todo.Users[uid].registered);
                } catch(e:Error) {
                };
            } else {
                this.sending_lc3.send(("a" + chat.fromxat), "onMsg", Text, todo.Users[uid].registered);
            };
            todo.DoUpdateMessages = true;
            todo.ScrollDown = true;
        }
        public function IMtoId(_arg1:String, _arg2:Number){
            _arg1 = ((String(_arg2) + "$") + _arg1);
            if (this.ImCount == undefined){
                this.ImCount = (2000000000 - (100000 * 2));
                this.ImHash = new Object();
            };
            if (xatlib.xInt(this.ImHash[_arg1]) > 0){
                return (this.ImHash[_arg1]);
            };
            this.ImHash[_arg1] = this.ImCount;
            return (this.ImCount++);
        }
        public function IMComms(){
            this.sending_lc3 = new LocalConnection();
            this.sending_lc3.addEventListener(StatusEvent.STATUS, this.sending_lc3_Status);
            this.receiving_lc3 = new LocalConnection();
            if ((global.xc & 0x0800)){
                this.receiving_lc3.client = this;
                try {
                    this.receiving_lc3.connect(("a" + chat.toxat));
                } catch(error:ArgumentError) {
                };
            };
        }
        public function IM_onDelete(_arg1:Number){
            main.hint.HintOff();
            main.utabsmc.SetVisitorsTab();
            var _local2:* = main.ctabsmc.tabs[_arg1].ImIndex;
            main.ctabsmc.tabs.splice(_arg1, 1);
            if (todo.w_useroom == todo.w_room){
                main.ctabsmc.UpdateTabs(0);
                main.ctabsmc.ColorTab(0, 0xFFFFFF);
            } else {
                main.ctabsmc.UpdateTabs(1);
                main.ctabsmc.ColorTab(1, 0xFFFFFF);
            };
            todo.DoUpdateMessages = true;
            todo.DoBuildUserList = true;
            todo.ScrollDown = true;
        }
        public function IM_onRelease(_arg1:Number){
            main.hint.HintOff();
            main.utabsmc.SetVisitorsTab();
            todo.DoUpdateMessages = true;
            todo.DoBuildUserListScrollUp = true;
            todo.ScrollDown = true;
            main.ctabsmc.UpdateTabs(_arg1);
            main.ctabsmc.ColorTab(_arg1, 0xFFFFFF);
        }
        public function doxatMsg(_arg1){
            var id:* = undefined;
            var uid:* = undefined;
            var Name:* = undefined;
            var IMtype:* = undefined;
            var Email:* = undefined;
            var Head:* = undefined;
            var CSV:* = undefined;
            var w:* = undefined;
            var av:* = undefined;
            var Text:* = _arg1;
            var tImCount:* = this.ImCount;
            CSV = Text.split(",");
            Head = CSV[0];
            IMtype = xatlib.xInt(CSV[1]);
            Email = CSV[2];
            Name = this.StripTags(CSV[3]);
            if (IMtype < 128){
                return;
            };
            if (Head == "s"){
                if (IMtype == 129){
                    try {
                        main.mcLoad.ImAimDoAd();
                    } catch(e:Error) {
                    };
                };
            };
            if (Head == "r"){
                this.ImInfo[IMtype] = undefined;
            };
            if (Head == "i"){
                this.ImInit = true;
                return;
            };
            if ((((Head == "r")) || ((Head == "s")))){
                w = 0;
                while (w < todo.Users.length) {
                    if (todo.Users[w].Location == IMtype){
                        xmessage.DeleteOneUserMc(w);
                        if (Head == "r"){
                            todo.Users[w].onsuper = false;
                            w = (w + 1);
                        } else {
                            todo.Users.splice(w, 1);
                        };
                    } else {
                        w = (w + 1);
                    };
                };
                return;
            };
            if (((((((!((Head == "c"))) && (!((Head == "m"))))) && (!((Head == "u"))))) && (!((Head == "o"))))){
                return;
            };
            if ((((Name == "")) || ((Name == undefined)))){
                Name = Email;
            };
            if ((((Email == "")) || ((Email == undefined)))){
                return;
            };
            if (((!((this.ImInfo == undefined))) && ((this.ImInfo[IMtype].Email == Email)))){
                id = todo.w_userno;
            } else {
                if (Head != "u"){
                    id = this.IMtoId(Email, IMtype);
                };
            };
            if (id != undefined){
                uid = xatlib.FindUser(id);
                if ((((uid < 0)) && (!((Head == "u"))))){
                    uid = (-1 + todo.Users.push({
                        u:id,
                        n:xatlib.NameNoXat(Name),
                        registered:Email,
                        Location:IMtype
                    }));
                };
            };
            if ((((id == todo.w_userno)) && (!((Head == "u"))))){
                return;
            };
            switch (Head){
                case "c":
                    todo.Users[uid].n = Name;
                    av = CSV[4];
                    if (av == "null"){
                        av = xatlib.SmilieUrl("AimAv", "sm2");
                        av = xatlib.Replace(av, "swf", "png");
                    };
                    todo.Users[uid].a = av;
                    todo.Users[uid].onsuper = (CSV[5].toLowerCase().indexOf("offline") == -1);
                    xmessage.DeleteOneUserMc(uid);
                    todo.Users[uid].MSNcid = xatlib.xInt(CSV[6]);
                    return;
                case "m":
                    CSV.splice(0, 4);
                    Text = this.StripTags(CSV.join(","));
                    break;
                case "u":
                    if (this.ImInfo == undefined){
                        this.ImInfo = new Object();
                    };
                    if (((!((this.ImInfo[IMtype] == undefined))) && ((this.ImInfo[IMtype].Email == undefined)))){
                        network.NetworkSendMsg(3, ((("/I," + IMtype) + ",") + Email), 0, 0, 3);
                    };
                    this.ImInfo[IMtype] = {Email:Email};
                    return;
                case "o":
            };
            var d:* = id;
            if (id == todo.w_userno){
                d = main.ctabsmc.TabUser();
            };
            var TabNumber:* = main.ctabsmc.TabAdd(d, 0xFFFFFF, (8 + 1), this.IM_onRelease, this.IM_onDelete);
            main.ctabsmc.tabs[TabNumber].IMtype = IMtype;
            if (Head == "o"){
                if (main.ctabsmc.tabs[TabNumber].ImIndex == undefined){
                    main.ctabsmc.UpdateTabs(TabNumber);
                    todo.DoUpdateMessages = true;
                    todo.ScrollDown = true;
                };
                main.ctabsmc.tabs[TabNumber].ImIndex = CSV[6];
                return;
            };
            if (main.ctabsmc.TabSelected() != TabNumber){
                main.ctabsmc.ColorTab(TabNumber, 0x9900);
            };
            main.ctabsmc.UpdateTabs();
            if (main.ctabsmc.TabSelected() != TabNumber){
                main.ctabsmc.GlowTab(TabNumber);
            };
            todo.Message.push({
                n:0,
                t:Text,
                u:id,
                s:2,
                d:d
            });
            todo.DoMessageSnd = true;
            todo.DoUpdateMessages = true;
            todo.ScrollDown = true;
        }
        public function StripTags(_arg1){
            var _local4:*;
            if (_arg1 == undefined){
                return (undefined);
            };
            var _local2:* = _arg1.split("<");
            var _local3:* = 1;
            while (_local3 < _local2.length) {
                _local4 = _local2[_local3].split(">");
                if (_local4[1] == undefined){
                    _local2[_local3] = "";
                } else {
                    _local2[_local3] = _local4[1];
                };
                _local3++;
            };
            return (xatlib.searchreplace("&#160;", " ", _local2.join("")));
        }
        public function ImInviteAll(){
            var _local4:*;
            this.ImInit = true;
            if (!this.ImInit){
                _local4 = xatlib.PageUrl(6);
                xatlib.getURL(_local4, "_blank");
                xatlib.UrlPopup(xconst.ST(144), _local4, xconst.ST(145));
                return;
            };
            if ((((this.ImInfo[128] == undefined)) && ((this.ImInfo[129] == undefined)))){
                xatlib.GeneralMessage("", xconst.ST(146));
                return;
            };
            var _local1:* = 0;
            var _local2:* = todo.Users.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (((todo.Users[_local3].onsuper) && (todo.Users[_local3].Location))){
                    _local1++;
                    viewprofile.ViewprofileImInv(todo.Users[_local3].u);
                };
                _local3++;
            };
            xatlib.GeneralMessage("", xconst.ST(147, _local1));
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.utils.*;
    import flash.filters.*;
    import flash.geom.*;

    public class swfsmiley extends Sprite {

        private static const sInfo = "tomb,0,40,balloon,40,24,egg,0,28,magic8ball,0,22,paint,0,50,fireworks,16,42,bomb,16,40,shark,0,46,bugs,0,44,globe,0,22,dood,0,50,lb,0,24,shiver,0,24,pie,0,24,ttth,0,22,bye,36,36,sball,140,28,grin,0,22,anime,0,32,purple,0,38,costumes,0,46,pty,0,50,party,0,50,blood,0,20,confetti,0,42,hearts,57,50,champagne,40,50,snows,0,26,stickman2,37,50,stickman3,82,50,stickymca,66,50,stickairguitar,82,50,stickangry,42,50,stickkungfu,31,50,hush,0,24,count,1,22,stick,12,50,sman,1,20,eatleg,36,38,crazy,24,32,pole,72,48,lhand,72,44,mangekyou,72,20,sleep,36,36,pilgrimm,36,42,awe,72,20,toast,72,50,bio,18,24,confused,72,20,redface,72,20,smile,72,20,biggrin,72,20,cool,36,22,eek,72,20,frown,72,20,wink,72,20,tongue,72,20,mad,72,20,crying,6,22,rolleyes,72,20,star,1,20,kiss,36,20,a,1,30,vampire,72,20,sry,1,20,crs,1,20,sleepy,36,20,pirate,1,20,d,36,20,un,1,20,nod,24,20,scn,1,20,love,72,20,gagged,8,20,nme,24,20,roll,24,20,chkl,24,20,swt,18,20,blk,72,20,eyes,1,20,ill,1,20,smirk,36,20,dead,12,20,xp,1,20,hello,12,20,think,24,20,mischief,1,20,yum,24,20,goo,72,20,zip,1,22,yawn,36,20,smirk2,72,20,swear,1,20,cry2,72,22,omg,36,20,puke,24,20,what,72,28,o_o,12,20,shock,36,20,beye,1,20,cyc,6,20,wary,72,20,wt,36,20,xd,1,20,contempt,72,20,fedup,72,20,chew,12,20,horror,72,20,ashamed,72,20,tipsy,36,20,look,72,20,shifty,24,20,twitch,36,20,spin,12,20,frk,1,20,wh,1,22,mmy,36,38,hypno,36,42,grim,72,44,6,1,22,dizzy,18,20,cdn,18,28,fs,72,28,bat,72,50,rage,4,20,ghost,72,26,headband,2,40,fan,9,28,tear,36,26,comeon,9,28,apple,1,28,lemon,1,22,grump,72,20,doh,72,20,pouty,72,20,pear,1,30,maniac,3,20,3d,72,24,plum,1,28,ahhh,72,20,haira1,72,26,orange,1,20,squint,72,20,shirt,1,26,quiver,36,20,banana,8,38,haira2,72,32,soccer,1,20,haira5,72,34,haira3,72,34,haira4,72,38,pkn,1,24,astro,1,24,football,1,26,pilgrimf,36,36,stock,36,32,indian2,36,40,indian,36,46,bulb,1,42,tree,6,42,chef,36,32,dining,8,30,indian3,36,44,feast,1,26,bell,72,42,beard,36,30,ches,18,50,noface,1,20,cane,9,34,elf,36,36,loser,36,40,give,72,40,rockon,18,38,sack,1,40,thumbsup,18,32,palms,18,32,scarf,72,32,sdeer,1,28,clap,8,22,shh,36,30,thumbsdown,18,32,sfeet,36,28,flip,18,32,hug,72,44,sledge,12,30,slist,12,34,hmm,24,22,smound,36,34,backoff,72,24,hairm2,72,24,hehe,4,24,spull,9,32,wreath,1,34,ono,1,20,xb4,1,32,xb1,1,50,sgift,72,50,skiss,24,28,beat,4,18,hairm3,72,22,bheart,72,34,nrd,1,22,punk,1,20,emo,1,20,cupid,1,44,card,72,50,hairf2,72,26,hug2,36,26,hairf3,72,26,ilu,36,36,hug3,18,28,hairf4,72,26,ring,36,36,rose,1,16,goth,36,30,rose2,24,30,g1,1,20,ninja,1,20,cd,3,28,cb,1,26,police,72,24,pce,36,38,clink,18,32,bride,1,30,jester,72,30,phat,1,38,nurse,72,22,cake,72,44,dhat,36,28,sphinx,72,28,dance2,18,30,dance,18,36,dance3,18,38,groom,1,26,crown,72,28,facemask,72,20,partyhat,72,26,photo,72,30,sherlock,18,36,popper,72,48,straw,36,22,clover2,36,40,prop,4,30,halo,72,32,grad,36,30,dunce,9,38,drink,6,34,pot,72,42,ribbon,1,24,igirl,36,36,iman,1,20,pray,72,24,rainbow,36,38,cloud,72,28,shirts,1,26,trophy,72,40,tap,72,34,shi,36,40,bb,72,30,ball,1,20,helmet,1,20,x,1,38,chest,72,20,foam,18,40,weight,72,36,gst,1,20,eye,1,22,8ball,36,16,pm,1,24,kirb,24,24,tox,1,20,alien,1,20,bby,36,26,bot,4,22,pmg,1,20,inv,18,20,inv3,18,18,sonic,36,22,shadow,36,22,luigi,36,22,mario,36,22,inv2,18,20,mushroom,36,24,yoshi,1,24,countb,1,34,smashball,1,24,ness,36,28,tri,1,30,mephiles,36,30,lucario,36,30,xj9,72,28,mewtwo,36,28,link,36,26,arbiter,1,22,nights,36,26,kermit,1,20,lolwut,1,24,hk,36,20,beaker,1,28,dv,1,22,beast,1,22,homer,1,28,3tomoe,72,20,pikachu,36,30,sm,1,24,pball,1,20,wwe,1,26,a1,1,20,x3,1,24,dog,1,20,pig,1,20,nko,1,28,mk,1,24,cat,1,18,panda,1,20,penguin,1,20,cc,1,22,b,1,20,ccc,1,20,cotton,1,24,bear,36,22,c,1,20,o,1,20,t,1,18,i,36,20,mo,1,26,so,1,22,oo,1,20,sb,1,20,ph,1,22,yt,1,18,dmd,72,22,p,1,22,ush,1,20,ipod,1,18,ip,1,20,bin,36,30,sun,36,20,r,1,20,li,1,20,rain,6,22,l,1,22,f,36,22,n,24,24,pgm,1,50,rad,1,20,u,1,20,mgp,1,50,y,1,18,boy,1,22,grl,1,22,scb,1,20,star,1,20,yy,36,22,moon,1,26,note,1,20,ao,1,16,hex,1,22,rubik,1,22,cir,18,26,cdy,1,22,deer,6,28,snta,1,24,xday,18,30,xtre,6,34,g,1,22,xstk,1,22,mtoe,1,24,hly,1,26,ghat,1,24,stickman,18,50,turkey,1,18,clover,1,24,danny,72,30,qbone,36,24,ss,2,36,mc,1,24,mario8,4,20,sad,36,20,no,72,20,okp,1,24,nop,1,20,rolling,12,20,mate,1,32,jolly,8,20,amy,1,32,argue,6,20,cry,3,22,hippo,1,30,lips,1,24,airplane,4,22,dynamite,18,20,surprise,1,24,parachute,1,26,pull,1,20,grumpy,1,24,allpowers,24,40,topman,18,22,powers,18,22,snow,1,24,subhide,18,24,mirror,18,22,mod8,18,22,nofollow,18,22,invert,18,22,reghide,18,28,zoom,18,22,nopc,18,22,tempmod,18,22,noaudies,18,24,hat,18,32,red,72,22,green,72,22,light,72,22,heart,18,28,blue,72,22,shuffle,18,28,square,18,22,animate,18,26,cycle,72,22,nameglow,18,22,show,18,26,clear,18,16,pink,18,22,boot,18,24,superkick,36,42,hexagon,18,26,invisible,36,22,octogram,18,28,guestself,72,40,diamond,18,28,sinbin,72,40,hands,18,34,fade,72,22,gag,18,22,hairm,72,32,hairf,72,30,six,72,50,angel,72,48,mute,18,24,radio,36,42,fruit,18,36,sport,18,24,num,18,22,halloween,72,48,status,18,24,snowy,18,26,christmas,18,32,thanksgiving,9,34,dx,72,50,tempmem,18,22,valentine,18,34,flashrank,36,22,blueman,18,22,irish,72,34,";
        private static const NiceFrames = new Array(1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, 72);
        private static const AFrames = {
            forehead:36,
            twist:18,
            updown:18,
            inout:18
        };
        static const LayerTypes = new Array(0, 1, 0, 0, 1, 1);
        static const NumLayers = LayerNames.length;
        static const LayerNames = new Array("Base", "Behind", "Bkg", "Face", "Hair", "Hands");
        static const yt = 36;
        static const a = new Array(1, 1, 1, 1, 1, 1, 1, 0.878611111111111, 0.734444444444444, 0.605, 0.490555555555556, 0.353611111111111, 0.223333333333333, 0.1275, 0.0577777777777777, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0611111111111113, 0.189444444444444, 0.356666666666667, 0.485555555555555, 0.645555555555556, 0.7775, 0.902222222222222, 1);
        private static const NiceFramesL = NiceFrames.length;
        static const al = a.length;
        static const lut36 = new Array(128, 150, 171, 192, 210, 225, 238, 247, 253, 0xFF, 253, 247, 238, 225, 210, 192, 171, 150, 128, 106, 85, 64, 46, 31, 18, 9, 3, 1, 3, 9, 18, 31, 46, 65, 85, 106);
        static const hcolor = {
            col0:0,
            col1:1,
            col2:2,
            col3:3,
            Back:0,
            Col:0
        };

        private static var wInfo;
        private static var TickDict = new Dictionary(true);
        private static var fInfo;
        static var SmileyGlow = xatlib.MakeGlow(0xFF, 1, 3);

        var rs;
        var NoOfSmilies;
        var Frames = 1;
        var NumToLoad;
        var Data;
        public var Parent;
        var NeedRoll = 0;
        var MaxW = 0;
        private var DidColor:Boolean;
        var cc = 0;
        var OurMc;
        public var Loading = 0;
        var tc = 0;
        var Base;
        var ar;

        public function swfsmiley(_arg1, _arg2){
            var _local3:*;
            var _local4:*;
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local10:*;
            this.ar = int((Math.random() * al));
            this.rs = int((Math.random() * yt));
            super();
            var _local5:* = ((_arg1.SF & 2) == 0);
            if (!fInfo){
                _local7 = sInfo.split(",");
                _local8 = _local7.length;
                fInfo = new Object();
                wInfo = new Object();
                _local4 = 0;
                while (_local4 < _local8) {
                    fInfo[_local7[_local4]] = int(_local7[(_local4 + 1)]);
                    wInfo[_local7[_local4]] = int(_local7[(_local4 + 2)]);
                    _local4 = (_local4 + 3);
                };
            };
            this.Parent = _arg1;
            if (_arg1.SC){
                _arg1.SC = String(_arg1.SC);
            };
            var _local6:* = "";
            if (_arg1.SE){
                _local6 = _arg1.SE.split(",");
            };
            if (_arg2 == "fade"){
                _arg1.SP = (_arg1.SP | smiley.b_fade);
            };
            if (_arg1.SA.indexOf("#") < 0){
                _arg1.SF = (_arg1.SF | smiley.f_Simple);
            };
            if (((!(xconst.pssh[_arg2])) || (!((_arg1.SF & smiley.f_Simple))))){
                _arg1.SP = (_arg1.SP & ~(smiley.b_glow));
            };
            this.OurMc = new Array();
            this.OurMc.push({
                Name:_arg2,
                Type:0,
                SC:_arg1.SC,
                SP:_arg1.SP
            });
            if (_arg1.ST){
                this.OurMc.push({
                    Name:_arg1.ST,
                    Type:1,
                    SC:_arg1.SC,
                    SP:_arg1.SP
                });
            };
            if (_local6.length > 0){
                _local5 = false;
                _local3 = 0;
                while (_local3 < _local6.length) {
                    this.OurMc.push({
                        Name:_local6[_local3],
                        Type:2,
                        SC:_local6[(_local3 + 1)],
                        SP:_local6[(_local3 + 2)]
                    });
                    _local3 = (_local3 + 3);
                };
            };
            if (!(_arg1.SF & smiley.f_Simple)){
                _local7 = this.Parent.SA.substr(1, (this.Parent.SA.length - 2)).toLowerCase().split("#");
                _local9 = _local7.length;
                _local10 = 0;
                while (_local10 < _local9) {
                    if (AFrames[_local7[_local10]]){
                        this.Frames = this.framesrequired(new Array(this.Frames, AFrames[_local7[_local10]]));
                    };
                    _local10++;
                };
            };
            this.NoOfSmilies = this.OurMc.length;
            this.NumToLoad = 0;
            _local4 = 0;
            while (_local4 < this.NoOfSmilies) {
                this.OurMc[_local4].mc = xatlib.LoadMovie(undefined, xatlib.SmilieUrl(this.OurMc[_local4].Name, "sm2", _local5), this.SmileyLoaded);
                this.NumToLoad++;
                _local4++;
            };
            this.Parent.addEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp, false, 0, true);
            if (this.NumToLoad == 0){
                this.SmileyLoaded();
            };
        }
        static function MasterTick(){
            var _local1:*;
            for (_local1 in TickDict) {
                _local1.tick();
            };
        }

        private function framesrequired(_arg1:Array):int{
            var _local5:int;
            var _local6:int;
            var _local7:int;
            var _local8:int;
            _arg1.sort((Array.NUMERIC | Array.DESCENDING));
            var _local2:int;
            while (_local2 < (_arg1.length - 1)) {
                if (_arg1[_local2] == _arg1[(_local2 + 1)]){
                    _arg1.splice(_local2, 1);
                    _local2 = 0;
                };
                _local2++;
            };
            var _local3:* = _arg1.length;
            var _local4 = 1;
            while (_local4 < _local3) {
                _local5 = _arg1[0];
                _local6 = _arg1[_local4];
                while (_local6 != 0) {
                    _local7 = (_local5 % _local6);
                    _local5 = _local6;
                    _local6 = _local7;
                };
                _local8 = ((_arg1[0] / _local5) * _arg1[_local4]);
                if (_local8 > _arg1[0]){
                    _arg1.unshift(_local8);
                    if (_local8 >= 72){
                        break;
                    };
                    _local3 = _arg1.length;
                    _local4 = 1;
                };
                _local4++;
            };
            return (_arg1[0]);
        }
        function RollOverLayer(_arg1){
            if (this.tc <= 2){
                return (true);
            };
            if (this.NeedRoll == 2){
                return (_arg1.RollOver(1));
            };
            return (true);
        }
        private function ColorList(_arg1, _arg2:DisplayObjectContainer, _arg3:String=""):Boolean{
            var _local4:DisplayObject;
            var _local7:*;
            var _local8:*;
            var _local9:*;
            var _local5:Boolean;
            var _local6:uint;
            while (_local6 < _arg2.numChildren) {
                _local4 = _arg2.getChildAt(_local6);
                if (_local4 == null){
                } else {
                    _local7 = hcolor[_local4.name];
                    if (_local7 != undefined){
                        _local7 = _arg1.Cols[_local7];
                        if ((((_local7 == "y")) || ((_local4.transform.colorTransform.color == 0)))){
                            if (_local7 == "y"){
                                _local7 = this.cc;
                                _local5 = true;
                            };
                            if (_local7 == 0){
                                _local7 = 1;
                            };
                            _local8 = new ColorTransform();
                            _local8.color = _local7;
                            _local4.transform.colorTransform = _local8;
                        };
                        this.DidColor = true;
                    } else {
                        if ((_arg2.getChildAt(_local6) is DisplayObjectContainer)){
                            _local9 = this.ColorList(_arg1, DisplayObjectContainer(_local4), (_arg3 + "    "));
                            _local5 = ((_local5) || (_local9));
                        };
                    };
                };
                _local6++;
            };
            return (_local5);
        }
        function ColorLayer(_arg1, _arg2, _arg3){
            var _local6:*;
            var _local7:*;
            var _local8:*;
            var _local9:*;
            if (_arg3 == "Face"){
                return (false);
            };
            this.DidColor = _arg1.Coloring;
            var _local4:* = (((this.tc < 2)) || (_arg1.Coloring));
            if (!_arg1.Cols){
                _local7 = String(_arg2).split("#");
                _arg1.Cols = new Array();
                _local8 = 0;
                _local9 = 0;
                while (_local8 < 4) {
                    _local6 = _local7[_local9];
                    if ((((_local6 == undefined)) && ((_local8 == 0)))){
                        return (false);
                    };
                    if (_local6 == undefined){
                        _local9 = 0;
                        _local6 = _local7[0];
                    };
                    if (_local6 != "y"){
                        _local6 = xatlib.xInt(_local6);
                    };
                    if (_local6 !== 0){
                        var _temp1 = _local8;
                        _local8 = (_local8 + 1);
                        var _local10 = _temp1;
                        _arg1.Cols[_local10] = _local6;
                    };
                    _local9++;
                };
            };
            if ((((_arg1.Cols[0] === 0)) || ((_arg1.Cols[0] === undefined)))){
                return (false);
            };
            var _local5:* = ((_arg1.Coloring) || (this.ColorList(_arg1, DisplayObjectContainer(_arg1))));
            if (((this.DidColor) || ((this.tc < 2)))){
                return (_local5);
            };
            _local5 = _arg1.Cols[0];
            if (((!(_local5)) || ((_local5 == "")))){
                return (false);
            };
            _local6 = _local5;
            if (_local5 == "y"){
                _local6 = this.cc;
            };
            xatlib.McSetRGB(_arg1, _local6);
            if (_local5 == "y"){
                return (true);
            };
            return (false);
        }
        function RolloverHandler(_arg1:MouseEvent){
            if (this.tc > 2){
                this.NeedRoll = 2;
            };
        }
        function tick(){
            var n:* = undefined;
            var k:* = undefined;
            var i:* = undefined;
            var DelAll:* = undefined;
            var Del0:* = undefined;
            var r:* = undefined;
            var g:* = undefined;
            var b:* = undefined;
            var OurMc_n:* = undefined;
            var Del:* = undefined;
            var OurMc_n_Layers_k:* = undefined;
            var Del2:* = undefined;
            var tickret:* = undefined;
            try {
                this.tc++;
                DelAll = (this.tc > 1);
                Del0 = DelAll;
                this.Loading = 0;
                r = lut36[((this.tc + this.rs) % yt)];
                g = lut36[(((this.tc + this.rs) + 24) % yt)];
                b = lut36[(((this.tc + this.rs) + 12) % yt)];
                this.cc = (((r << 16) + (g << 8)) + b);
                n = 0;
                while (n < this.NoOfSmilies) {
                    OurMc_n = this.OurMc[n];
                    if (!OurMc_n.mc){
                    } else {
                        if (!OurMc_n.Layers){
                        } else {
                            Del = Del0;
                            for (k in OurMc_n.Layers) {
                                OurMc_n_Layers_k = OurMc_n.Layers[k];
                                Del2 = Del0;
                                tickret = undefined;
                                if (!OurMc_n_Layers_k){
                                } else {
                                    if (((OurMc_n_Layers_k.RollOver) && (this.RollOverLayer(OurMc_n_Layers_k)))){
                                        Del2 = false;
                                    };
                                    if ((((((this.tc == 2)) && (OurMc_n_Layers_k.Go))) && (OurMc_n_Layers_k.Go([this.Parent.SA, OurMc_n.SC, (this.Parent.SF | (n) ? 0 : 32)])))){
                                        Del2 = false;
                                    };
                                    if ((((((((n == 0)) && ((this.OurMc[0].SP & smiley.b_glow)))) && ((((k == "Bkg")) || ((k == "Base")))))) && (this.GlowLayer(OurMc_n.mc)))){
                                        Del2 = false;
                                    };
                                    if ((((k == "Hands")) && (this.HandsLayer(OurMc_n_Layers_k, OurMc_n)))){
                                        Del2 = false;
                                    };
                                    if (((((!((OurMc_n.SC == undefined))) && (((((!((n == 0))) || ((k == "Bkg")))) || ((k == "Base")))))) && (this.ColorLayer(OurMc_n_Layers_k, OurMc_n.SC, k)))){
                                        Del2 = false;
                                    };
                                    if ((((OurMc_n.SP & smiley.b_fade)) && (this.FadeLayer(OurMc_n_Layers_k)))){
                                        Del2 = false;
                                    };
                                    if ((((((this.tc > 1)) && (OurMc_n_Layers_k.Tick))) && (_local4))){
                                        Del2 = false;
                                    };
                                    if (OurMc_n_Layers_k.Loading){
                                        this.Loading = (this.Loading | OurMc_n_Layers_k.Loading());
                                    };
                                    if (Del2){
                                        delete OurMc_n.Layers[k];
                                    } else {
                                        var _local4:Boolean;
                                        Del = _local4;
                                        DelAll = _local4;
                                    };
                                    if ((tickret is Array)){
                                        if (this.x){
                                            this.x = 0;
                                        };
                                        if (this.y){
                                            this.y = 0;
                                        };
                                        if (this.rotation){
                                            this.rotation = 0;
                                        };
                                        if (this.scaleX != 1){
                                            this.scaleX = 1;
                                        };
                                        if (this.scaleY != 1){
                                            this.scaleY = 1;
                                        };
                                        if (tickret[0]){
                                            this.x = (this.x + tickret[0]);
                                        };
                                        if (tickret[1]){
                                            this.y = (this.y + tickret[1]);
                                        };
                                        if (tickret[2]){
                                            this.rotation = (this.rotation + tickret[2]);
                                        };
                                        if (tickret[3]){
                                            this.scaleX = (this.scaleY = tickret[3]);
                                        };
                                        if (tickret[4] != undefined){
                                            this.alpha = tickret[4];
                                        };
                                    } else {
                                        if ((tickret is Matrix)){
                                            this.transform.matrix = tickret;
                                        };
                                    };
                                };
                            };
                            if (Del){
                                delete OurMc_n.Layers;
                            };
                        };
                    };
                    n = (n + 1);
                };
                if ((((this.tc > 2)) && (this.NeedRoll))){
                    this.NeedRoll = 1;
                };
                if (((DelAll) && ((this.Parent.SF & smiley.f_NoCache)))){
                    delete TickDict[this];
                    return;
                };
            } catch(e:Error) {
            };
        }
        function GlowLayer(_arg1){
            var _local3:*;
            var _local2:* = MovieClip(_arg1.contentLoaderInfo.content);
            if (_local2.GlowCol == 1){
                return (false);
            };
            if (_local2.GlowFil == undefined){
                _local3 = _local2.GlowCol;
                if (_local3 == undefined){
                    _local2.GlowFil = SmileyGlow;
                } else {
                    _local2.GlowFil = xatlib.MakeGlow(_local3, 1, 3);
                };
            };
            if ((this.tc % 18) >= 4){
                this.filters = _local2.GlowFil;
            } else {
                this.filters = null;
            };
            return (true);
        }
        function HandsLayer(_arg1, _arg2){
            var Args:* = undefined;
            var n:* = undefined;
            var c:* = null;
            var i:* = undefined;
            var o:* = undefined;
            var mc:* = _arg1;
            var Parent:* = _arg2;
            if (this.tc < 2){
                return (true);
            };
            if (mc.action == undefined){
                return (false);
            };
            if (mc.mc == undefined){
                mc.mc = new Array();
                if (mc.bleft == undefined){
                    mc.bleft = false;
                };
                if (mc.bright == undefined){
                    mc.bright = false;
                };
                if (mc.bsame == undefined){
                    mc.bsame = false;
                };
                if (mc.action == undefined){
                    mc.action = 0;
                };
                if (Parent.SC){
                    Args = Parent.SC.split("#");
                } else {
                    Args = [];
                };
                for (n in Args) {
                    switch (Args[n]){
                        case "right":
                            mc.bright = true;
                            mc.bleft = false;
                            break;
                        case "left":
                            mc.bleft = true;
                            mc.bright = false;
                            break;
                        case "both":
                            mc.bright = (mc.bleft = false);
                            break;
                        case "same":
                            mc.bsame = true;
                            break;
                        case "diff":
                            mc.bsame = false;
                            break;
                        case "still":
                            mc.action = 0;
                            break;
                        case "inout":
                            mc.action = 1;
                            break;
                        case "forehead":
                            mc.action = 2;
                            break;
                        case "wrist":
                            mc.action = 3;
                            break;
                        case "updown":
                            mc.action = 4;
                            break;
                        case "together":
                            mc.action = 5;
                            break;
                        case "bat":
                            mc.action = 6;
                            break;
                    };
                };
                c = (Parent.mc.contentLoaderInfo.applicationDomain.getDefinition("hand") as Class);
                if (!c){
                    return (false);
                };
                if (!mc.bleft){
                    try {
                        mc.mc[0] = (new (c) as MovieClip);
                        mc.addChild(mc.mc[0]);
                        mc.mc[0].x = 0;
                        mc.mc[0].y = 10;
                    } catch(e:Error) {
                        return (false);
                    };
                };
                if (!mc.bright){
                    try {
                        mc.mc[1] = (new (c) as MovieClip);
                        mc.addChild(mc.mc[1]);
                        mc.mc[1].x = 19;
                        mc.mc[1].y = 10;
                    } catch(e:Error) {
                        return (false);
                    };
                };
                try {
                    switch (mc.action){
                        case 0:
                            break;
                        case 1:
                            mc.az = new Array(100, 103, 107, 111, 116, 121, 126, 132, 137, 137, 130, 125, 120, 114, 110, 106, 102, 100);
                            mc.d = mc.az.length;
                            break;
                        case 2:
                            mc.ax = new Array(0, 0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, -1);
                            mc.ay = new Array(0, 0, -1, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1);
                            mc.az = new Array();
                            i = 0;
                            while (i < mc.ay.length) {
                                mc.az.push((112 - (mc.ay[i] * 4)));
                                i = (i + 1);
                            };
                            mc.d = mc.ax.length;
                            break;
                        case 3:
                            mc.ar = new Array(0, 9, 18, 27, 36, 36, 27, 18, 9, 0, -9, -18, -27, -36, -36, -27, -18, -9);
                            mc.d = mc.ar.length;
                            break;
                        case 4:
                            mc.ay = new Array(0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0, -1, -2, -3, -3, -3, -2, -1);
                            mc.az = new Array();
                            i = 0;
                            while (i < mc.ay.length) {
                                mc.az.push((112 - (mc.ay[i] * 4)));
                                i = (i + 1);
                            };
                            mc.d = mc.ay.length;
                            break;
                        case 5:
                            mc.ax = new Array(10, 10);
                            mc.ay = new Array(5, 5);
                            mc.az = new Array();
                            i = 0;
                            while (i < mc.ay.length) {
                                mc.az.push((112 - (mc.ay[i] * 4)));
                                i = (i + 1);
                            };
                            mc.d = mc.ay.length;
                            break;
                        case 6:
                            mc.ay = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                            mc.ar = new Array(0, -10, -20, -30, -30, -30, -30, -30, -30, 20, 40, 60, 60, 50, 40, 30, 20, 10, 0);
                            mc.az = new Array();
                            i = 0;
                            while (i < mc.ay.length) {
                                mc.az.push((112 - (mc.ay[i] * 4)));
                                i = (i + 1);
                            };
                            mc.d = mc.ay.length;
                            break;
                        case 7:
                            mc.ax = new Array(-3, -3, -2, -1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, -1, -2, -3, -3, -3, -3);
                            mc.ay = new Array(6, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6);
                            mc.ar = new Array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 90, 90, 85, 90, 85, 90, 85, 90, 85, 90, 85, 90, 90, 90, 90, 70, 50, 30, 10, 0, 0, 0, 0, 0, 0);
                            mc.az = new Array();
                            i = 0;
                            while (i < mc.ay.length) {
                                mc.az.push((100 + (mc.ay[i] * 4)));
                                i = (i + 1);
                            };
                            mc.d = mc.ax.length;
                            break;
                    };
                } catch(e:Error) {
                    return (false);
                };
            };
            if (!mc.bleft){
                try {
                    mc.mc[0].x = ((mc.ax == undefined)) ? 0 : (0 + mc.ax[(this.tc % mc.d)]);
                    mc.mc[0].y = ((mc.ay == undefined)) ? 10 : (10 + mc.ay[(this.tc % mc.d)]);
                    mc.mc[0].scaleX = (mc.mc[0].scaleY = ((mc.az == undefined)) ? 1 : (mc.az[(this.tc % mc.d)] / 100));
                    mc.mc[0].rotation = ((mc.ar == undefined)) ? 0 : mc.ar[(this.tc % mc.d)];
                } catch(e:Error) {
                    return (false);
                };
            };
            if (!mc.bright){
                try {
                    o = (mc.bsame) ? 0 : (mc.d >> 1);
                    mc.mc[1].x = ((mc.ax == undefined)) ? 19 : (19 - mc.ax[((this.tc + o) % mc.d)]);
                    mc.mc[1].y = ((mc.ay == undefined)) ? 10 : (10 + mc.ay[((this.tc + o) % mc.d)]);
                    mc.mc[1].scaleX = (mc.mc[1].scaleY = ((mc.az == undefined)) ? 1 : (mc.az[((this.tc + o) % mc.d)] / 100));
                    mc.mc[1].scaleX = (mc.mc[1].scaleX * -1);
                    if (mc.ar != undefined){
                        mc.mc[1].rotation = mc.ar[((this.tc + o) % mc.d)];
                    };
                } catch(e:Error) {
                    return (false);
                };
            };
            return (true);
        }
        function SmileyLoaded(_arg1:Event=null){
            var k:* = undefined;
            var n:* = undefined;
            var i:* = undefined;
            var Simple:* = false;
            var OurMc_n:* = undefined;
            var Del:* = undefined;
            var mc:* = undefined;
            var j:* = undefined;
            var c:* = null;
            var matrix2:* = null;
            var cfilter:* = null;
            var OurMc_n_Layers_k:* = undefined;
            var e = _arg1;
            this.NumToLoad--;
            if (this.NumToLoad > 0){
                return;
            };
            var GotTop:* = false;
            var Wiggle:* = 0;
            n = 0;
            while (n < this.NoOfSmilies) {
                OurMc_n = this.OurMc[n];
                if (!OurMc_n.mc){
                } else {
                    OurMc_n.Uses++;
                    OurMc_n.Layers = {};
                    this.addChild(OurMc_n.mc);
                    if ((((OurMc_n.SP & smiley.b_fade)) || ((OurMc_n.SC == "y")))){
                        this.Frames = this.framesrequired(new Array(this.Frames, 36));
                    };
                    i = 0;
                    while (i < NumLayers) {
                        k = LayerNames[i];
                        Del = true;
                        while (1) {
                            if (k == "Base"){
                                try {
                                    mc = (OurMc_n.Layers[k] = MovieClip(OurMc_n.mc.contentLoaderInfo.content));
                                    if (((((!(mc.Frames)) && (!(mc.MaxW)))) && (wInfo[OurMc_n.Name]))){
                                        mc.Frames = fInfo[OurMc_n.Name];
                                        if (mc.Frames == 0){
                                            mc.Frames = 36;
                                        };
                                        j = 0;
                                        while (j < NiceFramesL) {
                                            if (mc.Frames == NiceFrames[j]){
                                                break;
                                            };
                                            if (mc.Frames > NiceFrames[j]){
                                            } else {
                                                mc.Frames = NiceFrames[j];
                                                break;
                                            };
                                            j = (j + 1);
                                        };
                                        mc.MaxW = wInfo[OurMc_n.Name];
                                        if (mc.MaxW == 40){
                                            mc.MaxW = 50;
                                        };
                                    };
                                    if (((mc.MaxW) && ((mc.MaxW > this.MaxW)))){
                                        this.MaxW = mc.MaxW;
                                    };
                                    if (mc.Frames){
                                        this.Frames = this.framesrequired(new Array(this.Frames, mc.Frames));
                                    };
                                    if (mc.NoCache){
                                        this.Parent.SF = (this.Parent.SF | smiley.f_NoCache);
                                    };
                                    if (((mc.Wiggle) && ((mc.Wiggle > Wiggle)))){
                                        Wiggle = mc.Wiggle;
                                    };
                                    if (mc.Simple){
                                        Simple = true;
                                    };
                                } catch(e:Error) {
                                };
                            } else {
                                if (!OurMc_n.mc.contentLoaderInfo.applicationDomain.hasDefinition(k)){
                                    break;
                                };
                                c = (OurMc_n.mc.contentLoaderInfo.applicationDomain.getDefinition(k) as Class);
                                if (!c){
                                    break;
                                };
                                mc = (new (c) as MovieClip);
                                OurMc_n.Layers[k] = mc;
                            };
                            if (!mc){
                                break;
                            };
                            if (!mc.width){
                                break;
                            };
                            if ((((OurMc_n.Type == 1)) && (!((k == "Bkg"))))){
                                break;
                            };
                            if ((((((n > 0)) && ((LayerTypes[i] == 0)))) && (!((OurMc_n.Type == 1))))){
                                break;
                            };
                            if ((((((((n == 0)) && ((this.Parent.SC == 1)))) && ((this.Parent.u == 42)))) && ((k == "Face")))){
                                matrix2 = new Array();
                                matrix2 = matrix2.concat([-1, 0, 0, 0, 0xFF]);
                                matrix2 = matrix2.concat([0, -1, 0, 0, 0xFF]);
                                matrix2 = matrix2.concat([0, 0, -1, 0, 0xFF]);
                                matrix2 = matrix2.concat([0, 0, 0, 1, 0]);
                                cfilter = new ColorMatrixFilter(matrix2);
                                mc.filters = [cfilter];
                            };
                            if (((((((!((n == 0))) && (LayerTypes[i]))) && (this.OurMc[0].Layers[k]))) && (this.OurMc[0].Layers[k]))){
                                delete this.OurMc[0].Layers[k];
                            };
                            if ((((OurMc_n.Type == 1)) && (this.OurMc[0].Layers.Bkg))){
                                delete this.OurMc[0].Layers.Bkg;
                            };
                            Del = false;
                            if ((((n > 0)) && (!((OurMc_n.Type == 1))))){
                                GotTop = true;
                            };
                            break;
                        };
                        if (Del){
                            delete OurMc_n.Layers[k];
                        };
                        i = (i + 1);
                    };
                    if (GotTop){
                        i = 0;
                        while (i < NumLayers) {
                            if (LayerTypes[i]){
                                delete this.OurMc[0].Layers[LayerNames[i]];
                            };
                            i = (i + 1);
                        };
                    };
                };
                n = (n + 1);
            };
            if ((this.Parent.SP & smiley.b_glow)){
                Wiggle = (Wiggle + 4);
            };
            if (this.MaxW == 0){
                this.MaxW = 22;
            };
            this.MaxW = (this.MaxW + Wiggle);
            if (this.MaxW > 50){
                this.MaxW = 50;
            };
            if (this.Frames > 72){
                this.Frames = 72;
            };
            if (((Simple) && ((this.Parent.SF & smiley.f_Simple)))){
                this.Parent.SF = (this.Parent.SF | smiley.f_NoCache);
            };
            if ((((((todo.FV < 10)) && ((this.Frames > 36)))) && ((this.MaxW >= 40)))){
                this.Frames = 36;
            };
            i = 0;
            while (i < NumLayers) {
                k = LayerNames[i];
                n = 0;
                while (n < this.NoOfSmilies) {
                    OurMc_n = this.OurMc[n];
                    if (!OurMc_n.Layers){
                    } else {
                        OurMc_n_Layers_k = OurMc_n.Layers[k];
                        if (!OurMc_n_Layers_k){
                        } else {
                            this.addChild(OurMc_n_Layers_k);
                            if (((OurMc_n_Layers_k.RollOver) && (!(this.NeedRoll)))){
                                this.NeedRoll = 1;
                            };
                        };
                    };
                    n = (n + 1);
                };
                i = (i + 1);
            };
            TickDict[this] = 1;
            if (this.NeedRoll){
                addEventListener(MouseEvent.ROLL_OVER, this.RolloverHandler, false, 0, true);
            };
        }
        function FadeLayer(_arg1){
            _arg1.alpha = a[((this.tc + this.ar) % al)];
            return (true);
        }
        public function cleanUp(_arg1=0){
            var e:int = _arg1;
            if (!this.Parent){
                return;
            };
            try {
                this.Parent.removeEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp);
            } catch(e) {
            };
            try {
                this.removeEventListener(MouseEvent.ROLL_OVER, this.RolloverHandler);
            } catch(e) {
            };
            var n:* = 0;
            while (n < this.NoOfSmilies) {
                this.OurMc[n].mc.contentLoaderInfo.removeEventListener(Event.COMPLETE, this.SmileyLoaded);
                if (this.OurMc[n].mc.parent){
                    this.removeChild(this.OurMc[n].mc);
                };
                this.OurMc[n].mc.unloadAndStop(true);
                this.OurMc[n].mc = null;
                n = (n + 1);
            };
            delete TickDict[this];
            this.Parent = undefined;
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.geom.*;

    public dynamic class xAvatar extends MovieClip {

        public static var atc = 0;
        public static var oatc = 0;
        static var MovieHash = new Object();
        static var Bin = new recycle();

        var mLoader:Loader;
        var Parent;
        public var Av;
        var Count;

        public function xAvatar(_arg1:MovieClip, _arg2:String, _arg3:String="", _arg4=undefined, _arg5=0, _arg6=0, _arg7=undefined){
            var _local8:Number;
            var _local13:*;
            var _local14:*;
            var _local15:*;
            var _local16:*;
            var _local17:*;
            var _local19:*;
            var _local20:*;
            var _local21:*;
            super();
            this.Parent = _arg1;
            this.Av = this;
            if (!_arg2){
                return;
            };
            var _local9:Boolean;
            var _local10:* = 0;
            var _local11:* = xatlib.xInt(_arg2);
            var _local12:* = _arg2;
            _arg1.addChild(this);
            if ((_arg6 & 32) != 0){
                this.Av.filters = todo.DropFilter;
            };
            if (_arg4 != undefined){
                this.Av.addEventListener(MouseEvent.MOUSE_DOWN, _arg4);
                this.Av.buttonMode = true;
            };
            if (_local11 > 0){
                _arg2 = xatlib.UrlAv(_local11);
            };
            this.Av.b = new MovieClip();
            this.Av.addChild(this.Av.b);
            _local17 = _arg2.split(")");
            _local13 = 0;
            if (_local17[1] != undefined){
                _local13++;
            };
            _local15 = _local17[_local13].split("#");
            _local17 = _local17[0].split("#");
            _arg2 = _local17[0];
            if (_local15[1]){
                if (_arg5){
                    _local19 = _local15[1].toLowerCase();
                    _local16 = xconst.Glitters[_local19];
                    if ((((_local19 == "snowy")) && (!(todo.HasPowerA(_arg7, 56))))){
                        _local16 = false;
                    };
                    if (_local16){
                        this.Av.Glitter = _local15[1];
                        if (((!((_local16 == 2))) || (xatlib.SmOk(_local15[2], _arg7)))){
                            this.Av.Glitter2 = _local15.slice(2).join("#");
                        };
                    };
                };
            };
            var _local18:* = 0;
            if (_arg7 != undefined){
                _local18 = xatlib.xInt(((_arg7[0] >> 18) & 3));
            };
            if (_local18 == 0){
                if (_arg2.indexOf("photobucket.com/") > 1){
                    this.Av.U2 = _arg2;
                    _local13 = (_arg2.lastIndexOf("/") + 1);
                    _arg2 = ((_arg2.substr(0, _local13) + "th_") + _arg2.substr(_local13));
                };
                if (_arg2.indexOf("tinypic.com/") > 1){
                    this.Av.U2 = _arg2;
                    _local13 = _arg2.lastIndexOf(".");
                    _arg2 = ((_arg2.substr(0, _local13) + "_th") + _arg2.substr(_local13));
                };
            };
            if (((_arg5) && ((_arg2.substr(0, 1) == "(")))){
                _local20 = _arg2.substr(1);
                if (!xatlib.SmOk(_local20, _arg7)){
                    _local20 = "smile";
                };
                this.Av.b.SF = (2 | smiley.f_NoCache);
                this.Av.b.SA = _local12;
                xmessage.PowSm(this.Av.b, _local17, 30, _arg7);
                this.Av.b.x = (this.Av.b.x + xatlib.xInt(this.Av.b.xx));
                _arg2 = (xatlib.SmilieUrl(_local20, "sm") + "&r=2");
                _local14 = _local20;
            } else {
                if (_local11 < 0){
                    if ((((((_arg2.toLowerCase().indexOf(".jpg") == -1)) && ((_arg2.toLowerCase().indexOf(".jpeg") == -1)))) && ((_arg2.toLowerCase().indexOf(".png") == -1)))){
                        _arg2 = "";
                    };
                    if (_arg2.toLowerCase().indexOf("xat") != -1){
                        _arg2 = "";
                    };
                };
            };
            if (_local11 == -1){
                _local21 = new HelpIcon();
                this.Av.addChild(_local21);
                _local21.width = (_local21.height = 30);
                _local21.info.visible = false;
                _local21 = new glint();
                this.Av.addChild(_local21);
                _local21.width = (_local21.height = 25);
                _local21.x = 3;
                _local21.y = -5;
            } else {
                if (_arg2.substr(0, 7) == "http://"){
                    this.Av.b.c = this.Av.b;
                    this.Av.b.c.visible = false;
                    this.Av.U1 = _arg2;
                    this.Av.St = 1;
                    this.Av.An = -(_local18);
                };
                _local10 = 1;
            };
            this.Av.sm = _local14;
            this.Count = 18;
            if (_local10 > 0){
                this.Av.Gray = xatlib.ButtonCurve2(0, 30, 30, 0, 0, 0, 0, 0x808080);
                this.Av.addChild(this.Av.Gray);
                this.Av.Gray.visible = (_local10 > 18);
                this.Av.Gray.alpha = 0.5;
            };
            addEventListener(Event.ENTER_FRAME, this.Tick);
            this.Parent.addEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp);
        }
        function Delete(){
        }
        function cleanUp(_arg1:Event){
            var mc:* = undefined;
            var event:* = _arg1;
            if (this.Av.Gt){
                if (this.Av.g){
                    this.Av.removeChild(this.Av.g);
                    this.Av.g.unloadAndStop(true);
                    this.Av.g = null;
                };
            };
            if (!this.Av.sm){
                mc = this.Av.b.c;
                if (((mc) && (mc.ns))){
                    mc.removeChild(mc.ns);
                    Bin.put(this.Av.U1, mc.ns);
                    mc.ns = null;
                    mc = null;
                    this.Av = null;
                };
            };
            try {
                this.Parent.removeEventListener(Event.REMOVED_FROM_STAGE, this.cleanUp);
                this.removeEventListener(Event.ENTER_FRAME, this.Tick);
            } catch(e) {
            };
            this.Parent = undefined;
        }
        function Tick(_arg1:Event){
            var _local2:*;
            var _local3:*;
            var _local4:MovieClip;
            var _local6:*;
            var _local7:*;
            var _local8:*;
            atc++;
            if (!this.Av){
                return;
            };
            var _local5:Array = new Array();
            _local4 = this.Av.b.c;
            if (_local4 != undefined){
                if (this.Count <= 0){
                    this.Av.Gray.visible = true;
                };
                this.Count--;
                if (this.Av.St == 1){
                    _local7 = MovieHash[this.Av.U1];
                    if ((((_local7 == 1)) && ((this.Count > (-12 * 10))))){
                        return;
                    };
                    if ((((_local7 == 3)) || ((_local7 == 1)))){
                        removeEventListener(Event.ENTER_FRAME, this.Tick);
                        this.Av.Gray.visible = true;
                        return;
                    };
                    if (_local7 == undefined){
                        MovieHash[this.Av.U1] = 1;
                    };
                    if (this.Av.sm){
                        _local4.SP = (_local4.SP | smiley.b_glow);
                        _local4.ns = new smiley(_local4, this.Av.sm);
                    } else {
                        if (!(_local4.ns = Bin.grab(this.Av.U1))){
                            _local4.ns = new loadbitmap(_local4, this.Av.U1);
                        } else {
                            _local4.addChild(_local4.ns);
                        };
                    };
                    this.Av.St = 2;
                };
                _local6 = false;
                if (_local4.width > 0){
                    MovieHash[this.Av.U1] = 2;
                    if (this.Av.An > 0){
                        this.Av.Ac = ((this.Av.Ac + 1) % this.Av.Rat);
                        this.Av.scrollRect = new Rectangle((_local4.height * this.Av.Ac), 0, _local4.height, _local4.height);
                    } else {
                        if (((((_local4.width * _local4.height) > (0x0400 * 0x0300))) || (((!(this.Av.sm)) && ((_local4.swfVersion >= 0)))))){
                            MovieHash[this.Av.U1] = 3;
                            _local4.parent.removeChild(_local4);
                            this.Count = 0;
                        } else {
                            if (this.Av.sm){
                                _local4.scaleX = (_local4.scaleX * 1.58);
                                _local4.scaleY = (_local4.scaleY * 1.58);
                            } else {
                                this.Av.Rat = xatlib.xInt((_local4.width / _local4.height));
                                if (this.Av.Rat >= 3){
                                    if (this.Av.U2 != undefined){
                                        _local4.parent.removeChild(_local4);
                                        this.Av.U1 = this.Av.U2;
                                        this.Av.U2 = undefined;
                                        this.Av.St = 1;
                                        return;
                                    };
                                    this.Av.Ac = 0;
                                    this.Av.An = -(this.Av.An);
                                    _local4.scaleX = (_local4.scaleY = (30 / _local4.height));
                                    if ((this.Av.An & 2)){
                                        _local6 = true;
                                    } else {
                                        if ((this.Av.An & 1)){
                                            this.Av.Ac = xatlib.xInt((Math.random() * this.Av.Rat));
                                        };
                                    };
                                    this.Av.scrollRect = new Rectangle((_local4.height * this.Av.Ac), 0, _local4.height, _local4.height);
                                } else {
                                    _local4.scaleX = (30 / _local4.width);
                                    _local4.scaleY = (30 / _local4.height);
                                };
                            };
                            _local4.visible = true;
                            this.Av.removeChild(this.Av.Gray);
                            if (this.Av.Glitter != undefined){
                                _local8 = xatlib.SmilieUrl(this.Av.Glitter, "gt2");
                                if (this.Av.Glitter2){
                                    _local8 = (_local8 + ("&s=" + this.Av.Glitter2));
                                };
                                this.Av.Gt = _local8;
                                if (!(this.Av.g = Bin.grab(_local8))){
                                    this.Av.g = xatlib.LoadMovie(this.Av, _local8);
                                } else {
                                    this.Av.addChild(this.Av.g);
                                };
                            };
                        };
                        if (_local6 == false){
                            removeEventListener(Event.ENTER_FRAME, this.Tick);
                        };
                    };
                };
            };
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class textWrapperClip2 extends MovieClip {

    }
}//package 
﻿package {
    import flash.xml.*;
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;
    import flash.utils.*;
    import flash.system.*;
    import flash.external.*;

    public class network {

        public static var YC = undefined;
        public static var GotDone:Boolean = false;
        public static var YI = undefined;
        public static var QK = false;
        public static var w_redirectdom = undefined;
        public static var NetworkState;
        public static var w_redirectport = undefined;
        public static var k1;
        public static var jt1 = 0;
        public static var jt2 = 0;
        public static var LurkerLimit;
        public static var k2;
        public static var GotFirstDone:Boolean = false;
        public static var UngagTimeout = undefined;
        public static var Fire = true;
        public static var UserId;
        public static var MessageCount;
        public static var socket;
        public static var UnfairFile:String = "";
        public static var NetworkTimeout;
        public static var LurkerTimeout;
        public static var Bootp = undefined;
        public static var LastLocate = 0;
        public static var FI = undefined;
        public static var UnfairGroupName:String = "";
        public static var FailoverMode = false;
        public static var fs = 0;
        public static var WV = false;
        public static var test_xml;
        public static var UnfairMessage:String = "";
        public static var SockStatus = new Array(40, 41, 42, 43);
        public static var sjt = 0;

        public static function SaveRegData(){
            var _local1:* = SharedObject.getLocal("chat", "/");
            _local1.objectEncoding = ObjectEncoding.AMF0;
            if (((1) && (!((_local1 == null))))){
                _local1.data.w_userno = xatlib.xInt(todo.w_userno);
                _local1.data.w_userrev = xatlib.xInt(todo.w_userrev);
                _local1.data.w_k1b = todo.w_k1;
                _local1.data.w_d0 = todo.w_d0;
                _local1.data.w_d1 = todo.w_d1;
                _local1.data.w_d2 = todo.w_d2;
                _local1.data.w_d3 = todo.w_d3;
                _local1.data.w_dt = todo.w_dt;
                _local1.data.w_Powers = todo.w_Powers;
                _local1.data.w_PowerO = todo.w_PowerO;
                _local1.data.w_bride = todo.w_bride;
                _local1.data.w_coins = todo.w_coins;
                _local1.data.w_xats = todo.w_xats;
                _local1.data.w_registered = todo.w_registered;
                _local1.data.w_k2 = todo.w_k2;
                _local1.data.w_k3 = todo.w_k3;
                _local1.flush();
            };
        }
        public static function NetworkMakeUser(_arg1, _arg2){
            NetworkSendMsg(todo.w_userno, ("/" + _arg2), 0, 0, _arg1);
        }
        public static function OnGagList(_arg1:Number):Boolean{
            var _local2:* = todo.w_banlist.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.w_banlist[_local3].r == _arg1){
                    return (true);
                };
                _local3++;
            };
            return (false);
        }
        public static function GlowUser(_arg1:Number){
            var _local2:* = xatlib.FindUser(_arg1);
            if (_local2 == -1){
                return;
            };
            if (todo.Users[_local2].mc != null){
                todo.Users[_local2].mc.av1.filters = [todo.TextGlow];
                todo.Users[_local2].glowc = 6;
                tickcode.GlowFlag = true;
            };
        }
        public static function GetGagTime(_arg1:Number):Boolean{
            var _local2:* = todo.w_banlist.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.w_banlist[_local3].r == _arg1){
                    return (todo.w_banlist[_local3].t);
                };
                _local3++;
            };
            return (false);
        }
        public static function UserGotMessage(_arg1:Number):Boolean{
            var _local2:* = todo.Message.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.Message[_local3].u == _arg1){
                    return (true);
                };
                _local3++;
            };
            return (false);
        }
        public static function OnUserList(_arg1:Number, _arg2:Boolean=false):Boolean{
            var _local3:* = xatlib.FindUser(_arg1);
            if (_local3 == -1){
                return (false);
            };
            if ((((_arg2 == true)) || (todo.Users[_local3].online))){
                return (true);
            };
            return (false);
        }
        public static function GetDom(_arg1):Number{
            return (((xatlib.xInt(_arg1))<8) ? 3 : ((xatlib.xInt(_arg1) & 96) >> 5));
        }
        public static function NetworkSendxmlExtMessage(_arg1){
            LurkerTimeout = LurkerLimit;
            var _local2:* = new XMLDocument(_arg1);
            UpdateChannel(_local2.firstChild.attributes.i, todo.w_userno);
            var _local3:* = "";
            if (((!((_local2.toString().indexOf("t=\"/m") == -1))) || (!((_local2.toString().indexOf("t=\"/g") == -1))))){
                _local3 = xatlib.XMLOrder(_local2, new Array("j", "i", "u", "t", "p"));
            } else {
                _local3 = xatlib.XMLOrder(_local2, new Array("H", "j", "i", "t", "u", "d0", "d2", "q", "N", "n", "a", "h", "v"));
            };
            socket.send(_local3);
        }
        public static function NetworkFriendUser(_arg1, _arg2){
            var _local4:*;
            var _local3:* = xatlib.FindUser(_arg1);
            todo.Users[_local3].friend = _arg2;
            xmessage.DeleteOneUserMc(_local3);
            UpdateFriendList(_arg1, _arg2);
            if (todo.w_registered == undefined){
                return;
            };
            var _local5:* = ((("/b " + _arg1) + ",") + (_arg2) ? "1" : "2");
            if (_arg2){
                _local4 = todo.Users[_local3].registered;
                if (_local4 == undefined){
                    _local4 = "";
                };
                _local5 = (_local5 + ((("," + _local4) + ",") + todo.Users[_local3].n.substr(0, 20)));
            };
            NetworkSendMsg(todo.w_userno, _local5, 0, 0, 2);
        }
        public static function UpdateFriendList(_arg1:Number, _arg2:Boolean, _arg3:String=undefined){
            var _local5:Object;
            var _local6:*;
            var _local7:*;
            var _local4:* = xatlib.FindUser(_arg1);
            if (_arg2 == true){
                if (!OnFriendList(_arg1)){
                    _local5 = new Object();
                    _local5.u = _arg1;
                    if (_local4 != -1){
                        _local5.v = todo.Users[_local4].v;
                        _local5.n = xatlib.CleanTextNoXat(todo.Users[_local4].n);
                        _local5.a = todo.Users[_local4].a;
                        _local5.h = todo.Users[_local4].h;
                    } else {
                        _local5.v = 0;
                        _local5.n = _arg3;
                    };
                    todo.w_friendlist.push(_local5);
                    FI = true;
                } else {
                    _local6 = todo.w_friendlist.length;
                    _local7 = 0;
                    while (_local7 < _local6) {
                        if (todo.w_friendlist[_local7].u == _arg1){
                            todo.w_friendlist[_local7].v = todo.Users[_local4].v;
                            todo.w_friendlist[_local7].n = xatlib.CleanTextNoXat(todo.Users[_local4].n);
                            todo.w_friendlist[_local7].a = todo.Users[_local4].a;
                            todo.w_friendlist[_local7].h = todo.Users[_local4].h;
                            break;
                        };
                        _local7++;
                    };
                };
            } else {
                _local6 = todo.w_friendlist.length;
                _local7 = 0;
                while (_local7 < _local6) {
                    if (todo.w_friendlist[_local7].u == _arg1){
                        todo.w_friendlist.splice(_local7, 1);
                        if (todo.w_friendlist2 != undefined){
                            if (todo.w_friendlist[_local7] != undefined){
                                if (todo.w_friendlist2[todo.w_friendlist[_local7].u] != undefined){
                                    todo.w_friendlist2[todo.w_friendlist[_local7].u] = undefined;
                                };
                            };
                        };
                        break;
                    };
                    _local7++;
                };
            };
            xatlib.MainSolWrite("w_friendlist", todo.w_friendlist);
            xatlib.MainSolWrite("w_friendlist2", todo.w_friendlist2);
        }
        public static function NetworkInit(){
            NetworkState = 0;
            NetworkTimeout = -1;
            MessageCount = 0;
            LurkerLimit = ((12 * 60) * 5);
            LurkerTimeout = -1;
        }
        public static function socketClose(_arg1:Event){
            SetNetworkState(5, Math.floor(((Math.random() * 12) * 4)));
            todo.lb = "n";
            todo.DoUpdate = true;
        }
        public static function NetworkGagUser(_arg1, _arg2, _arg3, _arg4, _arg5=undefined){
            NetworkSendMsg(todo.w_userno, (_arg3) ? (("/" + _arg1) + _arg4) : "/u", 0, 0, _arg2, _arg5);
        }
        public static function UpdateIgnoreList(_arg1:Number, _arg2:Boolean, _arg3){
            var _local6:Date;
            var _local7:*;
            var _local4:* = xatlib.FindUser(_arg1);
            var _local5:* = xatlib.FindUser(todo.w_userno);
            if (todo.Users[_local5].xNum == 30004){
                if (_arg2 == true){
                    if (chat.sending_lc){
                        chat.sending_lc.send(chat.fromxat, "onMsg", 4, _arg1, "l");
                    };
                } else {
                    if (chat.sending_lc){
                        chat.sending_lc.send(chat.fromxat, "onMsg", 4, _arg1, ("u" + todo.Users[_local4].a));
                    };
                };
            };
            xmessage.DeleteOneUserMc(_local4);
            if (_arg2 == true){
                _local6 = new Date();
                _local7 = xatlib.xInt((Number(_local6.getTime()) / 1000));
                todo.w_ignorelist2[_arg1] = ((_arg3 == undefined)) ? _local7 : -(_local7);
            } else {
                delete todo.w_ignorelist2[_arg1];
            };
            xatlib.MainSolWrite("w_ignorelist2", todo.w_ignorelist2);
            todo.DoBuildUserList = true;
        }
        public static function test_xml_onLoad(_arg1:Event){
            var _local2:URLLoader = URLLoader(_arg1.target);
            var _local3:* = new XML(_local2.data);
            var _local4:* = false;
            var _local5:String = _local3.attribute("d");
            if (_local5){
                _local4 = true;
                SockStatus = _local5.split(",");
            };
            if (FailoverMode){
                if (((_local4) && (!((SockStatus[GetDom(todo.w_useroom)] == 0))))){
                    SetNetworkState(9, -1);
                };
            } else {
                if (((_local4) && (!((SockStatus[GetDom(todo.w_useroom)] == 0))))){
                    SetNetworkState(13, -1);
                } else {
                    SetNetworkState(8, -1);
                };
            };
            test_xml = undefined;
        }
        public static function NetworkKickUser(_arg1, _arg2){
            NetworkSendMsg(todo.w_userno, "/k", 0, 0, _arg1, _arg2);
        }
        public static function SetNetworkState(_arg1, _arg2){
            var _local3:String;
            NetworkState = _arg1;
            NetworkTimeout = _arg2;
            if (main.ButtonLoginMc != undefined){
                if (NetworkState == 0){
                    _local3 = xconst.ST(19);
                } else {
                    if (NetworkState == 4){
                        _local3 = xconst.ST(31);
                    } else {
                        _local3 = xconst.ST(32);
                    };
                };
                main.ButtonLoginMc.SetText(_local3);
            };
        }
        public static function myOnXML(_arg1:DataEvent){
            var doc:* = undefined;
            var e:* = undefined;
            var u:* = undefined;
            var UserIndex:* = undefined;
            var n:* = undefined;
            var s:* = undefined;
            var t:* = NaN;
            var str:* = null;
            var pstr:* = undefined;
            var gpa:* = undefined;
            var i:* = NaN;
            var IsPrivateMessage:* = false;
            var IsPrivateChat:* = false;
            var IsNew:* = false;
            var IsDeleteMessage:* = undefined;
            var IsGagUser:* = undefined;
            var IsUnGagUser:* = undefined;
            var IsMakeUser:* = undefined;
            var IsUnMakeUser:* = undefined;
            var IsKickUser:* = undefined;
            var IsUnknown:* = undefined;
            var IsControlMessage:* = undefined;
            var IsLocateUser:* = undefined;
            var IsAtUser:* = undefined;
            var IsScroller:* = undefined;
            var FirstTwo:* = undefined;
            var IsSlash:* = undefined;
            var tgagged:* = undefined;
            var tbanned:* = undefined;
            var tfriend:* = undefined;
            var tmodplus:* = undefined;
            var IsIgnored:* = false;
            var strText:* = null;
            var lc:* = undefined;
            var Links:* = undefined;
            var farray:* = null;
            var id:* = undefined;
            var so93:* = undefined;
            var friobj:* = null;
            var pci:* = undefined;
            var ptime:* = undefined;
            var len:* = undefined;
            var tt:* = undefined;
            var TabsLength:* = undefined;
            var uid:* = 0;
            var uuid:* = undefined;
            var selfid:* = NaN;
            var loctext:* = undefined;
            var pp:* = undefined;
            var ii:* = undefined;
            var g:* = undefined;
            var msgno:* = undefined;
            var v:* = undefined;
            var my_date:* = null;
            var UnfairTitle:* = null;
            var UnfairReport:* = null;
            var hh:* = undefined;
            var so47:* = undefined;
            var nopc:* = undefined;
            var nom:* = undefined;
            var maxpc:* = undefined;
            var maxm:* = undefined;
            var RemoveMessage:* = undefined;
            var HaveTab:* = undefined;
            var AllowPC:* = undefined;
            var TabNumber:* = NaN;
            var self:* = NaN;
            var IsMainOwner:* = false;
            var IsOwner:* = false;
            var IsModerator:* = false;
            var IsMember:* = false;
            var IsOnline:* = false;
            var IsBanned:* = false;
            var IsForever:* = false;
            var IsGagged:* = false;
            var OnXat:* = false;
            var IsVIP:* = false;
            var Powers:* = undefined;
            var IsStealth:* = false;
            var cc:* = undefined;
            var a:* = undefined;
            var ee:* = undefined;
            var w_name_send:* = null;
            var w_avatar_send:* = null;
            var type:* = undefined;
            var Text:* = undefined;
            var left:* = NaN;
            var RndOr:* = undefined;
            var Rnd2:* = undefined;
            var q:* = undefined;
            var sarray:* = null;
            var p:* = undefined;
            var doautoredirect:* = false;
            var reason:* = undefined;
            var bootr:* = undefined;
            var event:* = _arg1;
            try {
                doc = new XMLDocument(event.data);
                e = doc.firstChild;
                if (e != null){
                    u = xatlib.xInt(e.attributes.u);
                    UserIndex = xatlib.FindUser(u);
                    if (((e.attributes.t) && ((e.attributes.u > 0)))){
                        n = 0;
                        while (n < e.attributes.t.length) {
                            if (e.attributes.t.charCodeAt(n) < 32){
                                return;
                            };
                            n = (n + 1);
                        };
                    };
                    if (e.nodeName == "y"){
                        YI = xatlib.xInt(e.attributes.i);
                        jt2 = (getTimer() - sjt);
                        YC = xatlib.xInt(e.attributes.c);
                        delete todo.config["smline"];
                    } else {
                        if (e.nodeName == "x"){
                            UpdateChannel(e.attributes.i, e.attributes.u);
                            if (((((((((!((e.attributes.i == 10001))) || (!((e.attributes.t.substr(0, 1) == "b"))))) || (todo.Users[UserIndex].mainowner))) || (todo.Users[UserIndex].owner))) || (todo.Users[UserIndex].moderator))){
                                if ((((e.attributes.i >= 40000)) && ((e.attributes.i < 50000)))){
                                    if (chat.sending_lc){
                                        chat.sending_lc.send(chat.fromxat, "onMsg", e.attributes.i, e.attributes.u, e.toString());
                                    };
                                } else {
                                    if ((((((e.attributes.i == 10000)) && ((e.attributes.t.substr(0, 1) == "B")))) && ((todo.HasPower(selfid, 44) == false)))){
                                    } else {
                                        if (chat.sending_lc){
                                            chat.sending_lc.send(chat.fromxat, "onMsg", e.attributes.i, e.attributes.u, e.attributes.t);
                                        };
                                        if ((((e.attributes.i == 10001)) && ((e.attributes.t.substr(0, 1) == "b")))){
                                            xatlib.UpdateDJ(e.attributes.u);
                                        };
                                    };
                                };
                            };
                        } else {
                            if (e.nodeName == "a"){
                                if ((((e.attributes.u == todo.w_userno)) || (!((todo.Users[xatlib.FindUser(e.attributes.u)].ignored == true))))){
                                    if (((xconst.kssh[e.attributes.k]) || ((e.attributes.k == "T")))){
                                        xkiss.Kiss({
                                            t:e.attributes.t,
                                            u:e.attributes.u,
                                            k:e.attributes.k,
                                            b:e.attributes.b,
                                            f:e.attributes.f,
                                            x:e.attributes.x,
                                            s:e.attributes.s
                                        });
                                    };
                                };
                                if (e.attributes.c != undefined){
                                    todo.w_coins = xatlib.xInt(e.attributes.c);
                                    xatlib.MainSolWrite("w_coins", todo.w_coins);
                                };
                            } else {
                                if (e.nodeName == "v"){
                                    if (e.attributes.e != undefined){
                                        t = xatlib.xInt(e.attributes.t);
                                        switch (_local3){
                                            case 6:
                                                s = xconst.ST(164);
                                                break;
                                            case 8:
                                                s = xconst.ST(165);
                                                break;
                                            case 10:
                                                s = xconst.ST(166);
                                                break;
                                            case 11:
                                                s = xconst.ST(167);
                                                break;
                                            case 13:
                                                s = xconst.ST(25);
                                                break;
                                            case 14:
                                                s = xconst.ST(168);
                                                break;
                                            case 15:
                                                s = xconst.ST(169);
                                                break;
                                            case 16:
                                                s = xconst.ST(170);
                                                break;
                                            case 17:
                                                s = xconst.ST(171);
                                                break;
                                            case 18:
                                                s = xconst.ST(172);
                                                break;
                                            case 22:
                                                s = xconst.ST(173);
                                                break;
                                            case 24:
                                                s = xconst.ST(187, t.toString());
                                                break;
                                            case 36:
                                                s = xconst.ST(215);
                                                break;
                                            case 38:
                                                s = xconst.ST(234);
                                                if (t){
                                                    s = (s + (" " + xconst.ST(235, t.toString())));
                                                };
                                                break;
                                            default:
                                                s = ((xconst.ST(174) + " ") + n);
                                        };
                                        if (n != 39){
                                            xatlib.GeneralMessage(xconst.ST(175), s);
                                        };
                                        if (e.attributes.m == undefined){
                                            todo.w_d0 = (todo.w_bride = (todo.w_registered = (todo.w_VIP = (todo.w_Powers = undefined))));
                                            todo.w_k3 = 0;
                                            todo.w_PowerO = 0;
                                            todo.w_xats = 0;
                                            todo.w_d2 = (todo.w_d3 = (todo.w_dt = (todo.w_coins = 0)));
                                            if ((((todo.w_email == 0)) && ((todo.w_password == "$0")))){
                                                SaveRegData();
                                                try {
                                                    main.mcLoad.LoggedIn(1);
                                                } catch(e:Error) {
                                                };
                                            } else {
                                                try {
                                                    main.mcLoad.LoggedIn(0);
                                                } catch(e:Error) {
                                                };
                                            };
                                        };
                                    } else {
                                        todo.w_userno = e.attributes.i;
                                        todo.w_userrev = 0;
                                        todo.w_k1 = e.attributes.k1;
                                        todo.w_d0 = e.attributes.d0;
                                        todo.w_d1 = e.attributes.d1;
                                        todo.w_d2 = xatlib.xInt(e.attributes.d2);
                                        todo.w_d3 = xatlib.xInt(e.attributes.d3);
                                        todo.w_dt = xatlib.xInt(e.attributes.dt);
                                        todo.w_Powers = new Array(xatlib.xInt(e.attributes.d4), xatlib.xInt(e.attributes.d5), xatlib.xInt(e.attributes.d6));
                                        todo.w_PowerO = e.attributes.dO;
                                        t = xatlib.FindUser(todo.w_d2);
                                        if (t >= 0){
                                            todo.w_bride = todo.Users[t].registered;
                                        };
                                        todo.w_coins = xatlib.xInt(e.attributes.c);
                                        todo.w_xats = e.attributes.dx;
                                        if (todo.w_xats){
                                            todo.w_coins = xatlib.xInt(todo.w_xats);
                                        };
                                        todo.w_registered = e.attributes.n;
                                        todo.w_k2 = e.attributes.k2;
                                        todo.w_k3 = e.attributes.k3;
                                        SaveRegData();
                                        if (((todo.WV2) || (e.attributes.RL))){
                                            todo.lb = "n";
                                            todo.DoUpdate = true;
                                            NetworkClose();
                                            main.logoutbutonPress();
                                            todo.WV2 = false;
                                        };
                                        try {
                                            main.mcLoad.LoggedIn(1);
                                        } catch(e:Error) {
                                        };
                                        if (todo.messageecho == "s"){
                                            if (chat.sending_lc){
                                                chat.sending_lc.send(chat.fromxat, "onMsg", 4, 0, "l");
                                            };
                                        };
                                    };
                                    todo.w_password = undefined;
                                    WV = false;
                                } else {
                                    if (e.nodeName == "ap"){
                                        str = " ";
                                        pstr = xconst.pssa[(xatlib.xInt(e.attributes.p) + 1)];
                                        switch (xatlib.xInt(e.attributes.r)){
                                            case 0:
                                                str = xconst.ST(239, pstr);
                                                break;
                                            case 1:
                                                str = xconst.ST(240, pstr);
                                                break;
                                            case 2:
                                                str = xconst.ST(241, pstr);
                                                break;
                                            case 3:
                                                str = xconst.ST(242, pstr);
                                                break;
                                            case 4:
                                                str = (pstr + " already assigned");
                                                break;
                                            case 9:
                                                str = (pstr + " system error (db down)");
                                                break;
                                            default:
                                                str = (pstr + " unknown errorcode");
                                        };
                                        xatlib.GeneralMessage(xconst.ST(237), str);
                                    } else {
                                        if (e.nodeName == "gp"){
                                            gpa = e.attributes.p.split("|");
                                            i = 0;
                                            while (i < gpa.length) {
                                                todo.w_GroupPowers[i] = xatlib.xInt(gpa[i]);
                                                i = (i + 1);
                                            };
                                            if (todo.HasPowerA(todo.w_GroupPowers, 70)){
                                            };
                                            if (todo.HasPowerA(todo.w_GroupPowers, 74)){
                                                todo.config["smline"] = e.attributes.g74;
                                            };
                                        } else {
                                            if ((((((((e.nodeName == "m")) || ((e.nodeName == "p")))) || ((e.nodeName == "c")))) || ((e.nodeName == "z")))){
                                                IsPrivateMessage = false;
                                                IsPrivateChat = false;
                                                IsNew = true;
                                                IsDeleteMessage = false;
                                                IsGagUser = false;
                                                IsUnGagUser = false;
                                                IsMakeUser = false;
                                                IsUnMakeUser = false;
                                                IsKickUser = false;
                                                IsUnknown = false;
                                                IsControlMessage = false;
                                                IsLocateUser = false;
                                                IsAtUser = false;
                                                IsScroller = false;
                                                FirstTwo = e.attributes.t.substr(0, 2);
                                                IsSlash = (FirstTwo.substr(0, 1) == "/");
                                                if (e.attributes.u == 0){
                                                    IsScroller = false;
                                                };
                                                if ((((e.nodeName == "p")) || ((e.nodeName == "z")))){
                                                    IsPrivateMessage = true;
                                                };
                                                if (e.nodeName == "c"){
                                                    IsControlMessage = true;
                                                };
                                                if ((e.attributes.s & 1)){
                                                    IsNew = false;
                                                };
                                                if (((IsPrivateMessage) && ((e.attributes.s & 2)))){
                                                    IsPrivateChat = true;
                                                };
                                                if (((((!(IsSlash)) && ((e.nodeName == "m")))) && ((e.attributes.u == undefined)))){
                                                    return;
                                                };
                                                if (e.attributes.t.indexOf("<inf7>") != -1){
                                                    IsSlash = true;
                                                };
                                                e.attributes.t = xatlib.Replace(e.attributes.t, ">", " ");
                                                if (((((IsPrivateMessage) && (!(IsPrivateChat)))) && (!(IsSlash)))){
                                                    e.attributes.t = ("<priv> " + e.attributes.t);
                                                };
                                                if (IsSlash){
                                                    if (FirstTwo == "/d"){
                                                        IsDeleteMessage = true;
                                                    };
                                                    if (FirstTwo == "/s"){
                                                        IsScroller = true;
                                                    };
                                                    if ((((e.nodeName == "c")) && ((FirstTwo == "/g")))){
                                                        IsGagUser = true;
                                                    };
                                                    if ((((e.nodeName == "c")) && ((FirstTwo == "/u")))){
                                                        IsUnGagUser = true;
                                                    };
                                                    if ((((e.nodeName == "c")) || ((e.nodeName == "p")))){
                                                        if (FirstTwo == "/m"){
                                                            IsMakeUser = true;
                                                        };
                                                        if (FirstTwo == "/r"){
                                                            IsUnMakeUser = true;
                                                        };
                                                        if (FirstTwo == "/k"){
                                                            IsKickUser = true;
                                                        };
                                                    };
                                                    if (e.nodeName == "z"){
                                                        if (FirstTwo == "/l"){
                                                            IsLocateUser = true;
                                                        };
                                                        if (FirstTwo == "/a"){
                                                            IsAtUser = true;
                                                        };
                                                    };
                                                    if (FirstTwo == "/b"){
                                                        if (e.attributes.t == "/bd"){
                                                            todo.w_friendlist.length = 0;
                                                            todo.w_friendlist2 = new Object();
                                                        } else {
                                                            if (e.attributes.t == "/bf"){
                                                                xatlib.MainSolWrite("w_friendlist", todo.w_friendlist);
                                                                xatlib.MainSolWrite("w_friendlist2", todo.w_friendlist2);
                                                            } else {
                                                                farray = e.attributes.t.substr(3).split(",");
                                                                id = xatlib.xInt(farray[0]);
                                                                if (id == todo.w_userno){
                                                                    so93 = SharedObject.getLocal("chat", "/");
                                                                    so93.objectEncoding = ObjectEncoding.AMF0;
                                                                    if (((1) && (!((so93 == null))))){
                                                                        so93.data.w_name = xatlib.CleanTextNoXat(farray[3]);
                                                                        so93.data.w_avatar = ((farray[4])!=undefined) ? xatlib.CleanAv(farray[4]) : "";
                                                                        so93.data.w_homepage = ((farray[5])!=undefined) ? xatlib.UrlAv(farray[5]) : "";
                                                                        so93.data.w_userrev = ((farray[6])!=undefined) ? farray[6] : 0;
                                                                        if (farray[7].indexOf("|") != -1){
                                                                            so93.data.w_Mask = farray[7].split("|");
                                                                        };
                                                                        so93.flush();
                                                                    };
                                                                } else {
                                                                    if (todo.w_friendlist2[id] == undefined){
                                                                        friobj = new Object();
                                                                        friobj.u = id;
                                                                        friobj.v = 0;
                                                                        friobj.n = xatlib.CleanTextNoXat(farray[3]);
                                                                        friobj.a = "";
                                                                        friobj.h = "";
                                                                        todo.w_friendlist.push(friobj);
                                                                        if (todo.w_friendlist2[id] == undefined){
                                                                            todo.w_friendlist2[id] = new Object();
                                                                        };
                                                                        todo.w_friendlist2[id].flags = (xatlib.xInt(todo.w_friendlist2[id].flags) | 1);
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                    if (FirstTwo == "/p"){
                                                        pci = xatlib.xInt(e.attributes.t.indexOf(","));
                                                        if (pci != -1){
                                                            i = xatlib.FindUser(todo.w_userno);
                                                            todo.Users[i].gagged = true;
                                                            todo.DoBuildUserList = true;
                                                            UngagTimeout = (getTimer() + (xatlib.xInt(e.attributes.t.substr((pci + 1))) * 1000));
                                                        };
                                                        ptime = 0;
                                                        if (pci == -1){
                                                            ptime = xatlib.xInt(e.attributes.t.substr(2));
                                                        } else {
                                                            ptime = xatlib.xInt(e.attributes.t.substr(2, (pci - 1)));
                                                        };
                                                        id = ((" (" + e.attributes.d) + ")");
                                                        if (ptime == 0){
                                                        } else {
                                                            if (ptime == -1){
                                                                len = todo.Users.length;
                                                                tt = 0;
                                                                while (tt < len) {
                                                                    todo.Users[tt].gagged = undefined;
                                                                    tt = (tt + 1);
                                                                };
                                                                todo.DoBuildUserList = true;
                                                                todo.helpstr = (xconst.ST(192) + id);
                                                                todo.HelpUpdate = 0;
                                                            } else {
                                                                todo.helpstr = (xconst.ST(193, Math.ceil((ptime / 60)).toString(), "3") + id);
                                                                todo.HelpUpdate = 0;
                                                            };
                                                        };
                                                    };
                                                    if (FirstTwo == "/t"){
                                                        TabsLength = main.ctabsmc.tabs.length;
                                                        tt = 0;
                                                        while (tt < TabsLength) {
                                                            if ((((main.ctabsmc.tabs[tt].User == u)) && ((main.ctabsmc.tabs[tt].Flags & 16)))){
                                                                xkiss.Kiss({
                                                                    t:e.attributes.t.substr(2),
                                                                    u:e.attributes.u,
                                                                    k:"Ttth"
                                                                });
                                                                main.Private_onDelete(tt);
                                                                break;
                                                            };
                                                            tt = (tt + 1);
                                                        };
                                                    };
                                                    if (e.nodeName == "m"){
                                                        if ((((((((((((FirstTwo == "/g")) || ((FirstTwo == "/u")))) || ((FirstTwo == "/m")))) || ((FirstTwo == "/r")))) || ((FirstTwo == "/k")))) || ((FirstTwo == "/n")))){
                                                            if (e.attributes.p != undefined){
                                                                e.attributes.p = xatlib.Replace(e.attributes.p, ">", " ");
                                                            };
                                                            uid = xatlib.FindUser(e.attributes.d);
                                                            if (uid != -1){
                                                                if (FirstTwo == "/g"){
                                                                    if (e.attributes.t.substr(0, 3) == "/gg"){
                                                                        e.attributes.t = SysMsg(5, undefined, uid, e.attributes.p, xatlib.xInt(e.attributes.t.substr(3)));
                                                                    } else {
                                                                        if (e.attributes.t.substr(0, 3) == "/gm"){
                                                                            e.attributes.t = SysMsg(6, undefined, uid, e.attributes.p, xatlib.xInt(e.attributes.t.substr(3)));
                                                                        } else {
                                                                            e.attributes.t = SysMsg(2, undefined, uid, e.attributes.p, xatlib.xInt(e.attributes.t.substr(2)));
                                                                        };
                                                                    };
                                                                } else {
                                                                    if (FirstTwo == "/u"){
                                                                        e.attributes.t = SysMsg(3, undefined, uid, e.attributes.p, xatlib.xInt(e.attributes.t.substr(2)));
                                                                    } else {
                                                                        if (FirstTwo == "/m"){
                                                                            e.attributes.t = SysMsg(0, e.attributes.p, uid);
                                                                        } else {
                                                                            if (FirstTwo == "/r"){
                                                                                e.attributes.t = SysMsg(0, "r", uid);
                                                                            } else {
                                                                                if (FirstTwo == "/k"){
                                                                                    uuid = xatlib.FindUser(e.attributes.u);
                                                                                    if (!todo.HasPower(uuid, 25)){
                                                                                        if (e.attributes.p.indexOf("#") != -1){
                                                                                            e.attributes.p = e.attributes.p.substr(0, e.attributes.p.indexOf("#"));
                                                                                        };
                                                                                    };
                                                                                    e.attributes.t = SysMsg(1, undefined, uid, e.attributes.p);
                                                                                } else {
                                                                                    if (FirstTwo == "/n"){
                                                                                        e.attributes.t = SysMsg(4, e.attributes.p, uid);
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                                IsSlash = false;
                                                            };
                                                        };
                                                    };
                                                };
                                                if (!IsSlash){
                                                    e.attributes.t = xatlib.PreProcSmilie(e.attributes.t, !((u == todo.w_userno)));
                                                };
                                                if (todo.w_mainowner){
                                                    IsGagUser = false;
                                                };
                                                MessageCount = 0;
                                                if ((((UserIndex == -1)) && (!(IsSlash)))){
                                                    if (u != 0){
                                                        if ((((todo.FlagBits & xconst.f_Live)) && ((e.nodeName == "m")))){
                                                            todo.Users.push({
                                                                n:"",
                                                                u:u,
                                                                v:0,
                                                                a:"",
                                                                h:"",
                                                                online:((e.nodeName)=="z") ? undefined : false,
                                                                onsuper:((e.nodeName)=="z") ? true : undefined,
                                                                owner:false,
                                                                friend:OnFriendList(u)
                                                            });
                                                            UserIndex = xatlib.FindUser(u);
                                                            todo.Users[UserIndex].n = xatlib.StripSmilies(xatlib.NameNoXat(e.attributes.n));
                                                            todo.Users[UserIndex].a = e.attributes.a;
                                                            todo.Users[UserIndex].h = e.attributes.h;
                                                            todo.Users[UserIndex].v = e.attributes.v;
                                                            if (todo.Users[UserIndex].n == ""){
                                                                todo.Users[UserIndex].n = xatlib.GetDefaultName(todo.Users[UserIndex].u);
                                                            };
                                                            if (todo.Users[UserIndex].a == ""){
                                                                todo.Users[UserIndex].a = xatlib.GetDefaultAvatar(todo.Users[UserIndex].u);
                                                            };
                                                            if (todo.Users[UserIndex].h == ""){
                                                                todo.Users[UserIndex].h = "";
                                                            };
                                                            todo.Users[UserIndex].registered = e.attributes.N;
                                                            todo.Users[UserIndex].q = e.attributes.q;
                                                            todo.Users[UserIndex].Bride = xatlib.xInt(e.attributes.d2);
                                                            todo.Users[UserIndex].aFlags = xatlib.xInt(e.attributes.d0);
                                                        } else {
                                                            todo.Users.push({
                                                                n:"",
                                                                u:u,
                                                                v:0,
                                                                a:"",
                                                                h:"",
                                                                online:((e.nodeName)=="z") ? undefined : false,
                                                                onsuper:((e.nodeName)=="z") ? true : undefined,
                                                                owner:false,
                                                                friend:OnFriendList(u)
                                                            });
                                                            UserIndex = xatlib.FindUser(u);
                                                        };
                                                    };
                                                };
                                                tgagged = ((UserIndex)!=-1) ? todo.Users[UserIndex].gagged : false;
                                                tbanned = ((UserIndex)!=-1) ? todo.Users[UserIndex].banned : false;
                                                tfriend = ((UserIndex)!=-1) ? todo.Users[UserIndex].friend : false;
                                                if (((((((((IsPrivateMessage) && (((((tgagged) || (tbanned))) || ((e.attributes.b == 1)))))) && (!(tfriend)))) && (!(IsAtUser)))) && (!(IsLocateUser)))){
                                                    return;
                                                };
                                                tmodplus = ((UserIndex)!=-1) ? ((((todo.Users[UserIndex].mainowner) || (todo.Users[UserIndex].owner))) || (todo.Users[UserIndex].moderator)) : false;
                                                if (((((((((((((IsPrivateMessage) && (!(IsPrivateChat)))) && (todo.HasPowerA(todo.w_Powers, 69, todo.w_Mask)))) && (!(tfriend)))) && (!(tmodplus)))) && (!(IsAtUser)))) && (!(IsLocateUser)))){
                                                    return;
                                                };
                                                if (((IsControlMessage) && (tbanned))){
                                                    return;
                                                };
                                                if ((e.attributes.q & 2)){
                                                    todo.Users[UserIndex].VIP = true;
                                                };
                                                if (e.nodeName == "z"){
                                                    if (UserIndex != -1){
                                                        if (todo.Users[UserIndex].onsuper != true){
                                                            xmessage.DeleteOneUserMc(UserIndex);
                                                        };
                                                        todo.Users[UserIndex].onsuper = true;
                                                    };
                                                } else {
                                                    if ((((e.nodeName == "m")) && (GotDone))){
                                                        if (((!((UserIndex == -1))) && (todo.Users[UserIndex].gagged))){
                                                            todo.Users[UserIndex].gagged = false;
                                                            todo.DoBuildUserList = true;
                                                        };
                                                        if (((!((UserIndex == -1))) && (!((todo.Users[UserIndex].online == true))))){
                                                            xmessage.DeleteOneUserMc(UserIndex);
                                                        };
                                                        if (UserIndex != -1){
                                                            todo.Users[UserIndex].online = true;
                                                        };
                                                    };
                                                };
                                                if (((!((UserIndex == -1))) && ((todo.Users[UserIndex].online == false)))){
                                                    if (e.attributes.n != undefined){
                                                        if (UserIndex != -1){
                                                            if (e.attributes.n.substr(0, 1) == "$"){
                                                                e.attributes.n = e.attributes.n.substr(1);
                                                            };
                                                            todo.Users[UserIndex].n = xatlib.NameNoXat(e.attributes.n);
                                                            todo.Users[UserIndex].a = e.attributes.a;
                                                            todo.Users[UserIndex].h = e.attributes.h;
                                                            todo.Users[UserIndex].v = e.attributes.v;
                                                            if (todo.Users[UserIndex].n == ""){
                                                                todo.Users[UserIndex].n = xatlib.GetDefaultName(todo.Users[UserIndex].u);
                                                            };
                                                            if (todo.Users[UserIndex].a == ""){
                                                                todo.Users[UserIndex].a = xatlib.GetDefaultAvatar(todo.Users[UserIndex].u);
                                                            };
                                                            if (todo.Users[UserIndex].h == ""){
                                                                todo.Users[UserIndex].h = "";
                                                            };
                                                            todo.Users[UserIndex].registered = e.attributes.N;
                                                            xmessage.DeleteOneUserMc(UserIndex);
                                                            todo.DoUpdateMessages = true;
                                                        };
                                                    };
                                                };
                                                if (((((((!((UserIndex == -1))) && (GotDone))) && ((((todo.Users[UserIndex].n == "")) || ((GetRev(e.attributes.u) > todo.Users[UserIndex].v)))))) && (!(IsSlash)))){
                                                    NetworkLocateUser(u);
                                                };
                                                if (((!((UserIndex == -1))) && (OnFriendList(todo.Users[UserIndex].u)))){
                                                    len = todo.w_friendlist.length;
                                                    g = 0;
                                                    while (g < len) {
                                                        if (todo.w_friendlist[g].u == todo.Users[UserIndex].u){
                                                            if (((((!((xatlib.StripSpace_(todo.Users[UserIndex].n) == xatlib.StripSpace_(todo.w_friendlist[g].n)))) || (!((todo.Users[UserIndex].a == todo.w_friendlist[g].a))))) || (!((todo.Users[UserIndex].h == todo.w_friendlist[g].h))))){
                                                                UpdateFriendList(todo.Users[UserIndex].u, true);
                                                            };
                                                            break;
                                                        };
                                                        g = (g + 1);
                                                    };
                                                };
                                                IsIgnored = OnIgnoreList(u);
                                                if (((((((((((todo.w_mainowner) || (todo.w_owner))) || (todo.w_moderator))) || ((IgnoreTime(u) < 0)))) && (!(IsPrivateMessage)))) && (!(IsPrivateChat)))){
                                                    IsIgnored = false;
                                                };
                                                if ((((((((((todo.FlagBits & xconst.f_Live)) && (IsPrivateMessage))) && (!(IsPrivateChat)))) && (!(IsSlash)))) && (!(((((((todo.Users[UserIndex].member) || (todo.Users[UserIndex].moderator))) || (todo.Users[UserIndex].owner))) || (todo.Users[UserIndex].mainowner)))))){
                                                    return;
                                                };
                                                strText = e.attributes.t;
                                                strText = xatlib.CleanText(strText, 1).toLowerCase();
                                                lc = strText.toLowerCase();
                                                if (((((((((!((strText.indexOf("chat.php?") == -1))) || (!((lc.indexOf("freexat") == -1))))) || (!((lc.indexOf("freesub") == -1))))) || (!((lc.indexOf("listchats") == -1))))) || (!((lc.indexOf("llstchats") == -1))))){
                                                    if (FirstTwo.substr(0, 1) != "/"){
                                                        IsSlash = true;
                                                    };
                                                };
                                                Links = xatlib.CountLinks(e.attributes.t);
                                                if (((((!((UserIndex == -1))) && ((e.nodeName == "m")))) && ((((((((((todo.Users[UserIndex].u > 101)) && (!(todo.Users[UserIndex].member)))) && (!(todo.Users[UserIndex].moderator)))) && (!(todo.Users[UserIndex].owner)))) && (!(todo.Users[UserIndex].mainowner)))))){
                                                    if (Links > 0){
                                                        IsSlash = true;
                                                    };
                                                };
                                                if ((((((e.nodeName == "m")) && ((todo.messageecho == "l")))) && ((Links > 0)))){
                                                    if (chat.sending_lc){
                                                        chat.sending_lc.send(chat.fromxat, "onMsg", 4, e.attributes.u, e.attributes.t);
                                                    };
                                                };
                                                if (IsLocateUser){
                                                    selfid = xatlib.FindUser(todo.w_userno);
                                                    uid = xatlib.FindUser(u);
                                                    if ((((u > 101)) && (main.utabsmc.tabs[2]))){
                                                        if (uid < 0){
                                                            todo.Users.push({
                                                                n:"",
                                                                u:u,
                                                                v:0,
                                                                a:"",
                                                                h:"",
                                                                TickCnt:todo.Tickled++
                                                            });
                                                        } else {
                                                            todo.Users[uid].TickCnt = todo.Tickled++;
                                                        };
                                                        main.utabsmc.ColorTab(2, 0x9900);
                                                        main.utabsmc.GlowTab(2);
                                                        main.utabsmc.Notif = true;
                                                    };
                                                    if ((((todo.Users[selfid].flag0 & 0x0400)) && ((u > 101)))){
                                                    } else {
                                                        if (((((todo.HasPower(selfid, 5)) && ((u > 101)))) && ((((UserIndex == -1)) || (!((todo.Users[UserIndex].online == true))))))){
                                                        } else {
                                                            if (((!(OnIgnoreList(u))) || ((u <= 101)))){
                                                                if (((OnFriendList(u)) || ((u <= 101)))){
                                                                    str = xatlib.GroupUrl();
                                                                } else {
                                                                    str = ("_" + xconst.ST(126));
                                                                };
                                                                if ((getTimer() - LastLocate) > 1150){
                                                                    if ((((todo.w_userno <= 101)) && ((todo.w_name.substr(0, 2) == "$$")))){
                                                                    } else {
                                                                        NetworkSendMsg(todo.w_userno, ("/a" + str), 0, u, 0);
                                                                        LastLocate = getTimer();
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                } else {
                                                    if (IsAtUser){
                                                        loctext = "";
                                                        if (e.attributes.t.substr(0, 3) == "/a_"){
                                                            loctext = xconst.ST(126);
                                                        } else {
                                                            if (e.attributes.t.substr(2, xconst.usedomain.length) == xconst.usedomain){
                                                                loctext = xconst.ST(129, e.attributes.t.substr(2));
                                                            } else {
                                                                loctext = e.attributes.t.substr(2);
                                                            };
                                                        };
                                                        UserIndex = xatlib.FindUser(xatlib.xInt(e.attributes.u));
                                                        if (todo.Users[UserIndex].UnmaskedPowers == undefined){
                                                            todo.Users[UserIndex].UnmaskedPowers = new Array();
                                                        };
                                                        if (todo.Users[UserIndex].Powers == undefined){
                                                            todo.Users[UserIndex].Powers = new Array();
                                                        };
                                                        pp = 0;
                                                        while (pp < 3) {
                                                            ii = ("p" + pp);
                                                            if (e.attributes[ii] != undefined){
                                                                todo.Users[UserIndex].UnmaskedPowers[pp] = e.attributes[ii];
                                                                if (todo.Users[UserIndex].Powers[pp] == undefined){
                                                                    todo.Users[UserIndex].Powers[pp] = e.attributes[ii];
                                                                };
                                                            };
                                                            pp = (pp + 1);
                                                        };
                                                        if (e.attributes.po != undefined){
                                                            todo.Users[UserIndex].PowerO = e.attributes.po;
                                                        };
                                                        todo.Users[UserIndex].n = xatlib.NameNoXat(e.attributes.n);
                                                        todo.Users[UserIndex].s = xatlib.GetStatus(e.attributes.n);
                                                        todo.Users[UserIndex].coins = e.attributes.x;
                                                        todo.Users[UserIndex].days = e.attributes.y;
                                                        todo.Users[UserIndex].debug = e.attributes.g;
                                                        viewprofile.WriteLocation(loctext, e.attributes.u, e.attributes.N);
                                                        if (e.attributes.n != undefined){
                                                            UserIndex = xatlib.FindUser(xatlib.xInt(e.attributes.u));
                                                            if (UserIndex != -1){
                                                                if (e.attributes.n.substr(0, 1) == "$"){
                                                                    e.attributes.n = e.attributes.n.substr(1);
                                                                };
                                                                todo.Users[UserIndex].v = e.attributes.v;
                                                                todo.Users[UserIndex].n = xatlib.NameNoXat(e.attributes.n);
                                                                todo.Users[UserIndex].u = xatlib.xInt(e.attributes.u);
                                                                todo.Users[UserIndex].a = e.attributes.a;
                                                                todo.Users[UserIndex].h = e.attributes.h;
                                                                todo.Users[UserIndex].registered = e.attributes.N;
                                                                if (todo.Users[UserIndex].n == ""){
                                                                    todo.Users[UserIndex].n = xatlib.GetDefaultName(todo.Users[UserIndex].u);
                                                                };
                                                                if (todo.Users[UserIndex].a == ""){
                                                                    todo.Users[UserIndex].a = xatlib.GetDefaultAvatar(todo.Users[UserIndex].u);
                                                                };
                                                                if (todo.Users[UserIndex].h == ""){
                                                                    todo.Users[UserIndex].h = "";
                                                                };
                                                                xmessage.DeleteOneUserMc(UserIndex);
                                                                xatlib.PurgeMessageFromUser(todo.Users[UserIndex].u);
                                                                todo.DoUpdateMessages = true;
                                                                todo.DoBuildUserList = true;
                                                                if (todo.Users[UserIndex].tUpd != undefined){
                                                                    main.ctabsmc.tabs[todo.Users[UserIndex].tUpd].t = (main.ctabsmc.tabs[todo.Users[UserIndex].tUpd].h = todo.Users[UserIndex].n);
                                                                    main.ctabsmc.UpdateTabs();
                                                                    todo.Users[UserIndex].tUpd = undefined;
                                                                };
                                                                if (OnFriendList(todo.Users[UserIndex].u)){
                                                                    len = todo.w_friendlist.length;
                                                                    g = 0;
                                                                    while (g < len) {
                                                                        if (todo.w_friendlist[g].u == todo.Users[UserIndex].u){
                                                                            if (((((!((xatlib.StripSpace_(todo.Users[UserIndex].n) == xatlib.StripSpace_(todo.w_friendlist[g].n)))) || (!((todo.Users[UserIndex].a == todo.w_friendlist[g].a))))) || (!((todo.Users[UserIndex].h == todo.w_friendlist[g].h))))){
                                                                                UpdateFriendList(todo.Users[UserIndex].u, true);
                                                                            };
                                                                            break;
                                                                        };
                                                                        g = (g + 1);
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    } else {
                                                        if (IsKickUser){
                                                            NetworkClose();
                                                            SetNetworkState(0, -1);
                                                            todo.lb = "n";
                                                            todo.DoUpdate = true;
                                                        } else {
                                                            if (IsDeleteMessage){
                                                                msgno = xatlib.xInt(e.attributes.t.substr(2));
                                                                if (msgno != 0){
                                                                    len = todo.Message.length;
                                                                    v = 0;
                                                                    while (v < len) {
                                                                        if (todo.Message[v].n == msgno){
                                                                            todo.Message[v].ignored = true;
                                                                        };
                                                                        v = (v + 1);
                                                                    };
                                                                    todo.DoUpdateMessages = true;
                                                                };
                                                            } else {
                                                                if (((IsGagUser) || (IsUnGagUser))){
                                                                    UpdateGagList(todo.w_useroom, xatlib.xInt(e.attributes.t.substr(2)), IsGagUser);
                                                                    i = xatlib.FindUser(todo.w_userno);
                                                                    if (i > -1){
                                                                        todo.Users[i].banned = (IsGagUser) ? true : false;
                                                                        xmessage.DeleteOneUserMc(i);
                                                                    };
                                                                    if (((GotDone) && (IsGagUser))){
                                                                        UnfairGroupName = ((todo.w_room)==todo.w_useroom) ? ((global.gn)!=undefined) ? xatlib.CleanCommas(global.gn) : xconst.ST(0) : ((todo.BackVars[1])!=undefined) ? xatlib.CleanCommas(todo.BackVars[1]) : xconst.ST(0);
                                                                        if (UnfairGroupName != xconst.ST(0)){
                                                                            my_date = new Date();
                                                                            t = Number(my_date.getTime());
                                                                            UnfairFile = (String(xatlib.xInt((Math.random() * 999999))) + t);
                                                                            UnfairMessage = (((((((((((todo.w_useroom + ",") + UnfairGroupName) + ",") + todo.w_userno) + ",") + xatlib.CleanTextNoXat(todo.w_name).substr(0, 128)) + ",") + u) + ",") + xatlib.CleanCommas(xatlib.GetUsername(u))) + ",,");
                                                                            UnfairTitle = xconst.ST(125);
                                                                            UnfairReport = UnfairTitle;
                                                                            len = todo.Message.length;
                                                                            hh = 0;
                                                                            while (hh < len) {
                                                                                if (((!((todo.Message[hh].s & 2))) && (((todo.Message[hh].n == 0)) ? true : (todo.Message[hh].d == 0)))){
                                                                                    UnfairMessage = (UnfairMessage + (((((todo.Message[hh].u + ",") + xatlib.CleanCommas(xatlib.GetUsername(todo.Message[hh].u))) + ",") + xatlib.CleanCommas(todo.Message[hh].t)) + ",,"));
                                                                                };
                                                                                if (todo.Message[hh].u == u){
                                                                                    if (todo.Message[hh].t.substr(0, 20) == ("<i> " + xconst.ST(119))){
                                                                                        UnfairTitle = ((xatlib.GetUsername(todo.Message[hh].u) + " ") + xconst.ST(127));
                                                                                        UnfairReport = todo.Message[hh].t.substr(7);
                                                                                    };
                                                                                };
                                                                                hh = (hh + 1);
                                                                            };
                                                                            xatlib.UnfairPopup(UnfairTitle, UnfairReport);
                                                                        };
                                                                    };
                                                                } else {
                                                                    if (((IsMakeUser) || (IsUnMakeUser))){
                                                                        if (((IsMakeUser) && ((todo.FlagBits & xconst.f_Live)))){
                                                                            w_redirectport = undefined;
                                                                        };
                                                                        so47 = SharedObject.getLocal(("chat" + String(todo.w_useroom)), "/");
                                                                        so47.objectEncoding = ObjectEncoding.AMF0;
                                                                        if (IsMakeUser){
                                                                            todo.w_userrev = xatlib.xInt(todo.w_userrev);
                                                                            so47.data.pass = xatlib.xInt(e.attributes.t.substr(2));
                                                                        } else {
                                                                            delete so47.data.pass;
                                                                        };
                                                                        so47.flush();
                                                                        i = xatlib.FindUser(todo.w_userno);
                                                                        if (i > -1){
                                                                            if (todo.Users[i].gagged == true){
                                                                                todo.Users[i].gagged = false;
                                                                                todo.DoBuildUserList = true;
                                                                            };
                                                                        };
                                                                    } else {
                                                                        if (IsScroller){
                                                                            main.SetScroller(e.attributes.t.substr(2, 510));
                                                                        } else {
                                                                            if (((!(IsUnknown)) && (!(IsSlash)))){
                                                                                todo.mi++;
                                                                                todo.Message.push({
                                                                                    i:(todo.mi * 2),
                                                                                    n:e.attributes.i,
                                                                                    t:e.attributes.t,
                                                                                    u:u,
                                                                                    ignored:IsIgnored,
                                                                                    s:e.attributes.s,
                                                                                    d:(IsPrivateChat) ? u : 0,
                                                                                    p:IsPrivateMessage,
                                                                                    pb:e.attributes.pb
                                                                                });
                                                                                if (todo.messageecho == "m"){
                                                                                    if (chat.sending_lc){
                                                                                        chat.sending_lc.send(chat.fromxat, "onMsg", 4, (todo.mi * 2), e.attributes.t);
                                                                                    };
                                                                                };
                                                                                if (main.mscrollmc.Scrolling != true){
                                                                                    nopc = 0;
                                                                                    nom = 0;
                                                                                    len = todo.Message.length;
                                                                                    tt = 0;
                                                                                    while (tt < len) {
                                                                                        if (todo.Message[tt].s == 2){
                                                                                            nopc = (nopc + 1);
                                                                                        } else {
                                                                                            nom = (nom + 1);
                                                                                        };
                                                                                        tt = (tt + 1);
                                                                                    };
                                                                                    maxpc = 100;
                                                                                    maxm = 150;
                                                                                    while ((((nopc > maxpc)) || ((nom > maxm)))) {
                                                                                        len = todo.Message.length;
                                                                                        RemoveMessage = undefined;
                                                                                        tt = 0;
                                                                                        while (tt < len) {
                                                                                            if (nopc > maxpc){
                                                                                                if (todo.Message[tt].s == 2){
                                                                                                    xmessage.DeleteOneMessageMc(tt);
                                                                                                    RemoveMessage = todo.Message.splice(tt, 1);
                                                                                                    nopc = (nopc - 1);
                                                                                                    break;
                                                                                                };
                                                                                            } else {
                                                                                                if (nom > maxm){
                                                                                                    if (todo.Message[tt].s != 2){
                                                                                                        xmessage.DeleteOneMessageMc(tt);
                                                                                                        RemoveMessage = todo.Message.splice(tt, 1);
                                                                                                        nom = (nom - 1);
                                                                                                        break;
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                            tt = (tt + 1);
                                                                                        };
                                                                                        if (!UserGotMessage(RemoveMessage[0].u)){
                                                                                            len = todo.Users.length;
                                                                                            tt = 0;
                                                                                            while (tt < len) {
                                                                                                if (todo.Users[tt].u == RemoveMessage[0].u){
                                                                                                    if (todo.Users[tt].online){
                                                                                                        break;
                                                                                                    };
                                                                                                    if (todo.Users[tt].u != todo.w_userno){
                                                                                                        if (todo.Users[tt].friend){
                                                                                                            if (todo.Users[tt].online != undefined){
                                                                                                                xmessage.DeleteOneUserMc(tt);
                                                                                                            };
                                                                                                            todo.Users[tt].online = undefined;
                                                                                                        } else {
                                                                                                            xmessage.DeleteOneUserMc(tt);
                                                                                                            todo.Users.splice(tt, 1);
                                                                                                        };
                                                                                                        todo.DoBuildUserList = true;
                                                                                                    };
                                                                                                    break;
                                                                                                };
                                                                                                tt = (tt + 1);
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                                if (((((!(IsUnknown)) && (IsNew))) && (!(IsIgnored)))){
                                                                                    if (((main.ctabsmc.TabIsPrivate()) && (!((main.ctabsmc.TabUser() == u))))){
                                                                                    } else {
                                                                                        selfid = xatlib.FindUser(todo.w_userno);
                                                                                        main.ProcessSounds(e.attributes.t, ((selfid)!=-1) ? !(todo.HasPower(selfid, 8)) : 0);
                                                                                    };
                                                                                };
                                                                                if (((((!(IsUnknown)) && (IsNew))) && (!(IsPrivateChat)))){
                                                                                    GlowUser(u);
                                                                                    if (main.ctabsmc.TabIsPrivate()){
                                                                                        if (todo.w_useroom == todo.w_room){
                                                                                            main.ctabsmc.ColorTab(0, 0x9900);
                                                                                            main.ctabsmc.GlowTab(0);
                                                                                        } else {
                                                                                            if (todo.w_useroom == todo.group){
                                                                                                main.ctabsmc.ColorTab(1, 0x9900);
                                                                                                main.ctabsmc.GlowTab(1);
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                                if (((((!(IsUnknown)) && (IsPrivateChat))) && (!(IsIgnored)))){
                                                                                    selfid = xatlib.FindUser(todo.w_userno);
                                                                                    HaveTab = -1;
                                                                                    AllowPC = true;
                                                                                    if (e.attributes.u != undefined){
                                                                                        if (((((!(todo.Users[UserIndex].mainowner)) && (!(todo.Users[UserIndex].owner)))) && (!(todo.Users[UserIndex].moderator)))){
                                                                                            if (((todo.HasPowerA(todo.w_Powers, 10, todo.w_Mask)) || ((((todo.FlagBits & xconst.f_Live)) && (!(todo.HasPowerA(todo.w_Powers, 10))))))){
                                                                                                if (!OnFriendList(todo.Users[UserIndex].u)){
                                                                                                    if (todo.Users[UserIndex].u > 101){
                                                                                                        AllowPC = false;
                                                                                                        tt = 0;
                                                                                                        while (tt < main.ctabsmc.tabs.length) {
                                                                                                            if (main.ctabsmc.tabs[tt].User == todo.Users[UserIndex].u){
                                                                                                                AllowPC = true;
                                                                                                                HaveTab = tt;
                                                                                                                break;
                                                                                                            };
                                                                                                            tt = (tt + 1);
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                        if (AllowPC){
                                                                                            TabNumber = ((HaveTab)!=-1) ? HaveTab : main.ctabsmc.TabAdd(u, 0xFFFFFF, 1, main.Private_onRelease, main.Private_onDelete);
                                                                                            main.ctabsmc.UpdateTabs();
                                                                                            if (main.ctabsmc.TabSelected() != TabNumber){
                                                                                                main.ctabsmc.GlowTab(TabNumber);
                                                                                                main.ctabsmc.ColorTab(TabNumber, 0x9900);
                                                                                            };
                                                                                            todo.DoBuildUserList = true;
                                                                                        };
                                                                                        if (AllowPC){
                                                                                            if (todo.HasPower(UserIndex, 75)){
                                                                                                if (e.attributes.t.indexOf("(bump") != -1){
                                                                                                    var Superior:* = function (_arg1, _arg2){
                                                                                                        if (todo.Users[_arg1].mainowner){
                                                                                                            return (false);
                                                                                                        };
                                                                                                        if (todo.Users[_arg1].owner){
                                                                                                            return ((todo.Users[_arg2].mainowner) ? true : false);
                                                                                                        };
                                                                                                        if (todo.Users[_arg1].moderator){
                                                                                                            return ((((todo.Users[_arg2].mainowner) || (todo.Users[_arg2].owner))) ? true : false);
                                                                                                        };
                                                                                                        if (((((todo.Users[_arg2].mainowner) || (todo.Users[_arg2].owner))) || (todo.Users[_arg2].moderator))){
                                                                                                            return (true);
                                                                                                        };
                                                                                                        return (false);
                                                                                                    };
                                                                                                    self = xatlib.FindUser(todo.w_userno);
                                                                                                    if (((((OnFriendList(todo.Users[UserIndex].u)) || ((todo.Users[UserIndex].u < 101)))) || (Superior(self, UserIndex)))){
                                                                                                        main.ctabsmc.ColorTab(TabNumber, 0xFF0000);
                                                                                                        t = getTimer();
                                                                                                        if ((((todo.LastBump == -1)) || (((t - todo.LastBump) > 20000)))){
                                                                                                            todo.CustomSound = "laserfire3";
                                                                                                            todo.DoAudieSnd = true;
                                                                                                            todo.LastBump = t;
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                                todo.DoUpdateMessages = true;
                                                                                todo.ScrollDown = true;
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            } else {
                                                if ((((((e.nodeName == "u")) || ((e.nodeName == "g")))) || ((e.nodeName == "o")))){
                                                    IsMainOwner = false;
                                                    IsOwner = false;
                                                    IsModerator = false;
                                                    IsMember = false;
                                                    IsOnline = false;
                                                    IsBanned = false;
                                                    IsForever = false;
                                                    IsGagged = false;
                                                    IsNew = (e.nodeName == "u");
                                                    OnXat = !(((xatlib.xInt(e.attributes.q) & 1) == 0));
                                                    IsVIP = ((!(((xatlib.xInt(e.attributes.f) & 32) == 0))) || (!(((xatlib.xInt(e.attributes.q) & 2) == 0))));
                                                    if (IsVIP){
                                                        Powers = new Array(xatlib.xInt(e.attributes.p0), xatlib.xInt(e.attributes.p1), xatlib.xInt(e.attributes.p2));
                                                    };
                                                    if ((e.attributes.f & 7) == 1){
                                                        IsMainOwner = true;
                                                    };
                                                    if ((e.attributes.f & 7) == 2){
                                                        IsModerator = true;
                                                    };
                                                    if ((e.attributes.f & 7) == 3){
                                                        IsMember = true;
                                                    };
                                                    if ((e.attributes.f & 7) == 4){
                                                        IsOwner = true;
                                                    };
                                                    if (e.nodeName == "u"){
                                                        IsOnline = true;
                                                    };
                                                    if ((((e.attributes.s & 1)) || ((e.attributes.f & 8)))){
                                                        IsNew = false;
                                                    };
                                                    if ((e.attributes.f & 16)){
                                                        IsBanned = true;
                                                    };
                                                    if ((e.attributes.f & 64)){
                                                        IsForever = true;
                                                    };
                                                    if ((e.attributes.f & 0x0100)){
                                                        IsGagged = true;
                                                    };
                                                    if (((((((IsNew) && ((todo.w_sound & 1)))) && (!(IsBanned)))) && ((u <= (2000000000 - 100000))))){
                                                        if (((main.ctabsmc.TabIsPrivate()) && (!((main.ctabsmc.TabUser() == u))))){
                                                        } else {
                                                            todo.DoUserSnd = true;
                                                        };
                                                    };
                                                    if (u != todo.w_userno){
                                                        UserIndex = xatlib.FindUser(u);
                                                        IsStealth = false;
                                                        if (((!((e.attributes.n == undefined))) && ((e.attributes.n.substr(0, 1) == "$")))){
                                                            IsStealth = ((IsOwner) || (IsMainOwner));
                                                            e.attributes.n = e.attributes.n.substr(1);
                                                        };
                                                        if (UserIndex == -1){
                                                            if (e.attributes.n == ""){
                                                                e.attributes.n = xatlib.GetDefaultName(u);
                                                            };
                                                            if (e.attributes.a == ""){
                                                                e.attributes.a = xatlib.GetDefaultAvatar(u);
                                                            };
                                                            if (e.attributes.h == ""){
                                                                e.attributes.h = "";
                                                            };
                                                            UserIndex = (todo.Users.push({}) - 1);
                                                        } else {
                                                            xmessage.DeleteOneUserMc(UserIndex);
                                                        };
                                                        if (e.nodeName != "g"){
                                                            todo.Users[UserIndex].n = xatlib.NameNoXat(e.attributes.n);
                                                            todo.Users[UserIndex].s = xatlib.GetStatus(e.attributes.n);
                                                            todo.Users[UserIndex].v = xatlib.xInt(e.attributes.v);
                                                            todo.Users[UserIndex].u = u;
                                                            todo.Users[UserIndex].a = e.attributes.a;
                                                            todo.Users[UserIndex].h = e.attributes.h;
                                                            todo.Users[UserIndex].online = IsOnline;
                                                            todo.Users[UserIndex].mainowner = IsMainOwner;
                                                            todo.Users[UserIndex].owner = IsOwner;
                                                            todo.Users[UserIndex].moderator = IsModerator;
                                                            todo.Users[UserIndex].member = IsMember;
                                                            todo.Users[UserIndex].onsuper = undefined;
                                                            todo.Users[UserIndex].OnXat = OnXat;
                                                            todo.Users[UserIndex].Stealth = IsStealth;
                                                            todo.Users[UserIndex].friend = OnFriendList(u);
                                                            todo.Users[UserIndex].registered = e.attributes.N;
                                                            todo.Users[UserIndex].VIP = IsVIP;
                                                            todo.Users[UserIndex].Powers = Powers;
                                                            todo.Users[UserIndex].Bride = xatlib.xInt(e.attributes.d2);
                                                            todo.Users[UserIndex].aFlags = xatlib.xInt(e.attributes.d0);
                                                            todo.Users[UserIndex].flag0 = xatlib.xInt(e.attributes.f);
                                                        };
                                                        todo.Users[UserIndex].xNum = e.attributes.x;
                                                        if (todo.Users[UserIndex].u == 4294967295){
                                                            todo.Users[UserIndex].n = (todo.Users[UserIndex].n + " Spectators");
                                                        };
                                                        if (((IsNew) && (main.ctabsmc.TabIsPrivate()))){
                                                            if (todo.w_useroom == todo.w_room){
                                                                main.ctabsmc.ColorTab(0, 0x9900);
                                                            } else {
                                                                if (todo.w_useroom == todo.group){
                                                                    main.ctabsmc.ColorTab(1, 0x9900);
                                                                };
                                                            };
                                                        };
                                                        todo.DoBuildUserList = true;
                                                        if (UserIndex > -1){
                                                            todo.Users[UserIndex].banned = IsBanned;
                                                            todo.Users[UserIndex].forever = IsForever;
                                                            todo.Users[UserIndex].gagged = IsGagged;
                                                            len = todo.Message.length;
                                                            cc = 0;
                                                            while (cc < len) {
                                                                if (xatlib.xInt(todo.Message[cc].u) == xatlib.xInt(todo.Users[UserIndex].u)){
                                                                    if (IsBanned){
                                                                        todo.Message[cc].ignored = true;
                                                                    };
                                                                };
                                                                cc = (cc + 1);
                                                            };
                                                            todo.DoBuildUserList = true;
                                                            todo.DoUpdateMessages = true;
                                                        };
                                                        if (todo.Users[UserIndex].friend){
                                                            len = todo.w_friendlist.length;
                                                            g = 0;
                                                            while (g < len) {
                                                                if (todo.w_friendlist[g].u == u){
                                                                    if (((((!((xatlib.StripSpace_(todo.Users[UserIndex].n) == xatlib.StripSpace_(todo.w_friendlist[g].n)))) || (!((todo.Users[UserIndex].a == todo.w_friendlist[g].a))))) || (!((todo.Users[UserIndex].h == todo.w_friendlist[g].h))))){
                                                                        UpdateFriendList(u, true);
                                                                    };
                                                                    break;
                                                                };
                                                                g = (g + 1);
                                                            };
                                                        };
                                                        if (todo.messageecho == "a"){
                                                            if ((((todo.Users[UserIndex].banned == true)) || (OnIgnoreList(u)))){
                                                                if (chat.sending_lc){
                                                                    chat.sending_lc.send(chat.fromxat, "onMsg", 4, u, "l");
                                                                };
                                                            } else {
                                                                if (chat.sending_lc){
                                                                    chat.sending_lc.send(chat.fromxat, "onMsg", 4, u, ("u" + e.attributes.a));
                                                                };
                                                            };
                                                        };
                                                    };
                                                } else {
                                                    if (e.nodeName == "l"){
                                                        UserIndex = xatlib.FindUser(u);
                                                        xmessage.DeleteOneUserMc(UserIndex);
                                                        if (((!((UserIndex == -1))) && (!((u == todo.w_userno))))){
                                                            if (((!((todo.Users[UserIndex].online == false))) || (!((todo.Users[UserIndex].onsuper == false))))){
                                                                xmessage.DeleteOneUserMc(UserIndex);
                                                            };
                                                            todo.Users[UserIndex].onsuper = (todo.Users[UserIndex].online = false);
                                                            todo.Users[UserIndex].xNum = undefined;
                                                            todo.Users[UserIndex].DJ = undefined;
                                                        };
                                                        if (((!((UserIndex == -1))) && (!(UserGotMessage(todo.Users[UserIndex].u))))){
                                                            len = todo.Users.length;
                                                            tt = 0;
                                                            while (tt < len) {
                                                                if ((((todo.Users[tt].u == todo.Users[UserIndex].u)) && (!((todo.Users[tt].u == todo.w_userno))))){
                                                                    todo.Users.splice(tt, 1);
                                                                    todo.DoBuildUserList = true;
                                                                    break;
                                                                };
                                                                tt = (tt + 1);
                                                            };
                                                        };
                                                        todo.DoBuildUserList = true;
                                                        if (todo.messageecho == "a"){
                                                            if (chat.sending_lc){
                                                                chat.sending_lc.send(chat.fromxat, "onMsg", 4, u, "l");
                                                            };
                                                        };
                                                    } else {
                                                        if (e.nodeName == "i"){
                                                            if (todo.w_useroom == todo.w_room){
                                                                xatlib.SplitBackground(e.attributes.b);
                                                                a = todo.BackVars;
                                                            } else {
                                                                a = e.attributes.b.split(";=");
                                                            };
                                                            todo.usebackground = a[0];
                                                            todo.useRadio = a[4];
                                                            if (((!((todo.useRadio == undefined))) && ((((global.xc & 0x1000)) || ((todo.useRadio.length < 10)))))){
                                                                todo.useRadio = undefined;
                                                            };
                                                            todo.ButCol = a[5];
                                                            if ((((todo.ButCol == undefined)) || ((todo.ButCol.length == 0)))){
                                                                todo.ButCol = 0xC8C8C8;
                                                            } else {
                                                                if (todo.ButCol.charAt(0) == "#"){
                                                                    todo.ButCol = parseInt(todo.ButCol.substr(1), 16);
                                                                };
                                                            };
                                                            todo.ButCol = (xatlib.xInt(todo.ButCol) & 0xFFFFFF);
                                                            todo.ButColW2 = (((todo.ButCol & 0xFF) + ((todo.ButCol >> 8) & 0xFF)) + ((todo.ButCol >> 16) & 0xFF));
                                                            if (todo.ButColW2 > 384){
                                                                todo.ButColW = 0;
                                                            } else {
                                                                todo.ButColW = 0xFFFFFF;
                                                            };
                                                            main.mcgetachat.RefreshColor();
                                                            main.ButtonLoginMc.RefreshColor();
                                                            main.retmc.RefreshColor();
                                                            xatlib.McSetRGB(main.retmcBut, todo.ButColW);
                                                            main.mscrollmc.RefreshColor();
                                                            main.uscrollmc.RefreshColor();
                                                            chat.mainDlg.UpdateBackground(todo.usebackground);
                                                            todo.FlagBits = xatlib.xInt(e.attributes.f);
                                                            chat.mainDlg.MkGpBut();
                                                            if (todo.MainFlagBits == undefined){
                                                                todo.MainFlagBits = todo.FlagBits;
                                                            };
                                                            if (todo.w_sound == undefined){
                                                                if ((todo.FlagBits & xconst.f_DefNoSound)){
                                                                    todo.w_sound = 4;
                                                                } else {
                                                                    todo.w_sound = 0xFF;
                                                                };
                                                            };
                                                            if ((todo.w_sound & 4) == 0){
                                                                todo.w_sound = (todo.w_sound | 254);
                                                            };
                                                            if (global.xt == undefined){
                                                                main.ctabsmc.tabs[1].t = todo.BackVars[1];
                                                                main.ctabsmc.tabs[1].h = (main.ctabsmc.tabs[1].t + " ");
                                                            };
                                                            if (global.xl == undefined){
                                                                todo.group = todo.BackVars[2];
                                                            };
                                                            if ((xconst.f_Lobby & todo.MainFlagBits)){
                                                                main.ctabsmc.tabs[0].Skip = undefined;
                                                                main.ctabsmc.tabs[1].Skip = undefined;
                                                            } else {
                                                                main.ctabsmc.tabs[0].Skip = true;
                                                                main.ctabsmc.tabs[1].Skip = true;
                                                            };
                                                            main.ctabsmc.UpdateTabs();
                                                            if ((global.xc & 0x0200)){
                                                                w_name_send = xatlib.CleanTextNoXat(todo.w_name);
                                                                w_avatar_send = xatlib.CleanText(todo.w_avatar);
                                                                ExternalInterface.call("jsWho", ((((((((((e.attributes.r + ",") + todo.w_userno) + ",") + todo.pass) + ",") + todo.w_k1) + ",") + w_name_send) + ",") + w_avatar_send));
                                                            };
                                                            if ((e.attributes.v & 1)){
                                                            } else {
                                                                todo.w_registered = undefined;
                                                            };
                                                            todo.w_VIP = ((e.attributes.v & 3) == 3);
                                                            todo.w_ALLP = (e.attributes.v & 4);
                                                            todo.w_mainowner = false;
                                                            todo.w_owner = false;
                                                            todo.w_moderator = false;
                                                            todo.w_member = false;
                                                            if (xatlib.xInt(e.attributes.r) == 1){
                                                                todo.w_mainowner = true;
                                                                todo.w_owner = true;
                                                            } else {
                                                                if (xatlib.xInt(e.attributes.r) == 2){
                                                                    todo.w_moderator = true;
                                                                } else {
                                                                    if (xatlib.xInt(e.attributes.r) == 3){
                                                                        todo.w_member = true;
                                                                    } else {
                                                                        if (xatlib.xInt(e.attributes.r) == 4){
                                                                            todo.w_owner = true;
                                                                        } else {
                                                                            todo.pass = undefined;
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                            if (todo.w_mainowner){
                                                                if (OnGagList(todo.w_useroom)){
                                                                    UpdateGagList(todo.w_useroom, 0, false);
                                                                };
                                                                i = xatlib.FindUser(todo.w_userno);
                                                                if (i > -1){
                                                                    todo.Users[i].banned = false;
                                                                    xmessage.DeleteOneUserMc(i);
                                                                };
                                                            };
                                                            len = todo.Users.length;
                                                            ee = 0;
                                                            while (ee < len) {
                                                                if (todo.Users[ee].u == todo.w_userno){
                                                                    todo.Users[ee].mainowner = (todo.Users[ee].owner = (todo.Users[ee].moderator = (todo.Users[ee].member = false)));
                                                                    IsBanned = OnGagList(todo.w_useroom);
                                                                    todo.Users[ee].banned = IsBanned;
                                                                    if (todo.w_mainowner){
                                                                        todo.Users[ee].mainowner = true;
                                                                    };
                                                                    if (todo.w_owner){
                                                                        todo.Users[ee].owner = true;
                                                                    };
                                                                    if (((((todo.w_owner) || (todo.w_mainowner))) && ((todo.w_name.substr(0, 1) == "$")))){
                                                                        todo.Users[ee].Stealth = true;
                                                                    };
                                                                    if (todo.w_moderator){
                                                                        todo.Users[ee].moderator = true;
                                                                    };
                                                                    if (todo.w_member){
                                                                        todo.Users[ee].member = true;
                                                                    };
                                                                    todo.Users[ee].VIP = todo.w_VIP;
                                                                    if (!todo.w_VIP){
                                                                        todo.w_Powers = undefined;
                                                                    };
                                                                    todo.Users[ee].Powers = ((todo.w_Powers)!=undefined) ? todo.w_Powers.slice() : new Array(0, 0, 0);
                                                                    if (todo.w_ALLP){
                                                                        todo.Users[ee].Powers[0] = (todo.Users[ee].Powers[0] | 1);
                                                                    };
                                                                    todo.Users[ee].Powers[2] = (todo.Users[ee].Powers[2] & ~(xatlib.xInt(((todo.w_Mask)!=undefined) ? todo.w_Mask[2] : 0)));
                                                                    todo.Users[ee].Powers[1] = (todo.Users[ee].Powers[1] & ~(xatlib.xInt(((todo.w_Mask)!=undefined) ? todo.w_Mask[1] : 0)));
                                                                    todo.Users[ee].Powers[0] = (todo.Users[ee].Powers[0] & ~(xatlib.xInt(((todo.w_Mask)!=undefined) ? todo.w_Mask[0] : 0)));
                                                                    todo.Users[ee].Bride = todo.w_d2;
                                                                    todo.Users[ee].aFlags = todo.w_d0;
                                                                    todo.Users[ee].flag0 = xatlib.xInt(e.attributes.f2);
                                                                    xmessage.DeleteOneUserMc(ee);
                                                                    todo.DoBuildUserList = true;
                                                                    break;
                                                                };
                                                                ee = (ee + 1);
                                                            };
                                                            if (((todo.w_mainowner) && (!(global.xb)))){
                                                                main.mcgetachat.SetText(xconst.ST(34));
                                                            } else {
                                                                main.mcgetachat.SetText(xconst.ST(5));
                                                            };
                                                            if (((((xconst.f_MembersOnly | xconst.f_MembersOnly2) & todo.FlagBits)) && (!(((((todo.w_owner) || (todo.w_moderator))) || (todo.w_member)))))){
                                                                type = undefined;
                                                                switch (((xconst.f_MembersOnly | xconst.f_MembersOnly2) & todo.FlagBits)){
                                                                    case (xconst.f_MembersOnly | xconst.f_MembersOnly2):
                                                                        if (!todo.w_VIP){
                                                                            type = xconst.ST(176);
                                                                        };
                                                                        break;
                                                                    case xconst.f_MembersOnly2:
                                                                        if (todo.w_registered == undefined){
                                                                            type = xconst.ST(177);
                                                                        };
                                                                        break;
                                                                    default:
                                                                        type = xconst.ST(178);
                                                                };
                                                                if (type != undefined){
                                                                    todo.helpstr = xconst.ST(37, type);
                                                                    todo.HelpUpdate = 0;
                                                                };
                                                            };
                                                            if (todo.messageecho == "a"){
                                                                if (chat.sending_lc){
                                                                    chat.sending_lc.send(chat.fromxat, "onMsg", 4, 0, "d");
                                                                };
                                                            };
                                                            main.SetScroller(((todo.FlagBits & xconst.f_Live)) ? xconst.ST(217) : "");
                                                        } else {
                                                            if (e.nodeName == "w"){
                                                                while (todo.Pools.length) {
                                                                    todo.Pools.shift();
                                                                };
                                                                Text = e.attributes.v;
                                                                left = 0;
                                                                RndOr = (todo.w_userno ^ 2863311530);
                                                                Rnd2 = RndOr;
                                                                len = Text.length;
                                                                q = 0;
                                                                while (q < len) {
                                                                    if ((((Text.substr(q, 1) == " ")) || ((q == (Text.length - 1))))){
                                                                        todo.pool = xatlib.xInt(Text.substr(left, ((q)==(Text.length - 1)) ? ((q - left) + 1) : (q - left)));
                                                                        if (left == 0){
                                                                            todo.newpool = todo.pool;
                                                                        } else {
                                                                            if ((Rnd2 & 1)){
                                                                                todo.Pools.push(todo.pool);
                                                                            } else {
                                                                                todo.Pools.unshift(todo.pool);
                                                                            };
                                                                            Rnd2 = (Rnd2 >>> 1);
                                                                            if (Rnd2 == 0){
                                                                                Rnd2 = RndOr;
                                                                            };
                                                                        };
                                                                        left = (q + 1);
                                                                    };
                                                                    q = (q + 1);
                                                                };
                                                                if (todo.newpool != todo.w_pool){
                                                                    main.ctabsmc.UpdateTabs();
                                                                    todo.w_pool = todo.newpool;
                                                                    xmessage.ClearLists(false);
                                                                    todo.DoBuildUserListScrollUp = true;
                                                                    todo.DoUpdateMessages = true;
                                                                } else {
                                                                    todo.DoBuildUserListScrollUp = true;
                                                                };
                                                                if (todo.messageecho == "a"){
                                                                    if (chat.sending_lc){
                                                                        chat.sending_lc.send(chat.fromxat, "onMsg", 4, 0, "d");
                                                                    };
                                                                };
                                                            } else {
                                                                if (e.nodeName == "f"){
                                                                    str = e.attributes.v;
                                                                    sarray = str.split(",");
                                                                    len = sarray.length;
                                                                    p = 0;
                                                                    while (p < len) {
                                                                        UserIndex = xatlib.FindUser(sarray[p]);
                                                                        if (UserIndex != -1){
                                                                            todo.Users[UserIndex].onsuper = true;
                                                                            xmessage.DeleteOneUserMc(UserIndex);
                                                                        };
                                                                        p = (p + 1);
                                                                    };
                                                                    todo.DoBuildUserListScrollUp = true;
                                                                } else {
                                                                    if (e.nodeName == "k"){
                                                                        todo.OnSuper = false;
                                                                    } else {
                                                                        if (e.nodeName == "dup"){
                                                                            todo.helpstr = xconst.ST(36);
                                                                            todo.HelpUpdate = 0;
                                                                            SetNetworkState(0, -1);
                                                                            todo.lb = "n";
                                                                            todo.DoUpdate = true;
                                                                            NetworkClose();
                                                                        } else {
                                                                            if (e.nodeName == "q"){
                                                                                if (e.attributes.k != undefined){
                                                                                    SetNetworkState(0, -1);
                                                                                    todo.lb = "n";
                                                                                    todo.DoUpdate = true;
                                                                                    NetworkClose();
                                                                                    if (QK != true){
                                                                                        QK = true;
                                                                                        todo.w_userno = 0;
                                                                                        todo.w_userrev = 0;
                                                                                        todo.w_k1 = 0;
                                                                                        todo.w_k2 = 0;
                                                                                        main.logoutbutonPress();
                                                                                    };
                                                                                } else {
                                                                                    doautoredirect = (w_redirectport == undefined);
                                                                                    SetNetworkState(0, -1);
                                                                                    if (e.attributes.r != undefined){
                                                                                        todo.w_room = (todo.w_useroom = xatlib.xInt(e.attributes.r));
                                                                                    } else {
                                                                                        w_redirectport = xatlib.xInt(e.attributes.p);
                                                                                        w_redirectdom = e.attributes.d;
                                                                                        if (w_redirectdom.substr(0, 1) == "e"){
                                                                                            w_redirectdom = (w_redirectdom + ".xatech.com");
                                                                                        };
                                                                                    };
                                                                                    if (((!((e.attributes.p2 == undefined))) && (!((e.attributes.d2 == undefined))))){
                                                                                        uid = xatlib.FindUser(e.attributes.d2);
                                                                                        if (e.attributes.p2.indexOf("#") != -1){
                                                                                            reason = e.attributes.p2.substr(0, e.attributes.p2.indexOf("#"));
                                                                                            bootr = e.attributes.p2.substr((e.attributes.p2.indexOf("#") + 1));
                                                                                            Bootp = (((((todo.Users[uid].n + " (") + todo.Users[uid].u) + ") booted you to ") + bootr) + ((reason)!="") ? (". Reason:" + reason) : ".");
                                                                                        };
                                                                                    };
                                                                                    todo.lb = "n";
                                                                                    todo.DoUpdate = true;
                                                                                    NetworkClose();
                                                                                    if (doautoredirect){
                                                                                        main.logoutbutonPress();
                                                                                    };
                                                                                };
                                                                            } else {
                                                                                if (e.nodeName == "logout"){
                                                                                    todo.helpstr = xconst.ST(35);
                                                                                    todo.HelpUpdate = 0;
                                                                                    SetNetworkState(0, -1);
                                                                                    todo.lb = "n";
                                                                                    todo.DoUpdate = true;
                                                                                    NetworkClose();
                                                                                    uid = xatlib.FindUser(todo.w_userno);
                                                                                    todo.Users[uid].online = false;
                                                                                    xmessage.DeleteOneUserMc(uid);
                                                                                    RemoveMessagesWithNoUser();
                                                                                } else {
                                                                                    if (e.nodeName == "idle"){
                                                                                        todo.helpstr = xconst.ST(33);
                                                                                        todo.HelpUpdate = 0;
                                                                                        SetNetworkState(0, -1);
                                                                                        todo.lb = "n";
                                                                                        todo.DoUpdate = true;
                                                                                        NetworkClose();
                                                                                        RemoveMessagesWithNoUser();
                                                                                    } else {
                                                                                        if (e.nodeName == "abort"){
                                                                                            todo.lb = "n";
                                                                                            todo.DoUpdate = true;
                                                                                            NetworkClose();
                                                                                            SetNetworkState(5, (12 * 6));
                                                                                        } else {
                                                                                            if (e.nodeName == "BB"){
                                                                                                if (YI != xatlib.xInt(e.attributes.y)){
                                                                                                    return;
                                                                                                };
                                                                                                tickcode.BB = e.attributes.t.split(",");
                                                                                            } else {
                                                                                                if (e.nodeName == "done"){
                                                                                                    chat.mainDlg.UpdateEmotes();
                                                                                                    if (global.um != undefined){
                                                                                                        xatlib.GeneralMessage("", ((xconst.ST(135) + ":\n\n") + global.um));
                                                                                                        main.box_layer.GeneralMessageH.Dia.Ok.But.PressFunc = function (_arg1){
                                                                                                            NetworkMakeUser(global.um, "r");
                                                                                                            SetNetworkState(0, -1);
                                                                                                            todo.lb = "n";
                                                                                                            todo.DoUpdate = true;
                                                                                                            NetworkClose();
                                                                                                            main.box_layer.GeneralMessageH.Delete();
                                                                                                            global.um = undefined;
                                                                                                        };
                                                                                                    };
                                                                                                    RemoveMessagesWithNoUser();
                                                                                                    RemoveUsersWithNoMessages();
                                                                                                    if (((xatlib.IsDefaultName(todo.w_name)) && ((todo.helpstr == "")))){
                                                                                                        todo.helpstr = xconst.ST(12, (" <o> <l>" + todo.w_name));
                                                                                                        todo.HelpUpdate = 0;
                                                                                                    };
                                                                                                    todo.FV = xatlib.xInt(Capabilities.version.split(" ")[1]);
                                                                                                    if (todo.FV < 10){
                                                                                                        todo.helpstr = "Please update your Flash player for best performance, click here: http://www.adobe.com/go/getflashplayer";
                                                                                                        todo.helpupdate = 0;
                                                                                                    };
                                                                                                    if (Bootp != undefined){
                                                                                                        todo.helpstr = Bootp;
                                                                                                        todo.HelpUpdate = 0;
                                                                                                        Bootp = undefined;
                                                                                                    };
                                                                                                    xmessage.UpdateMessages(true, false);
                                                                                                    if (((!(chat.IM.ImInit)) && ((global.xc & 0x0800)))){
                                                                                                        try {
                                                                                                            main.mcLoad.ImSendInit();
                                                                                                        } catch(e:Error) {
                                                                                                        };
                                                                                                    };
                                                                                                    todo.DoBuildUserList = true;
                                                                                                    GotDone = true;
                                                                                                    FI = true;
                                                                                                    if (todo.connectchannel != undefined){
                                                                                                        if (chat.sending_lc){
                                                                                                            chat.sending_lc.send(chat.fromxat, "onMsg", chat.connectchannel, chat.connectuser, chat.connectmsg);
                                                                                                        };
                                                                                                        todo.connectchannel = undefined;
                                                                                                    };
                                                                                                    if (todo.RefreshLogin){
                                                                                                        NetworkLogin(todo.w_userno, 0);
                                                                                                        todo.WV2 = true;
                                                                                                        todo.RefreshLogin = false;
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            } catch(e:Error) {
                todo.DoBuildUserList = true;
                todo.DoUpdateMessages = true;
            };
        }
        public static function NetworkDeleteMessage(_arg1){
            NetworkSendMsg(todo.w_userno, ("/d" + _arg1));
        }
        public static function UserGotUnignoredMessage(_arg1:Number):Boolean{
            var _local2:* = todo.Message.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if ((((todo.Message[_local3].u == _arg1)) && (!((todo.Message[_local3].ignored == true))))){
                    return (true);
                };
                _local3++;
            };
            return (false);
        }
        public static function TrimIgnoreList(){
            var _local3:*;
            var _local4:*;
            var _local1:Date = new Date();
            var _local2:* = (xatlib.xInt((Number(_local1.getTime()) / 1000)) - (12 * 3600));
            for (_local3 in todo.w_ignorelist2) {
                _local4 = todo.w_ignorelist2[_local3];
                if (_local4 < 0){
                    _local4 = (_local4 * -1);
                };
                if (_local4 < _local2){
                    delete todo.w_ignorelist2[_local3];
                };
            };
        }
        public static function myOnJoin(){
            SetNetworkState(4, -1);
            todo.DoUserSnd = true;
            var _local1:String = xatlib.CleanTextNoXat(todo.w_name);
            var _local2:String = xatlib.CleanText(todo.w_avatar);
            var _local3:String = xatlib.CleanText(todo.w_homepage);
            if (_local1 == null){
                _local1 = "";
            };
            if (_local2 == null){
                _local2 = "";
            };
            if (_local3 == null){
                _local3 = "";
            };
            GotDone = false;
            var _local4:* = new XMLDocument();
            var _local5:* = _local4.createElement("j2");
            _local5.attributes.v = ((todo.w_userrev)==undefined) ? 0 : todo.w_userrev;
            _local5.attributes.h = _local3.substr(0, 128);
            _local5.attributes.a = _local2.substr(0, 128);
            _local5.attributes.n = _local1.substr(0, 0x0100);
            if (todo.Macros != undefined){
                if (todo.Macros["status"] != undefined){
                    _local5.attributes.n = (_local5.attributes.n + ("##" + todo.Macros["status"].substr(0, 128)));
                };
            };
            if (todo.w_registered != undefined){
                _local5.attributes.N = todo.w_registered;
            };
            if (todo.w_dt){
                _local5.attributes.dt = todo.w_dt;
            };
            if (todo.w_xats){
                _local5.attributes.dx = todo.w_xats;
            };
            if (todo.w_PowerO != undefined){
                _local5.attributes.dO = todo.w_PowerO;
            };
            if (todo.w_Powers != null){
                if (todo.w_Powers[2]){
                    _local5.attributes.d6 = todo.w_Powers[2];
                };
                if (todo.w_Powers[1]){
                    _local5.attributes.d5 = todo.w_Powers[1];
                };
                if (todo.w_Powers[0]){
                    _local5.attributes.d4 = todo.w_Powers[0];
                };
            };
            if (todo.w_d3){
                _local5.attributes.d3 = todo.w_d3;
            };
            if (todo.w_d2){
                _local5.attributes.d2 = todo.w_d2;
            };
            if (todo.w_d0 != undefined){
                _local5.attributes.d0 = todo.w_d0;
            };
            if (todo.w_Mask != null){
                if (todo.w_Mask[2]){
                    _local5.attributes.m2 = todo.w_Mask[2];
                };
                if (todo.w_Mask[1]){
                    _local5.attributes.m1 = todo.w_Mask[1];
                };
                if (todo.w_Mask[0]){
                    _local5.attributes.m0 = todo.w_Mask[0];
                };
            };
            _local5.attributes.u = ((todo.w_userrev)==undefined) ? 2 : todo.w_userno;
            if (global.rf){
                _local5.attributes.e = "1";
            };
            _local5.attributes.f = ((((global.um)!=undefined) ? 0 : ((todo.w_autologin & 1)) ? 0 : 1 | (todo.LoginPressed) ? 2 : 0) | ((global.pass)!=undefined) ? 4 : 0);
            todo.w_autologin = (todo.w_autologin | 1);
            if (((todo.pass) || (!((global.pass == undefined))))){
                _local5.attributes.r = ((global.pass)!=undefined) ? global.pass : todo.pass;
            };
            if (OnGagList(todo.w_useroom)){
                _local5.attributes.b = GetGagTime(todo.w_useroom);
            };
            _local5.attributes.c = todo.w_useroom;
            if (todo.w_pool != undefined){
                _local5.attributes.p = todo.w_pool;
            };
            if ((((w_redirectport == undefined)) && ((todo.forceport == undefined)))){
                _local5.attributes.z = 11;
            };
            if (todo.w_d1){
                _local5.attributes.d1 = todo.w_d1;
            };
            _local5.attributes.k3 = xatlib.xInt(todo.w_k3);
            _local5.attributes.k = todo.w_k1;
            _local5.attributes.y = YI;
            if ((global.xc & 32)){
                _local5.attributes.q = 1;
            };
            _local5.attributes.l2 = jt1;
            _local5.attributes.l3 = jt2;
            _local5.attributes.l4 = (getTimer() - sjt);
            _local4.appendChild(_local5);
            var _local6:String = xatlib.XMLOrder(_local4, new Array("l4", "l3", "l2", "q", "y", "k", "k3", "d1", "z", "p", "c", "b", "r", "f", "e", "u", "m0", "m1", "m2", "d0", "d2", "d3", "d4", "d5", "d6", "dO", "dx", "dt", "N", "n", "a", "h", "v"));
            socket.send(_local6);
            todo.lb = "t";
            todo.OnSuper = true;
            todo.DoUpdate = true;
            todo.ResetSmilies = true;
            LurkerTimeout = LurkerLimit;
            if (todo.messageecho == "s"){
                if (chat.sending_lc){
                    chat.sending_lc.send(chat.fromxat, "onMsg", 4, 0, "i");
                };
            };
        }
        public static function RemoveUsersWithNoMessages(){
            var _local1:* = todo.Users.length;
            var _local2:* = 0;
            while (_local2 < _local1) {
                if (todo.Users[_local2] == undefined){
                } else {
                    if (todo.Users[_local2].u != todo.w_userno){
                        if (!UserGotUnignoredMessage(todo.Users[_local2].u)){
                            if (todo.Users[_local2].online == false){
                                if (todo.Users[_local2].friend){
                                    if (todo.Users[_local2].online != undefined){
                                        xmessage.DeleteOneUserMc(_local2);
                                    };
                                    todo.Users[_local2].online = undefined;
                                } else {
                                    xmessage.DeleteOneUserMc(_local2);
                                    todo.Users.splice(_local2, 1);
                                    _local2--;
                                };
                                todo.DoBuildUserList = true;
                            };
                        };
                    };
                };
                _local2++;
            };
        }
        public static function NetworkStartChat(){
            var request:* = null;
            var loader:* = null;
            xmessage.ClearLists(true);
            UngagTimeout = undefined;
            if (((!((todo.w_userrev == undefined))) && ((((todo.w_k1 == 0)) || ((todo.w_k2 == 0)))))){
                UserId = undefined;
                request = new URLRequest();
                request.url = (((((((todo.chatdomain + "auser3.php?") + "u=") + xatlib.xInt(todo.w_userno)) + "&k2=") + todo.w_k2) + "&t=") + Math.random());
                request.method = URLRequestMethod.GET;
                loader = new URLLoader();
                loader.load(request);
                loader.addEventListener(Event.COMPLETE, ausercompleteHandler);
            } else {
                if (todo.w_userrev == undefined){
                    UserId = 2;
                } else {
                    UserId = todo.w_userno;
                    k1 = todo.w_k1;
                    k2 = todo.w_k2;
                };
            };
            SetNetworkState(1, 120);
            todo.DoBuildUserListScrollUp = true;
            try {
                main.mcLoad.IMdisplayContacts();
            } catch(e:Error) {
            };
        }
        public static function NetworkIgnore(_arg1, _arg2=undefined){
            var _local4:*;
            var _local5:*;
            var _local6:*;
            var _local7:*;
            var _local3:* = OnIgnoreList(_arg1);
            UpdateIgnoreList(_arg1, !(_local3), _arg2);
            if (_arg2 == undefined){
                _local4 = todo.Message.length;
                _local5 = 0;
                while (_local5 < _local4) {
                    if (xatlib.xInt(todo.Message[_local5].u) == _arg1){
                        todo.Message[_local5].ignored = !(_local3);
                    };
                    _local5++;
                };
            };
            if (!_local3){
                _local6 = main.ctabsmc.tabs.length;
                _local7 = 0;
                while (_local7 < _local6) {
                    if (main.ctabsmc.tabs[_local7].User == _arg1){
                        main.Private_onDelete(_local7);
                        break;
                    };
                    _local7++;
                };
            };
            todo.DoBuildUserList = true;
            todo.DoUpdateMessages = true;
        }
        public static function NetworkClose(){
            SetNetworkState(0, -1);
            if (socket.connected){
                socket.close();
            };
            if (todo.messageecho == "s"){
                if (chat.sending_lc){
                    chat.sending_lc.send(chat.fromxat, "onMsg", 4, 0, "o");
                };
            };
        }
        public static function GetFriendStatus(){
            var _local1:*;
            var _local4:String;
            var _local6:*;
            var _local7:*;
            var _local8:*;
            var _local9:*;
            _local1 = todo.w_friendlist.length;
            var _local2:* = getTimer();
            var _local3:* = 0;
            while (_local3 < _local1) {
                _local6 = xatlib.FindUser(todo.w_friendlist[_local3].u);
                if (_local6 == -1){
                    if (todo.w_friendlist[_local3].n != undefined){
                        todo.Users.push({
                            n:xatlib.NameNoXat(todo.w_friendlist[_local3].n),
                            u:todo.w_friendlist[_local3].u,
                            v:todo.w_friendlist[_local3].v,
                            a:todo.w_friendlist[_local3].a,
                            h:todo.w_friendlist[_local3].h,
                            online:undefined,
                            banned:false,
                            owner:false,
                            friend:true,
                            onsuper:false
                        });
                    };
                } else {
                    if (((!((todo.Users[_local6].friend == true))) || (!((todo.Users[_local6].onsuper == false))))){
                        xmessage.DeleteOneUserMc(_local6);
                    };
                    todo.Users[_local6].friend = true;
                    todo.Users[_local6].onsuper = false;
                };
                _local3++;
            };
            if (todo.lb == "n"){
                return;
            };
            _local4 = "";
            var _local5:* = 0;
            _local4 = "f";
            if (todo.w_friendlist.length > 0){
                if (todo.w_friendlist[0].u != undefined){
                    _local1 = todo.w_friendlist.length;
                    _local7 = 0;
                    while (_local7 < _local1) {
                        _local5++;
                        _local4 = (_local4 + (" " + todo.w_friendlist[_local7].u));
                        if ((((_local5 == 80)) || ((_local7 >= (_local1 - 1))))){
                            _local8 = new XMLDocument();
                            _local9 = _local8.createElement(_local4);
                            _local8.appendChild(_local9);
                            socket.send(_local8);
                            _local5 = 0;
                            _local4 = "f";
                        };
                        _local7++;
                    };
                };
            };
        }
        public static function SysMsg(_arg1, _arg2, _arg3=undefined, _arg4=undefined, _arg5=undefined):String{
            var _local8:*;
            var _local9:*;
            var _local10:*;
            var _local6 = "";
            var _local7:* = todo.Users[_arg3].n.substr(0, 128);
            if (xatlib.CountLinks(_local7) > 0){
                _local7 = todo.Users[_arg3].registered;
                if (!_local7){
                    _local7 = todo.Users[_arg3].u;
                };
            };
            if (_arg1 == 0){
                if (_arg2 == "M"){
                    _local6 = (_local6 + xconst.ST(137, _local7));
                } else {
                    if (_arg2.charAt(0) == "m"){
                        _local6 = (_local6 + xconst.ST(128, _local7));
                    } else {
                        if (_arg2.charAt(0) == "e"){
                            _local6 = (_local6 + xconst.ST(132, _local7));
                        } else {
                            if (_arg2.charAt(0) == "o"){
                                _local6 = (_local6 + xconst.ST(137, _local7));
                            } else {
                                if (_arg2 == "r"){
                                    _local6 = (_local6 + xconst.ST(138, _local7));
                                };
                            };
                        };
                    };
                };
                _local8 = (xatlib.xInt((_arg2.substr(1) / 36)) / 100);
                if (_local8 > 0){
                    _local6 = (_local6 + (((("(" + _local8) + " ") + xconst.ST(116)) + ")"));
                };
            } else {
                if (_arg1 == 1){
                    if (_arg4.indexOf("#") != -1){
                        _local9 = _arg4.substr(0, _arg4.indexOf("#"));
                        _local10 = _arg4.substr((_arg4.indexOf("#") + 1));
                        _local6 = (_local6 + xconst.ST(194, _local7, _local10, _local9));
                    } else {
                        _local6 = (_local6 + xconst.ST(123, _local7, _arg4));
                    };
                } else {
                    if (_arg1 == 2){
                        if (_arg4.length == 0){
                            if (_arg5 == 0){
                                _local6 = (_local6 + xconst.ST(119, _local7));
                            } else {
                                _local6 = (_local6 + xconst.ST(120, _local7, String((_arg5 / 3600))));
                            };
                        } else {
                            if (_arg5 == 0){
                                _local6 = (_local6 + xconst.ST(121, _local7, _arg4));
                            } else {
                                _local6 = (_local6 + xconst.ST(122, _local7, String((_arg5 / 3600)), _arg4));
                            };
                        };
                    } else {
                        if (_arg1 == 3){
                            _local6 = (_local6 + (((xconst.ST(90) + " ") + _local7) + "."));
                        } else {
                            if (_arg1 == 4){
                                if (_arg2.charAt(0) == "n"){
                                    _local6 = (_local6 + xconst.ST(196, _local7));
                                    _local8 = (xatlib.xInt((_arg2.substr(1) / 36)) / 100);
                                    if (_local8 > 0){
                                        _local6 = (_local6 + (((("(" + _local8) + " ") + xconst.ST(116)) + ")"));
                                    };
                                };
                            } else {
                                if ((((_arg1 == 5)) || ((_arg1 == 6)))){
                                    if (_arg4.length == 0){
                                        _local6 = (_local6 + xconst.ST(199, ((_arg1 == 5)) ? xconst.ST(188) : xconst.ST(201), _local7, String((_arg5 / 3600))));
                                    } else {
                                        _local6 = (_local6 + xconst.ST(200, ((_arg1 == 5)) ? xconst.ST(188) : xconst.ST(201), _local7, String((_arg5 / 3600)), _arg4));
                                    };
                                } else {
                                    return ("");
                                };
                            };
                        };
                    };
                };
            };
            return (("<i> " + _local6));
        }
        public static function GetRev(_arg1):Number{
            return (((_arg1.indexOf("_"))!=-1) ? xatlib.xInt(_arg1.substr((_arg1.indexOf("_") + 1))) : 0);
        }
        private static function ausercompleteHandler(_arg1:Event):void{
            var _local2:URLLoader = URLLoader(_arg1.target);
            var _local3:URLVariables = new URLVariables(_local2.data.substr(1));
            UserId = _local3.UserId;
            k1 = _local3.k1;
            k2 = _local3.k2;
        }
        public static function NetworkSetPool(_arg1){
            var _local2:* = new XMLDocument();
            var _local3:* = _local2.createElement(("w" + xatlib.xInt(_arg1)));
            _local2.appendChild(_local3);
            socket.send(_local2);
        }
        public static function OnFriendList(_arg1:Number):Boolean{
            var _local2:* = todo.w_friendlist.length;
            var _local3:* = 0;
            while (_local3 < _local2) {
                if (todo.w_friendlist[_local3].u == _arg1){
                    return (true);
                };
                _local3++;
            };
            return (false);
        }
        public static function myOnConnect(_arg1:Event){
            var _local3:*;
            var _local4:*;
            var _local5:String;
            var _local2:* = true;
            if (NetworkState == 3){
                if (_local2){
                    YI = undefined;
                    _local3 = new XMLDocument();
                    _local4 = _local3.createElement("y");
                    if (todo.useport == 80){
                        _local4.attributes.p = GetPort(todo.w_useroom);
                        _local4.attributes.s = GetDom(todo.w_useroom);
                    };
                    if (todo.pass != undefined){
                        _local4.attributes.m = 1;
                    } else {
                        _local4.attributes.r = todo.w_useroom;
                    };
                    _local3.appendChild(_local4);
                    _local5 = xatlib.XMLOrder(_local3, new Array("r", "m", "s", "p"));
                    socket.send(_local5);
                    SetNetworkState(6, 120);
                } else {
                    if (w_redirectport == undefined){
                        SetNetworkState(11, -1);
                    } else {
                        SetNetworkState(0, -1);
                        todo.lb = "n";
                        todo.DoUpdate = true;
                        xatlib.GeneralMessage(xconst.ST(100), (xconst.ST(98) + " (F)"));
                    };
                };
                //unresolved jump
            };
        }
        public static function RemoveMessagesWithNoUser(){
            var _local3:*;
            var _local1:* = todo.Message.length;
            var _local2:* = 0;
            while (_local2 < _local1) {
                _local3 = xatlib.FindUser(todo.Message[_local2].u);
                if (_local3 == -1){
                } else {
                    if (todo.Users[_local3].n == ""){
                        todo.Message[_local2].ignored = true;
                    };
                };
                _local2++;
            };
            todo.DoUpdateMessages = true;
        }
        public static function NetworkTick(){
            var _local2:Date;
            var _local3:*;
            var _local4:Boolean;
            var _local5:*;
            var _local6:*;
            var _local7:*;
            var _local8:Number;
            var _local9:*;
            var _local10:*;
            if (NetworkTimeout != -1){
                NetworkTimeout = (NetworkTimeout - 1);
                if (NetworkTimeout < 0){
                    NetworkTimeout = 0;
                };
            };
            if (NetworkState == 1){
                auserLoaded();
                if (NetworkTimeout == 0){
                    SetNetworkState(0, -1);
                    xatlib.GeneralMessage(xconst.ST(100), (xconst.ST(98) + " (AT)"));
                };
            } else {
                if (NetworkState == 3){
                    if (NetworkTimeout == 0){
                        if ((((w_redirectport == undefined)) && (!((todo.w_room == 29749227))))){
                            SetNetworkState(11, -1);
                        } else {
                            SetNetworkState(0, -1);
                            xatlib.GeneralMessage(xconst.ST(100), (xconst.ST(98) + " (CT)"));
                        };
                    };
                } else {
                    if (NetworkState == 4){
                        if (w_redirectport != 80){
                            Fire = false;
                        };
                        if (LurkerTimeout != -1){
                            if (todo.w_userno <= (2000000000 - 100000)){
                                if (LurkerTimeout <= 0){
                                    NetworkSendMsg(todo.w_userno, "/KEEPALIVE", 0, 0, 1);
                                } else {
                                    LurkerTimeout = (LurkerTimeout - 1);
                                };
                            };
                        };
                        if (((((FailoverMode) && ((todo.lb == "t")))) && (((todo.tick % (12 * 60)) == 0)))){
                            _local2 = new Date();
                            _local3 = ((("http://util.xat.com/web_gear/chat/fail.php?failover" + xatlib.xInt((_local2.getTime() / 150000))) + "_") + GetDom(todo.w_useroom));
                            xatlib.LoadVariables(_local3, test_xml_onLoad);
                        };
                    } else {
                        if (NetworkState == 5){
                            if (NetworkTimeout != -1){
                                if (NetworkTimeout == 0){
                                    main.logoutbutonPress();
                                };
                            } else {
                                main.logoutbutonPress();
                            };
                        } else {
                            if (NetworkState == 6){
                                if (YI != undefined){
                                    if (todo.w_password != undefined){
                                        NetworkLogin(todo.w_email, todo.w_password);
                                        WV = true;
                                    };
                                    SetNetworkState(7, 120);
                                };
                                if (NetworkTimeout == 0){
                                    SetNetworkState(0, -1);
                                    xatlib.GeneralMessage(xconst.ST(100), (xconst.ST(98) + " (Y)"));
                                };
                            } else {
                                if (NetworkState == 7){
                                    if (WV == false){
                                        myOnJoin();
                                    };
                                } else {
                                    if (NetworkState == 8){
                                        FailoverMode = true;
                                        _local4 = (w_redirectport == undefined);
                                        SetNetworkState(0, -1);
                                        w_redirectport = todo.useport;
                                        _local5 = GetDom(todo.w_useroom);
                                        if (SockStatus[_local5] != 0){
                                            w_redirectdom = global.Sock[_local5];
                                        } else {
                                            w_redirectdom = global.Sock2[_local5];
                                        };
                                        todo.lb = "n";
                                        todo.DoUpdate = true;
                                        NetworkClose();
                                        if (_local4){
                                            main.logoutbutonPress();
                                        };
                                    } else {
                                        if (NetworkState == 9){
                                            FailoverMode = false;
                                            SetNetworkState(0, -1);
                                            w_redirectport = undefined;
                                            w_redirectdom = undefined;
                                            todo.lb = "n";
                                            todo.DoUpdate = true;
                                            NetworkClose();
                                            main.logoutbutonPress();
                                        } else {
                                            if (NetworkState == 11){
                                                if (Fire == true){
                                                    _local2 = new Date();
                                                    _local3 = ((("http://util.xat.com/web_gear/chat/fail.php?firewall" + xatlib.xInt((_local2.getTime() / 300000))) + "_") + GetDom(todo.w_useroom));
                                                    xatlib.LoadVariables(_local3, test_xml_onLoad);
                                                    SetNetworkState(12, (8 * 12));
                                                } else {
                                                    SockStatus[0] = (SockStatus[1] = (SockStatus[2] = (SockStatus[3] = "0")));
                                                    SetNetworkState(8, -1);
                                                };
                                            } else {
                                                if (NetworkState == 12){
                                                    if (NetworkTimeout != -1){
                                                        if (NetworkTimeout == 0){
                                                            SockStatus[0] = (SockStatus[1] = (SockStatus[2] = (SockStatus[3] = "0")));
                                                            SetNetworkState(8, -1);
                                                        };
                                                    };
                                                } else {
                                                    if (NetworkState == 13){
                                                        _local4 = (w_redirectport == undefined);
                                                        SetNetworkState(0, -1);
                                                        w_redirectport = 80;
                                                        w_redirectdom = global.fwd;
                                                        todo.lb = "n";
                                                        todo.DoUpdate = true;
                                                        NetworkClose();
                                                        if (_local4){
                                                            main.logoutbutonPress();
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
            MessageCount = (MessageCount - 1);
            if (MessageCount < 0){
                MessageCount = 0;
            };
            if (((((!((todo.MessageToProcess == ""))) && (!((todo.lb == "n"))))) && (GotDone))){
                main.ProcessMessage();
            };
            if (((((((!((todo.MessageToSend == ""))) && ((MessageCount <= 0)))) && (!((todo.lb == "n"))))) && (GotDone))){
                if (((todo.w_k1) && (!((todo.MessageToSend.indexOf(todo.w_k1.toString()) == -1))))){
                    todo.MessageToSend = xatlib.Replace(todo.MessageToSend, todo.w_k1.toString(), Math.floor((Math.random() * 2147483648)).toString());
                };
                if (((todo.w_k2) && (!((todo.MessageToSend.indexOf(todo.w_k2.toString()) == -1))))){
                    todo.MessageToSend = xatlib.Replace(todo.MessageToSend, todo.w_k2.toString(), Math.floor((Math.random() * 2147483648)).toString());
                };
                if (((todo.w_k3) && (!((todo.MessageToSend.indexOf(todo.w_k3.toString()) == -1))))){
                    todo.MessageToSend = xatlib.Replace(todo.MessageToSend, todo.w_k3.toString(), Math.floor((Math.random() * 2147483648)).toString());
                };
                _local6 = xatlib.CountLinks(todo.MessageToSend);
                if (_local6 <= 2){
                    NetworkSendMsg(todo.w_userno, todo.MessageToSend, todo.PrivateChat, todo.PrivateMessage, 0);
                    todo.PrivateChat = (todo.PrivateMessage = 0);
                    main.lockmc._visible = false;
                    if ((((todo.messageecho == "l")) && ((_local6 > 0)))){
                        if (chat.sending_lc){
                            chat.sending_lc.send(chat.fromxat, "onMsg", 4, todo.w_userno, todo.MessageToSend);
                        };
                    };
                };
                MessageCount = 25;
                todo.LastMessageToSend = todo.MessageToSend;
                todo.MessageToSend = "";
            };
            if (((((((((((!((todo.w_registered == undefined))) && (FI))) && (((todo.tick % 12) == 6)))) && ((todo.lb == "t")))) && (GotDone))) && ((((w_redirectport == undefined)) || ((w_redirectport == 80)))))){
                _local7 = todo.w_friendlist.length;
                if (fs > 0){
                    xatlib.MainSolWrite("w_friendlist2", todo.w_friendlist2);
                };
                fs = 0;
                _local8 = 0;
                while (_local8 < _local7) {
                    _local9 = todo.w_friendlist[_local8].u;
                    if ((((_local9 > 6)) && ((todo.w_friendlist2[_local9] == undefined)))){
                        _local10 = "";
                        if (todo.w_friendlist[_local8].u != todo.w_userno){
                            _local10 = ((((((("/b " + todo.w_friendlist[_local8].u) + ",") + "1") + ",") + "") + ",") + todo.w_friendlist[_local8].n.substr(0, 20));
                        } else {
                            if (todo.w_Mask == undefined){
                                todo.w_Mask = new Array(0, 0, 0);
                            };
                            _local10 = ((((((((((((((((((("/b " + todo.w_friendlist[_local8].u) + ",") + "1") + ",") + "") + ",") + todo.w_friendlist[_local8].n.substr(0, 128)) + ",") + todo.w_friendlist[_local8].a.toString().substr(0, 128)) + ",") + todo.w_friendlist[_local8].h.substr(0, 128)) + ",") + todo.w_friendlist[_local8].v.toString()) + ",") + xatlib.xInt(todo.w_Mask[0])) + "|") + xatlib.xInt(todo.w_Mask[1])) + "|") + xatlib.xInt(todo.w_Mask[2]));
                        };
                        NetworkSendMsg(todo.w_userno, _local10, 0, 0, 2);
                        todo.w_friendlist2[_local9] = {flags:1};
                        if (++fs >= 5){
                            break;
                        };
                    };
                    _local8++;
                };
                if (fs == 0){
                    FI = false;
                };
            };
            var _local1:* = getTimer();
            if ((((todo.lb == "t")) && ((_local1 > UngagTimeout)))){
                _local8 = xatlib.FindUser(todo.w_userno);
                todo.Users[_local8].gagged = false;
                todo.DoBuildUserList = true;
                UngagTimeout = undefined;
            };
        }
        public static function auserLoaded(){
            var Port:* = undefined;
            var IsBanned:* = false;
            var vx:* = undefined;
            var so4:* = undefined;
            var rn:* = undefined;
            if (UserId == undefined){
            } else {
                if (UserId == 0){
                    SetNetworkState(0, -1);
                    xatlib.GeneralMessage(xconst.ST(100), (xconst.ST(98) + " (A)"));
                    todo.lb = "n";
                    todo.DoUpdate = true;
                } else {
                    var catchIOError:* = function (_arg1:IOErrorEvent){
                        if (NetworkState == 3){
                            NetworkTimeout = 0;
                        };
                    };
                    var catchSecurityError:* = function (_arg1:SecurityErrorEvent):void{
                    };
                    if (UserId != 2){
                        todo.w_userno = xatlib.xInt(UserId);
                        todo.w_k1 = xatlib.xInt(k1);
                        todo.w_k2 = xatlib.xInt(k2);
                        so4 = SharedObject.getLocal("chat", "/");
                        so4.objectEncoding = ObjectEncoding.AMF0;
                        if (((1) && (!((so4 == null))))){
                            so4.data.w_userno = xatlib.xInt(todo.w_userno);
                            so4.data.w_userrev = todo.w_userrev;
                            so4.data.w_k1b = todo.w_k1;
                            so4.data.w_k2 = todo.w_k2;
                            so4.flush();
                        };
                        if (todo.w_name == ""){
                            todo.w_name = xatlib.GetDefaultName(todo.w_userno);
                        };
                        if (todo.w_avatar == ""){
                            todo.w_avatar = xatlib.GetDefaultAvatar(todo.w_userno);
                        };
                        if (todo.w_homepage == ""){
                            todo.w_homepage = "";
                        };
                    } else {
                        rn = xatlib.xInt((Math.random() * 1000000));
                        if (todo.w_name == ""){
                            todo.w_name = xatlib.GetDefaultName(rn);
                        };
                        if (todo.w_avatar == ""){
                            todo.w_avatar = xatlib.GetDefaultAvatar(rn);
                        };
                        if (todo.w_homepage == ""){
                            todo.w_homepage = "";
                        };
                    };
                    IsBanned = OnGagList(todo.w_useroom);
                    vx = todo.Macros;
                    todo.Users.push({
                        n:xatlib.NameNoXat(todo.w_name),
                        s:((todo.Macros)!=undefined) ? todo.Macros["status"] : undefined,
                        u:todo.w_userno,
                        v:todo.w_userrev,
                        a:todo.w_avatar,
                        h:todo.w_homepage,
                        online:true,
                        banned:IsBanned,
                        owner:false,
                        OnXat:!(((xatlib.xInt(global.xc) & 32) == 0)),
                        registered:todo.w_registered,
                        VIP:todo.w_VIP,
                        Bride:todo.w_d2,
                        aFlags:todo.w_d0,
                        Powers:todo.w_Powers
                    });
                    todo.DoBuildUserList = true;
                    todo.DoUpdateMessages = true;
                    todo.ScrollDown = true;
                    todo.LastScrollTime = undefined;
                    if (w_redirectport != undefined){
                        Port = w_redirectport;
                        todo.sockdomain = w_redirectdom;
                    } else {
                        todo.sockdomain = global.Sock[GetDom(todo.w_useroom)];
                        Port = GetPort(todo.w_useroom);
                    };
                    socket = new XMLSocket();
                    socket.addEventListener(Event.CONNECT, myOnConnect);
                    socket.addEventListener(DataEvent.DATA, myOnXML);
                    socket.addEventListener(Event.CLOSE, socketClose);
                    socket.addEventListener(IOErrorEvent.IO_ERROR, catchIOError);
                    socket.addEventListener(SecurityErrorEvent.SECURITY_ERROR, catchSecurityError);
                    todo.useport = Port;
                    sjt = getTimer();
                    socket.connect(todo.sockdomain, todo.useport);
                    SetNetworkState(3, ((w_redirectport)==undefined) ? 120 : 180);
                };
            };
        }
        public static function GetPort(_arg1):Number{
            return (((xatlib.xInt(_arg1))<8) ? ((10000 - 1) + xatlib.xInt(_arg1)) : ((10000 + 7) + (xatlib.xInt(_arg1) % 32)));
        }
        public static function UpdateChannel(_arg1, _arg2){
            var _local3:Number = xatlib.FindUser(_arg2);
            if (_arg1 < 10000){
                _arg1 = 0;
            };
            if ((((_local3 >= 0)) && (!((todo.Users[_local3].xNum == _arg1))))){
                todo.Users[_local3].xNum = _arg1;
                xmessage.DeleteOneUserMc(_local3);
            };
        }
        public static function UpdateGagList(_arg1:Number, _arg2:Number, _arg3:Boolean){
            var _local4:*;
            var _local5:*;
            var _local6:Object;
            if (_arg3 == true){
                if (OnGagList(_arg1)){
                    _local4 = todo.w_banlist.length;
                    _local5 = 0;
                    while (_local5 < _local4) {
                        if (todo.w_banlist[_local5].r == _arg1){
                            todo.w_banlist[_local5].t = _arg2;
                            break;
                        };
                        _local5++;
                    };
                } else {
                    _local6 = new Object();
                    _local6.r = _arg1;
                    _local6.t = _arg2;
                    todo.w_banlist.push(_local6);
                };
            } else {
                _local4 = todo.w_banlist.length;
                _local5 = 0;
                while (_local5 < _local4) {
                    if (todo.w_banlist[_local5].r == _arg1){
                        todo.w_banlist.splice(_local5);
                        break;
                    };
                    _local5++;
                };
            };
            xatlib.MainSolWrite("w_banlist", todo.w_banlist);
        }
        public static function NetworkLocateUser(_arg1){
            if (_arg1 >= (2000000000 - (100000 * 2))){
                return;
            };
            NetworkSendMsg(todo.w_userno, "/l", 0, _arg1, 0);
        }
        public static function IgnoreTime(_arg1:Number){
            return (todo.w_ignorelist2[_arg1]);
        }
        public static function OnIgnoreList(_arg1:Number):Boolean{
            return (!((todo.w_ignorelist2[_arg1] == undefined)));
        }
        public static function NetworkSendMsg(_arg1, _arg2, _arg3=undefined, _arg4=undefined, _arg5=undefined, _arg6=undefined){
            var _local8:*;
            if (todo.lb == "n"){
                return;
            };
            if (_arg3 == undefined){
                _arg3 = 0;
            };
            if (_arg4 == undefined){
                _arg4 = 0;
            };
            if (_arg5 == undefined){
                _arg5 = 0;
            };
            var _local7:* = new XMLDocument();
            var _local9:* = true;
            var _local10 = "";
            if (_arg5 != 0){
                _local8 = _local7.createElement("c");
                if (_arg3 != 0){
                    _local8.attributes.d = todo.w_userno;
                    _local8.attributes.s = 2;
                };
                _local8.attributes.t = _arg2;
                _local8.attributes.u = _arg5;
                if (_arg6 != undefined){
                    _local8.attributes.p = _arg6;
                };
                _local7.appendChild(_local8);
                _local10 = xatlib.XMLOrder(_local7, new Array("p", "u", "t", "s", "d"));
                socket.send(_local10);
            } else {
                if (_arg4 != 0){
                    if (((((((OnUserList(_arg4)) && (!((_arg2.substr(0, 2) == "/a"))))) && (!((_arg2.substr(0, 2) == "/l"))))) && (!((_arg2.substr(0, 2) == "/t"))))){
                        _local8 = _local7.createElement("p");
                        if (_arg3 != 0){
                            _local8.attributes.d = todo.w_userno;
                            _local8.attributes.s = 2;
                        };
                        _local8.attributes.t = _arg2;
                        _local8.attributes.u = _arg4;
                        _local7.appendChild(_local8);
                        _local10 = xatlib.XMLOrder(_local7, new Array("u", "t", "s", "d"));
                        socket.send(_local10);
                    } else {
                        _local8 = _local7.createElement("z");
                        if (_arg3 != 0){
                            _local8.attributes.s = 2;
                        };
                        _local8.attributes.t = _arg2;
                        _local8.attributes.u = ((todo.w_userno + "_") + todo.w_userrev);
                        _local8.attributes.d = _arg4;
                        _local9 = false;
                        _local7.appendChild(_local8);
                        _local10 = xatlib.XMLOrder(_local7, new Array("d", "u", "t", "s"));
                        socket.send(_local10);
                    };
                } else {
                    if (_arg3 != 0){
                        if (OnUserList(_arg3)){
                            _local8 = _local7.createElement("p");
                            _local8.attributes.d = todo.w_userno;
                            _local8.attributes.s = 2;
                            _local8.attributes.t = _arg2;
                            _local8.attributes.u = _arg3;
                            _local7.appendChild(_local8);
                            _local10 = xatlib.XMLOrder(_local7, new Array("u", "t", "s", "d"));
                            socket.send(_local10);
                        } else {
                            _local8 = _local7.createElement("z");
                            _local8.attributes.s = 2;
                            _local8.attributes.t = _arg2;
                            _local8.attributes.u = ((todo.w_userno + "_") + todo.w_userrev);
                            _local8.attributes.d = _arg3;
                            _local9 = false;
                            _local7.appendChild(_local8);
                            _local10 = xatlib.XMLOrder(_local7, new Array("d", "u", "t", "s"));
                            socket.send(_local10);
                        };
                    } else {
                        _local8 = _local7.createElement("m");
                        _local8.attributes.u = ((todo.w_userrev)<=0) ? _arg1 : ((_arg1 + "_") + todo.w_userrev);
                        _local8.attributes.t = _arg2;
                        if (xatlib.CountLinks(_arg2) > 0){
                            _local8.attributes.l = 1;
                        };
                        _local7.appendChild(_local8);
                        _local10 = xatlib.XMLOrder(_local7, new Array("t", "u", "l"));
                        socket.send(_local10);
                    };
                };
            };
            if (_arg2.substr(0, 1) != "/"){
                GlowUser(todo.w_userno);
            };
            if (_arg2.substr(0, 3) == "/KD"){
                _local9 = false;
            };
            if (_local9){
                LurkerTimeout = LurkerLimit;
            };
        }
        public static function NetworkLogin(_arg1, _arg2){
            var _local3:* = new XMLDocument();
            var _local4:* = _local3.createElement("v");
            _local4.attributes.n = _arg1;
            _local4.attributes.p = _arg2;
            _local3.appendChild(_local4);
            var _local5:String = xatlib.XMLOrder(_local3, new Array("p", "n"));
            socket.send(_local5);
        }
        public static function NetworkSendExtMessage(_arg1, _arg2=undefined, _arg3=undefined){
            var _local5:*;
            LurkerTimeout = LurkerLimit;
            var _local4:* = new XMLDocument();
            _local5 = _local4.createElement("x");
            _local5.attributes.t = ((_arg3 == undefined)) ? "undefined" : _arg3;
            if (_arg2 != 0){
                _local5.attributes.d = ((_arg2 == undefined)) ? "undefined" : _arg2;
            };
            _local5.attributes.u = todo.w_userno;
            _local5.attributes.i = _arg1;
            UpdateChannel(_arg1, todo.w_userno);
            _local4.appendChild(_local5);
            var _local6:String = xatlib.XMLOrder(_local4, new Array("i", "u", "d", "t"));
            socket.send(_local6);
        }

        global.Sock = new Array("174.36.242.26", "174.36.242.34", "174.36.242.42", "69.4.231.250");
        global.Sock2 = new Array("208.43.218.82", "174.36.56.202", "174.36.4.146", "174.36.56.186");
        if (!global.fwd){
            global.fwd = "174.36.56.188";
        };
    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;
    import flash.utils.*;

    public class cachedSprite extends Sprite {

        public static const cs_RollOver = 1;
        private static const TTL:int = 60;

        public static var dic:Dictionary = new Dictionary();

        var Timeout:int = 0;
        var bd:BitmapData;
        var Frames:int;
        var Pending:Boolean = true;
        public var Flags:int = 0;

        public static function Tidy(){
            var _local1:*;
            var _local2:*;
            for (_local1 in dic) {
                _local2 = dic[_local1];
                _local2.Timeout++;
                if (_local2.Timeout > TTL){
                    if (_local2.bd){
                        _local2.bd.dispose();
                    };
                    delete dic[_local1];
                };
            };
        }

    }
}//package 
﻿package {
    import flash.xml.*;
    import flash.events.*;
    import flash.display.*;
    import flash.net.*;
    import flash.text.*;
    import flash.ui.*;

    public class xkiss extends Sprite {

        static var Messfld;
        static var PassField;
        static var KissTime;
        static var tTimebackground;
        static var mcBuystuffbackground;
        static var KissMc;
        static var tTime;
        static var tXatsbackground;
        static var CoinB;
        static var mc3o;
        static var Messfldbackground;
        static var PassFieldbackground;
        static var Name;
        static var tXats;
        static var mLoader2;

        static function BuyRelease(_arg1:MouseEvent){
            xatlib.Register_onRelease(1);
        }
        static function AddAd(){
        }
        static function KissPress(_arg1:MouseEvent){
            main.hint.HintOff();
            if (todo.w_coins < _arg1.currentTarget.c){
                xatlib.Register_onRelease(1);
            } else {
                BlowKiss(_arg1.currentTarget);
            };
        }
        static function LoadAs2Kiss(){
            var _local3:*;
            var _local4:URLRequest;
            mc3o.SV = global.sv;
            mc3o.SF = (2 + 4);
            var _local1:* = mc3o.t.split("#");
            _local1.shift();
            xmessage.PowSm(mc3o, _local1, 0, new Array(4294967295, 4294967295, 4294967295));
            if ((todo.w_sound & 1)){
                mc3o.Vol = todo.w_Vol[1];
            };
            mc3o.WW = todo.StageWidth;
            mc3o.HH = todo.StageHeight;
            mLoader2 = new Loader();
            KissMc.addChild(mLoader2);
            var _local2:URLVariables = new URLVariables();
            for (_local3 in mc3o) {
                _local2[_local3] = mc3o[_local3];
            };
            _local4 = new URLRequest();
            _local4.url = "http://xat.com/images/ks/kshim.swf";
            _local4.method = URLRequestMethod.GET;
            _local4.data = _local2;
            mLoader2.load(_local4);
            mLoader2.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, xatlib.catchIOError);
        }
        static function KissTick(_arg1){
            KissTime--;
            if (KissTime == (-2 * 12)){
                AddMessage();
            };
            if (KissTime == (-10 * 12)){
                KissMc.removeChild(Name);
                Name = undefined;
            };
            if (KissTime < (-30 * 12)){
                CloseKiss();
            };
        }
        static function AddKisses(_arg1, _arg2, _arg3, _arg4, _arg5, _arg6, _arg7=undefined, _arg8=undefined, _arg9=0){
            var _local11:*;
            var _local12:*;
            _arg4.coins = xatlib.AttachMovie(_arg4.txt1, "coins", {
                x:xatlib.NX(86),
                y:xatlib.NY((_arg3 + 30)),
                scaleX:xatlib.SY(0.8),
                scaleY:xatlib.SY(0.8)
            });
            xatlib.createTextNoWrap(_arg4.txt1, xatlib.NX(36), xatlib.NY((_arg3 + 3)), xatlib.NX(90), xatlib.NY(52), ((_arg5 + "\n") + _arg6), 0x202020, 0, 100, 0, 18, "left", 1);
            if (_arg2 > 5){
                _arg2 = 5;
            };
            var _local10:* = _arg1;
            while (_local10 < xconst.kssa.length) {
                var _temp1 = _arg2;
                _arg2 = (_arg2 - 1);
                if (_temp1 == 0){
                    break;
                };
                _local11 = new MovieClip();
                _arg4.Kiss.push(_local11);
                _arg4.addChild(_local11);
                _local11.n = xconst.kssa[_local10];
                if ((((((((_local10 == 19)) && ((todo.Macros is Object)))) && (!((todo.Macros["SetKiss"] == undefined))))) && (!((todo.Macros["SetKiss"] == "Snow"))))){
                    _local11.n = todo.Macros["SetKiss"];
                };
                if ((((_local10 == 18)) && (!(todo.HasPowerA(todo.w_Powers, 56, todo.w_Mask))))){
                    _local11.n = "Snow";
                };
                _local11.c = _arg6;
                _local11.b = _arg8;
                if (_arg7 != undefined){
                    if (_arg7 > 0){
                        _local11.Type = _arg7;
                    } else {
                        _local11.Type = _arg7[(_local10 - _arg1)];
                    };
                };
                _local11.scaleX = xatlib.SX();
                _local11.scaleY = xatlib.SY();
                xatlib.LoadMovie(_local11, xatlib.SmilieUrl(("t" + _local11.n), "ks"));
                _local11.x = (xatlib.NX(143) + (xatlib.NX(95) * (_local10 - _arg1)));
                _local11.y = xatlib.NY(_arg3);
                _local11.addEventListener(MouseEvent.MOUSE_DOWN, KissPress);
                _local12 = (xconst.ST(207) + " ");
                switch (_arg7){
                    case 2:
                        _local12 = (_local12 + (xconst.ST(150) + ":"));
                        break;
                    case 3:
                        _local12 = (_local12 + xconst.ST(209));
                        break;
                    case 4:
                        _local12 = (_local12 + xconst.ST(210));
                        break;
                };
                _local12 = (_local12 + _local11.n);
                _local11.hint = {
                    Hint:_local12,
                    mc:_local11
                };
                _local11.addEventListener(MouseEvent.ROLL_OVER, main.hint.EasyHint);
                _local11.addEventListener(MouseEvent.ROLL_OUT, main.hint.HintOff);
                _local10++;
            };
            return (80);
        }
        public static function CloseKiss(_arg1=0){
            if (mc3o != undefined){
                AddMessage();
            };
            if (KissMc){
                KissMc.removeEventListener(Event.ENTER_FRAME, KissTick);
                if (Name){
                    KissMc.removeChild(Name);
                };
                main.kiss_layer.removeChild(KissMc);
            };
            if (mLoader2){
                mLoader2.unloadAndStop(true);
            };
            Name = (mc3o = (KissMc = (mLoader2 = undefined)));
        }
        static function AddMessage(){
            var _local1:*;
            if (mc3o != undefined){
                _local1 = mc3o.t.split("#");
                todo.Message.push({
                    n:0,
                    t:((((("<inf8> " + mc3o.k) + ": (") + mc3o.k) + ") ") + _local1[0]),
                    u:mc3o.u,
                    s:0,
                    d:0
                });
                todo.DoUpdateMessages = true;
                todo.ScrollDown = true;
                mc3o = undefined;
            };
        }
        static function mcBuystuffbackground_close(){
            main.DialogOpen = 0;
            CloseAd();
            main.hint.HintOff();
            mcBuystuffbackground.Delete();
        }
        static function K_Can_onRelease(_arg1:MouseEvent=undefined){
            mcBuystuffbackground_close();
        }
        static function AddName(_arg1){
            if ((((_arg1 == undefined)) || ((_arg1.length == 0)))){
                return;
            };
            Name = new Sprite();
            KissMc.addChild(Name);
            var _local2:* = xatlib.ButtonCurve2(0, todo.StageWidth, 25, 0, 1, 0xFFFFFF, 1, 0xFFFFFF, 0.5);
            Name.addChild(_local2);
            _local2.y = (todo.StageHeight - 28);
            var _local3:* = new MovieClip();
            Name.addChild(_local3);
            xmessage.AddMessageToMc(_local3, 0, _arg1, 0, 999, (todo.StageHeight - 28), 0);
            var _local4:* = xatlib.xInt(((todo.StageWidth - xmessage.xPos) / 2));
            if (_local4 < 0){
                _local4 = 0;
            };
            _local3.x = _local4;
            var _local5:* = new close();
            _local2.addChild(_local5);
            _local5.x = (todo.StageWidth - 20);
            _local5.y = 5;
            _local5.addEventListener(MouseEvent.MOUSE_DOWN, CloseKiss);
        }
        static function Trade_onRelease(_arg1:MouseEvent=undefined){
            var _local2:*;
            if ((global.xc & 0x0800)){
                main.mcLoad.OpenByN(30008);
            } else {
                _local2 = xatlib.xatlinks(xatlib.PageUrl(30008));
                xatlib.UrlPopup(xconst.ST(8), _local2, xconst.ST(17));
                xatlib.getURL(_local2, "_blank");
            };
        }
        static function BlowKiss(_arg1){
            var _local3:*;
            var _local2:* = new XMLDocument();
            _local3 = _local2.createElement("a");
            _local3.attributes.p = PassField.text;
            _local3.attributes.m = Messfld.text;
            _local3.attributes.k = _arg1.n;
            if (_arg1.n == "T"){
                _local3.attributes.x = xatlib.xInt(tXats.text);
                _local3.attributes.s = xatlib.xInt(tTime.text);
                if (_local3.attributes.x < 0){
                    return;
                };
                if (_local3.attributes.s < 0){
                    return;
                };
                if ((((_local3.attributes.s == 0)) && ((_local3.attributes.x < 10)))){
                    return;
                };
                if ((((_local3.attributes.s == 0)) && ((_local3.attributes.x == 0)))){
                    return;
                };
            };
            if (_arg1.Type == 2){
                _local3.attributes.b = 1;
            } else {
                if (_arg1.Type == 3){
                    _local3.attributes.b = _arg1.b;
                } else {
                    if (_arg1.Type == 4){
                        _local3.attributes.f = _arg1.b;
                    };
                };
            };
            _local2.appendChild(_local3);
            network.socket.send(xatlib.XMLOrder(_local2, new Array("f", "b", "s", "x", "k", "m", "p")));
            xatlib.GeneralMessage("", xconst.ST(211));
        }
        public static function Kiss(_arg1){
            var _local2:*;
            main.DialogClose();
            xatlib.GeneralMessage();
            CloseKiss();
            KissMc = new MovieClip();
            main.kiss_layer.addChild(KissMc);
            if ((((_arg1.k == "Snow")) && (!(todo.HasPower(xatlib.FindUser(_arg1.u), 56))))){
                return;
            };
            if (_arg1.k == "T"){
                _local2 = _arg1.b;
                if (((_local2) && ((((todo.w_userno == _local2)) || ((todo.w_userno == _arg1.u)))))){
                    xatlib.GeneralMessage("", (xconst.ST(162, _arg1.x, _arg1.s, xatlib.IdToRegName(_arg1.u), xatlib.IdToRegName(_local2)) + _arg1.t));
                    network.NetworkLogin(todo.w_userno, 0);
                    todo.WV2 = true;
                };
                return;
            };
            mc3o = _arg1;
            LoadAs2Kiss();
            AddName(todo.Users[xatlib.FindUser(xatlib.xInt(mc3o.u))].n);
            _local2 = mc3o.f;
            if (!_local2){
                _local2 = mc3o.b;
            };
            if ((((todo.w_userno == mc3o.u)) || (((_local2) && ((todo.w_userno == _local2)))))){
                network.NetworkLogin(todo.w_userno, 0);
                todo.WV2 = true;
            };
            KissTime = -1;
            KissMc.addEventListener(Event.ENTER_FRAME, KissTick);
        }
        static function CreateBuystuff(_arg1, _arg2=0){
            var _local4:*;
            var _local8:*;
            var _local11:*;
            main.DialogClose();
            main.DialogOpen = 3;
            _arg2 = xatlib.xInt(_arg2);
            var _local3:Date = new Date();
            var _local5:* = undefined;
            var _local6:* = xatlib.FindUser(_arg1);
            if (_local6 >= 0){
                _local5 = todo.Users[_local6].registered;
            };
            var _local7:Array = new Array(440, 365, 285, 305);
            switch (_arg2){
                case 1:
                    _local8 = xconst.ST(221);
                    break;
                case 2:
                    _local8 = xconst.ST(222);
                    break;
                case 3:
                    _local8 = xconst.ST(223, _local5);
                    break;
                default:
                    _local8 = xconst.ST(224);
            };
            var _local9:* = ((480 - _local7[_arg2]) / 2);
            mcBuystuffbackground = new xDialog(main.dialogs, xatlib.NX(20), xatlib.NY(_local9), xatlib.NX(600), xatlib.NY(_local7[_arg2]), _local8, undefined, 0, mcBuystuffbackground_close);
            _local9 = (_local9 + 30);
            var _local10:MovieClip = mcBuystuffbackground.Dia;
            if (_arg2 == 3){
                _local8 = xconst.ST(181);
            } else {
                _local8 = xconst.ST(182);
            };
            _local10.txt1 = new MovieClip();
            _local10.addChild(_local10.txt1);
            xatlib.createTextNoWrap(_local10.txt1, xatlib.NX((12 + 24)), xatlib.NY(_local9), xatlib.NX(560), xatlib.NY(32), _local8, 0x202020, 0, 100, 0, 18, "left", 1);
            _local9 = (_local9 + 35);
            xatlib.createTextNoWrap(_local10.txt1, xatlib.NX((12 + 24)), xatlib.NY(_local9), xatlib.NX(100), xatlib.NY(32), xconst.ST(183), 0x202020, 0, 100, 0, 24, "left", 1);
            Messfldbackground = xatlib.AddBackground(_local10, xatlib.NX((120 + 24)), xatlib.NY(_local9), xatlib.NX(460), xatlib.NY(32));
            Messfld = xatlib.AddTextField(Messfldbackground, 0, xatlib.NY(6), xatlib.NX(460), xatlib.NY(32));
            Messfld.type = TextFieldType.INPUT;
            Messfld.addEventListener(Event.CHANGE, xatlib.RemoveCR);
            _local9 = (_local9 + 35);
            xatlib.createTextNoWrap(_local10.txt1, xatlib.NX((12 + 24)), xatlib.NY(_local9), xatlib.NX(100), xatlib.NY(32), xconst.ST(184), 0x202020, 0, 100, 0, 24, "left", 1);
            PassFieldbackground = xatlib.AddBackground(_local10, xatlib.NX((120 + 24)), xatlib.NY(_local9), xatlib.NX(460), xatlib.NY(32));
            PassField = xatlib.AddTextField(PassFieldbackground, 0, xatlib.NY(6), xatlib.NX(460), xatlib.NY(32));
            PassField.type = TextFieldType.INPUT;
            PassField.displayAsPassword = true;
            PassField.addEventListener(Event.CHANGE, xatlib.RemoveCR);
            _local9 = (_local9 + 50);
            _local10.Kiss = new Array();
            switch (_arg2){
                case 0:
                    _local4 = 0;
                    while (_local4 < 3) {
                        _local9 = (_local9 + AddKisses((5 + (_local4 * 5)), 99, _local9, _local10, xconst.ST(185), 25));
                        _local4++;
                    };
                    break;
                case 1:
                    _local9 = (_local9 + AddKisses(0, 2, _local9, _local10, "Marry", 200, new Array(3, 3), _arg1));
                    _local9 = (_local9 + AddKisses(2, 1, _local9, _local10, "Best Friend", 200, new Array(4, 0), _arg1));
                    break;
                case 2:
                    _local9 = (_local9 + AddKisses(3, 2, _local9, _local10, xconst.ST(150), 0, 2));
                    break;
                case 3:
                    _local9 = (_local9 + 10);
                    xatlib.createTextNoWrap(_local10.txt1, xatlib.NX((12 + 24)), xatlib.NY(_local9), xatlib.NX(210), xatlib.NY(32), xconst.ST(202, _local5), 0x202020, 0, 100, 0, 24, "left", 1);
                    xatlib.createTextNoWrap(_local10.txt1, xatlib.NX(((12 + 24) + 230)), xatlib.NY(_local9), xatlib.NX(60), xatlib.NY(32), (xconst.ST(205) + ":"), 0x202020, 0, 100, 0, 20, "left", 1);
                    tXatsbackground = xatlib.AddBackground(_local10, xatlib.NX(((12 + 24) + 290)), xatlib.NY(_local9), xatlib.NX(50), xatlib.NY(32));
                    tXats = xatlib.AddTextField(tXatsbackground, 0, xatlib.NY(6), xatlib.NX(50), xatlib.NY(32));
                    tXats.type = TextFieldType.INPUT;
                    tXats.defaultTextFormat = main.fmt;
                    tXats.addEventListener(Event.CHANGE, xatlib.RemoveCR);
                    xatlib.createTextNoWrap(_local10.txt1, xatlib.NX((((12 + 24) + 230) + 120)), xatlib.NY(_local9), xatlib.NX(60), xatlib.NY(32), (xconst.ST(208) + ":"), 0x202020, 0, 100, 0, 20, "left", 1);
                    tTimebackground = xatlib.AddBackground(_local10, xatlib.NX((((12 + 24) + 290) + 120)), xatlib.NY(_local9), xatlib.NX(50), xatlib.NY(32));
                    tTime = xatlib.AddTextField(tTimebackground, 0, xatlib.NY(6), xatlib.NX(50), xatlib.NY(32));
                    tTime.type = TextFieldType.INPUT;
                    tTime.defaultTextFormat = main.fmt;
                    tTime.addEventListener(Event.CHANGE, xatlib.RemoveCR);
                    _local10.mcgo = new xBut(_local10, xatlib.NX(504), xatlib.NY(_local9), xatlib.NX(100), xatlib.NY(32), xconst.ST(149), Transfer_onRelease);
                    _local10.mcgo.But.b = _arg1;
                    _local9 = (_local9 + 50);
                    _local10.mctrade = new xBut(_local10, xatlib.NX(40), xatlib.NY(_local9), xatlib.NX(100), xatlib.NY(32), "Trade", Trade_onRelease);
                    xatlib.createTextNoWrap(_local10.txt1, xatlib.NX(152), xatlib.NY(_local9), xatlib.NX(448), xatlib.NY(32), "Open the trading engine for easier and safer trading.", 0x202020, 0, 100, 0, 24, "left", 1);
                    _local9 = (_local9 + 50);
                    break;
            };
            if (((todo.w_VIP) && (network.YC))){
                _local11 = (xatlib.xInt(todo.w_d1) - network.YC);
                if (_local11 < 0){
                    _local11 = 0;
                };
                _local11 = xatlib.xInt(((_local11 / (24 * 3600)) + 0.3));
                xatlib.createTextNoWrap(_local10.txt1, xatlib.NX((12 + 24)), xatlib.NY(_local9), xatlib.NX(160), xatlib.NY(33), ((xconst.ST(203) + "\n") + xconst.ST(204, _local11)), 0x202020, 0, 100, 0, 24, "left", 1);
            };
            _local10.mcok = new xBut(_local10, xatlib.NX(240), xatlib.NY(_local9), xatlib.NX(160), xatlib.NY(30), xconst.ST(66), K_Can_onRelease);
            if (todo.w_coins){
                _local10.coins = xatlib.AttachMovie(_local10, "coins", {
                    x:xatlib.NX(440),
                    y:xatlib.NY(_local9),
                    scaleX:xatlib.SX(),
                    scaleY:xatlib.SY()
                });
                xatlib.createTextNoWrap(_local10.coins, 30, -10, 130, 50, ((todo.w_coins + " ") + xconst.ST(205)), 0x202020, 0, 100, 0, 26, "center", 1);
                _local10.coins.onRelease = BuyRelease;
            } else {
                CoinB = new xBut(_local10, xatlib.NX(440), xatlib.NY(_local9), xatlib.NX(160), xatlib.NY(30), ("  " + xconst.ST(206)), BuyRelease);
                xatlib.AttachMovie(CoinB.But, "coins");
                CoinB.But.c.scaleX = xatlib.SX(0.8);
                CoinB.But.c.scaleY = xatlib.SY(0.8);
                CoinB.But.c.x = xatlib.NX(10);
                CoinB.But.c.y = xatlib.NY(5);
            };
            if (((chat.isKeyDown(Keyboard.SHIFT)) || ((((todo.w_coins == 0)) && ((xatlib.xInt(todo.w_d1) < network.YC)))))){
                AddAd();
            };
        }
        static function Transfer_onRelease(_arg1:MouseEvent){
            BlowKiss({
                b:_arg1.currentTarget.b,
                n:"T",
                Type:3
            });
        }
        static function CloseAd(){
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class chatmain extends MovieClip {

        public var c;

        public function chatmain(){
            addFrameScript(0, this.frame1);
        }
        function frame1(){
            this.c = new chat();
            parent.addChild(this.c);
            stop();
        }

    }
}//package 
﻿package {
    import flash.events.*;
    import flash.display.*;

    public dynamic class GetStuff2 extends MovieClip {

        public var egg:Ball2;
        public var wait;
        public var tk;
        public var X;
        public var Y;
        public var Z;

        public function GetStuff2(){
            addFrameScript(0, this.frame1);
        }
        function frame1(){
            this.wait = 90;
            this.tk = 0;
            this.Z = 0;
            this.X = this.egg.x;
            this.Y = this.egg.y;
            addEventListener(Event.ENTER_FRAME, this.Tick);
        }
        public function Tick(_arg1){
            this.tk++;
            if (this.tk > this.wait){
                if ((this.Z & 1)){
                    this.egg.x = (this.X + (((this.tk & 1) == 0)) ? -1 : 1);
                } else {
                    this.egg.y = (this.Y + (((this.tk & 1) == 0)) ? -1 : 1);
                };
                if (this.tk > (this.wait + 22)){
                    this.tk = 0;
                    this.Z++;
                };
            } else {
                this.egg.x = this.X;
                this.egg.y = this.Y;
            };
        }

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class rolleyes extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class glint extends MovieClip {

    }
}//package 
﻿package {
    import flash.display.*;

    public dynamic class lock extends MovieClip {

        public var back:MovieClip;

    }
}//package
